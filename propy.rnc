namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/1999/xhtml"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
default namespace tei = "http://www.tei-c.org/ns/1.0"
namespace teix = "http://www.tei-c.org/ns/Examples"
namespace xi = "http://www.w3.org/2001/XInclude"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2023-03-24T12:52:41Z. .
# TEI Edition: 
# TEI Edition Location: https://www.tei-c.org/Vault/P5//
#

#
tei_macro.abContent = (text | tei_model.paraPart | tei_ab)*
tei_macro.paraContent = (text | tei_model.paraPart)*
tei_macro.limitedContent =
  (text | tei_model.limitedPhrase | tei_model.inter)*
tei_macro.phraseSeq =
  (text
   | tei_model.gLike
   | tei_model.attributable
   | tei_model.phrase
   | tei_model.global)*
tei_macro.phraseSeq.limited =
  (text | tei_model.limitedPhrase | tei_model.global)*
tei_macro.specialPara =
  (text
   | tei_model.gLike
   | tei_model.phrase
   | tei_model.inter
   | tei_model.divPart
   | tei_model.global)*
tei_macro.xtext = (text | tei_model.gLike)*
anyElement-xenoData =
  element * - (tei:* | teix:egXML) {
    attribute * { text }*,
    (text | anyElement-xenoData)*
  }
tei_att.anchoring.attributes =
  tei_att.anchoring.attribute.anchored,
  tei_att.anchoring.attribute.targetEnd
tei_att.anchoring.attribute.anchored =
  
  ## (verankert) gibt an, ob eine Vorlage den exakten Referenzort der Anmerkung anzeigt.
  [ a:defaultValue = "true" ] attribute anchored { xsd:boolean }?
tei_att.anchoring.attribute.targetEnd =
  [
    a:documentation [
      "(Bereichsende) verweist auf das Ende eines Bereichs, dem das "
      ns1:code [ "<note>" ]
      "-Element angef√ºgt ist, es sei denn die Anmerkung ist in den Text an diesem Punkt bereits eingebettet."
    ]
  ]
  attribute targetEnd {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ascribed.attributes = tei_att.ascribed.attribute.who
tei_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ascribed.directed.attributes =
  tei_att.ascribed.attributes,
  tei_att.ascribed.directed.attribute.toWhom
tei_att.ascribed.directed.attribute.toWhom =
  
  ## indicates the person, or group of people, to whom a speech act or action is directed.
  attribute toWhom {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.canonical.attributes =
  tei_att.canonical.attribute.key, tei_att.canonical.attribute.ref
tei_att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { xsd:string }?
tei_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition or identity for the entity being named by means of one or more URIs.
  attribute ref {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.ranging.attributes =
  tei_att.ranging.attribute.atLeast,
  tei_att.ranging.attribute.atMost,
  tei_att.ranging.attribute.min,
  tei_att.ranging.attribute.max,
  tei_att.ranging.attribute.confidence
tei_att.ranging.attribute.atLeast =
  
  ## gives a minimum estimated value for the approximate measurement.
  attribute atLeast {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.atMost =
  
  ## gives a maximum estimated value for the approximate measurement.
  attribute atMost {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.min =
  
  ## where the measurement summarizes more than one observation or a range, supplies the minimum value observed.
  attribute min {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.max =
  
  ## where the measurement summarizes more than one observation or a range, supplies the maximum value observed.
  attribute max {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.ranging.attribute.confidence =
  [
    a:documentation [
      "specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by "
      ns1:code [ "@min" ]
      " and "
      ns1:code [ "@max" ]
      ", or the proportion of observed values that fall within that range."
    ]
  ]
  attribute confidence { xsd:double }?
tei_att.dimensions.attributes =
  tei_att.ranging.attributes,
  tei_att.dimensions.attribute.unit,
  tei_att.dimensions.attribute.quantity,
  tei_att.dimensions.attribute.extent,
  tei_att.dimensions.attribute.precision,
  tei_att.dimensions.attribute.scope
tei_att.dimensions.attribute.unit =
  
  ## names the unit used for the measurement
  ## Suggested values include: 1] cm (centimetres); 2] mm (millimetres); 3] in (inches); 4] line; 5] char (characters)
  attribute unit {
    
    ## (centimetres) 
    "cm"
    | 
      ## (millimetres) 
      "mm"
    | 
      ## (inches) 
      "in"
    | 
      ## lines of text
      "line"
    | 
      ## (characters) characters of text
      "char"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.dimensions.attribute.quantity =
  
  ## specifies the length in the units specified
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.dimensions.attribute.extent =
  
  ## indicates the size of the object concerned using a project-specific vocabulary combining quantity and units in a single string of words.
  attribute extent { xsd:string }?
tei_att.dimensions.attribute.precision =
  
  ## characterizes the precision of the values specified by the other attributes.
  attribute precision {
    
    ##
    "high"
    | 
      ##
      "medium"
    | 
      ##
      "low"
    | 
      ##
      "unknown"
  }?
tei_att.dimensions.attribute.scope =
  
  ## where the measurement summarizes more than one observation, specifies the applicability of this measurement.
  ## Sample values include: 1] all; 2] most; 3] range
  attribute scope {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.written.attributes = tei_att.written.attribute.hand
tei_att.written.attribute.hand =
  [
    a:documentation [
      "points to a "
      ns1:code [ "<handNote>" ]
      " element describing the hand considered responsible for the content of the element concerned."
    ]
  ]
  attribute hand {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.damaged.attributes =
  tei_att.dimensions.attributes,
  tei_att.written.attributes,
  tei_att.damaged.attribute.agent,
  tei_att.damaged.attribute.degree,
  tei_att.damaged.attribute.group
tei_att.damaged.attribute.agent =
  
  ## categorizes the cause of the damage, if it can be identified.
  ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
  attribute agent {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.damaged.attribute.degree =
  [
    a:documentation [
      "provides a coded representation of the degree of damage, either as a number between 0 (undamaged) and 1 (very extensively damaged), or as one of the codes high, medium, low, or unknown. The "
      ns1:code [ "<damage>" ]
      " element with the "
      ns1:code [ "@degree" ]
      " attribute should only be used where the text may be read with some confidence; text supplied from other sources should be tagged as "
      ns1:code [ "<supplied>" ]
      "."
    ]
  ]
  attribute degree {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
tei_att.damaged.attribute.group =
  
  ## assigns an arbitrary number to each stretch of damage regarded as forming part of the same physical phenomenon.
  attribute group { xsd:nonNegativeInteger }?
tei_att.breaking.attributes = tei_att.breaking.attribute.break
tei_att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.cReferencing.attributes = tei_att.cReferencing.attribute.cRef
tei_att.cReferencing.attribute.cRef =
  [
    a:documentation [
      "(canonical reference) specifies the destination of the pointer by supplying a canonical reference expressed using the scheme defined in a "
      ns1:code [ "<refsDecl>" ]
      " element in the TEI header"
    ]
  ]
  attribute cRef { xsd:string }?
tei_att.datable.w3c.attributes =
  tei_att.datable.w3c.attribute.when,
  tei_att.datable.w3c.attribute.notBefore,
  tei_att.datable.w3c.attribute.notAfter,
  tei_att.datable.w3c.attribute.from,
  tei_att.datable.w3c.attribute.to
tei_att.datable.w3c.attribute.when =
  
  ## supplies the value of the date or time in a standard form, e.g. yyyy-mm-dd.
  attribute when {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notBefore =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.notAfter =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.from =
  
  ## indicates the starting point of the period in standard form, e.g. yyyy-mm-dd.
  attribute from {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
tei_att.datable.w3c.attribute.to =
  
  ## indicates the ending point of the period in standard form, e.g. yyyy-mm-dd.
  attribute to {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
  }?
sch:pattern [
  id = "propy-att.datable.w3c-att-datable-w3c-when-constraint-rule-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@when]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore|@notAfter|@from|@to"
      role = "nonfatal"
      "The @when attribute cannot be used with any other att.datable.w3c attributes."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "propy-att.datable.w3c-att-datable-w3c-from-constraint-rule-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@from]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notBefore"
      role = "nonfatal"
      "The @from and @notBefore attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
sch:pattern [
  id = "propy-att.datable.w3c-att-datable-w3c-to-constraint-rule-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@to]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@notAfter"
      role = "nonfatal"
      "The @to and @notAfter attributes cannot be used together."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.datable.attributes =
  tei_att.datable.w3c.attributes,
  tei_att.datable.iso.attributes,
  tei_att.datable.custom.attributes,
  tei_att.datable.attribute.calendar,
  tei_att.datable.attribute.period
tei_att.datable.attribute.calendar =
  
  ## indicates one or more systems or calendars to which the date represented by the content of this element belongs.
  attribute calendar {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id = "propy-att.datable-calendar-calendar-constraint-rule-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "string-length( normalize-space(.) ) gt 0"
      " @calendar indicates one or more\x{a}" ~
      "            systems or calendars to which the date represented by the content of this element belongs,\x{a}" ~
      "            but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.datable.attribute.period =
  [
    a:documentation [
      "supplies pointers to one or more definitions of named periods of time (typically "
      ns1:code [ "<category>" ]
      "s or "
      ns1:code [ "<calendar>" ]
      "s) within which the datable item is understood to have occurred."
    ]
  ]
  attribute period {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attributes =
  tei_att.datcat.attribute.datcat,
  tei_att.datcat.attribute.valueDatcat,
  tei_att.datcat.attribute.targetDatcat
tei_att.datcat.attribute.datcat =
  [
    a:documentation [
      "provides a pointer to a definition of, and/or general information about, (a) an information container (element or attribute) or (b) a value of an information container (element content or attribute value), by referencing an external taxonomy or ontology. If "
      ns1:code [ "@valueDatcat" ]
      " is present in the immediate context, this attribute takes on role (a), while "
      ns1:code [ "@valueDatcat" ]
      " performs role (b)."
    ]
  ]
  attribute datcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attribute.valueDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about a value of an information container (element content or attribute value), by reference to an external taxonomy or ontology. Used especially where a contrast with "
      ns1:code [ "@datcat" ]
      " is needed."
    ]
  ]
  attribute valueDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.datcat.attribute.targetDatcat =
  [
    a:documentation [
      "provides a definition of, and/or general information about, information structure of an object referenced or modeled by the containing element, by reference to an external taxonomy or ontology. This attribute has the characteristics of the "
      ns1:code [ "@datcat" ]
      " attribute, except that it addresses not its containing element, but an object that is being referenced or modeled by its containing element."
    ]
  ]
  attribute targetDatcat {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.declarable.attributes = tei_att.declarable.attribute.default
tei_att.declarable.attribute.default =
  
  ## indicates whether or not this element is selected by default when its parent is selected.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## This element is selected if its parent is selected
    "true"
    | 
      ## This element can only be selected explicitly, unless it is the only one of its kind, in which case it is selected if its parent is selected.
      "false"
  }?
tei_att.declaring.attributes = tei_att.declaring.attribute.decls
tei_att.declaring.attribute.decls =
  
  ## (declarations) identifies one or more declarable elements within the header, which are understood to apply to the element bearing this attribute and its content.
  attribute decls {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.fragmentable.attributes = tei_att.fragmentable.attribute.part
tei_att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) the element is not fragmented, or no claim is made as to its completeness
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
tei_att.divLike.attributes =
  tei_att.fragmentable.attributes,
  tei_att.divLike.attribute.org,
  tei_att.divLike.attribute.sample
tei_att.divLike.attribute.org =
  
  ## (organization) specifies how the content of the division is organized.
  [ a:defaultValue = "uniform" ]
  attribute org {
    
    ## no claim is made about the sequence in which the immediate contents of this division are to be processed, or their inter-relationships.
    "composite"
    | 
      ## the immediate contents of this element are regarded as forming a logical unit, to be processed in sequence.
      "uniform"
  }?
tei_att.divLike.attribute.sample =
  
  ## indicates whether this division is a sample of the original source and if so, from which part.
  [ a:defaultValue = "complete" ]
  attribute sample {
    
    ## division lacks material present at end in source.
    "initial"
    | 
      ## division lacks material at start and end.
      "medial"
    | 
      ## division lacks material at start.
      "final"
    | 
      ## position of sampled material within original unknown.
      "unknown"
    | 
      ## division is not a sample.
      "complete"
  }?
tei_att.docStatus.attributes = tei_att.docStatus.attribute.status
tei_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.global.responsibility.attributes =
  tei_att.global.responsibility.attribute.cert,
  tei_att.global.responsibility.attribute.resp
tei_att.global.responsibility.attribute.cert =
  
  ## (certainty) signifies the degree of certainty associated with the intervention or interpretation.
  attribute cert {
    xsd:double
    | (
       ##
       "high"
       | 
         ##
         "medium"
       | 
         ##
         "low"
       | 
         ##
         "unknown")
  }?
tei_att.global.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.editLike.attributes =
  tei_att.editLike.attribute.evidence,
  tei_att.editLike.attribute.instant
tei_att.editLike.attribute.evidence =
  
  ## indicates the nature of the evidence supporting the reliability or accuracy of the intervention or interpretation.
  ## Suggested values include: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## there is internal evidence to support the intervention.
       "internal"
       | 
         ## there is external evidence to support the intervention.
         "external"
       | 
         ## the intervention or interpretation has been made by the editor, cataloguer, or scholar on the basis of their expertise.
         "conjecture"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
tei_att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ]
  attribute instant {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
tei_att.global.rendition.attributes =
  tei_att.global.rendition.attribute.rend,
  tei_att.global.rendition.attribute.style,
  tei_att.global.rendition.attribute.rendition
tei_att.global.rendition.attribute.rend =
  
  ## (rendition) indicates how the element in question was rendered or presented in the source text.
  attribute rend {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { xsd:string }?
tei_att.global.rendition.attribute.rendition =
  
  ## points to a description of the rendering or presentation used for this element in the source text.
  attribute rendition {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.source.attributes =
  tei_att.global.source.attribute.source
tei_att.global.source.attribute.source =
  
  ## specifies the source from which some aspect of this element is drawn.
  attribute source {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
sch:pattern [
  id =
    "propy-att.global.source-source-only_1_ODD_source-constraint-rule-5"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@source]"
    "\x{a}" ~
    "         "
    sch:let [
      name = "srcs"
      value = "tokenize( normalize-space(@source),' ')"
    ]
    "\x{a}" ~
    "         "
    sch:report [
      test =
        "( self::tei:classRef               | self::tei:dataRef               | self::tei:elementRef               | self::tei:macroRef               | self::tei:moduleRef               | self::tei:schemaSpec )               and               $srcs[2]"
      "\x{a}" ~
      "              When used on a schema description element (like\x{a}" ~
      "              "
      sch:value-of [ select = "name(.)" ]
      "), the @source attribute\x{a}" ~
      "              should have only 1 value. (This one has "
      sch:value-of [ select = "count($srcs)" ]
      ".)\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.global.attributes =
  tei_att.global.rendition.attributes,
  tei_att.global.linking.attributes,
  tei_att.global.facs.attributes,
  tei_att.global.change.attributes,
  tei_att.global.responsibility.attributes,
  tei_att.global.source.attributes,
  tei_att.global.attribute.xmlid,
  tei_att.global.attribute.n,
  tei_att.global.attribute.xmllang,
  tei_att.global.attribute.xmlbase,
  tei_att.global.attribute.xmlspace
tei_att.global.attribute.xmlid =
  
  ## (identifier) provides a unique identifier for the element bearing the attribute.
  attribute xml:id { xsd:ID }?
tei_att.global.attribute.n =
  
  ## (number) gives a number (or other label) for an element, which is not necessarily unique within the document.
  attribute n { xsd:string }?
tei_att.global.attribute.xmllang =
  [
    a:documentation [
      "(language) indicates the language of the element content using a tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute xml:lang {
    xsd:language
    | (
       ##
       "")
  }?
tei_att.global.attribute.xmlbase =
  
  ## provides a base URI reference with which applications can resolve relative URI references into absolute URI references.
  attribute xml:base {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.attribute.xmlspace =
  
  ## signals an intention about how white space should be managed by applications.
  attribute xml:space {
    
    ## signals that the application's default white-space processing modes are acceptable
    "default"
    | 
      ## indicates the intent that applications preserve all white space
      "preserve"
  }?
tei_att.handFeatures.attributes =
  tei_att.handFeatures.attribute.scribe,
  tei_att.handFeatures.attribute.scribeRef,
  tei_att.handFeatures.attribute.script,
  tei_att.handFeatures.attribute.scriptRef,
  tei_att.handFeatures.attribute.medium,
  tei_att.handFeatures.attribute.scope
tei_att.handFeatures.attribute.scribe =
  
  ## gives a name or other identifier for the scribe believed to be responsible for this hand.
  attribute scribe { xsd:Name }?
tei_att.handFeatures.attribute.scribeRef =
  [
    a:documentation [
      "points to a full description of the scribe concerned, typically supplied by a "
      ns1:code [ "<person>" ]
      " element elsewhere in the description."
    ]
  ]
  attribute scribeRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.handFeatures.attribute.script =
  
  ## characterizes the particular script or writing style used by this hand, for example secretary, copperplate, Chancery, Italian, etc.
  attribute script {
    list { xsd:Name+ }
  }?
tei_att.handFeatures.attribute.scriptRef =
  [
    a:documentation [
      "points to a full description of the script or writing style used by this hand, typically supplied by a "
      ns1:code [ "<scriptNote>" ]
      " element elsewhere in the description."
    ]
  ]
  attribute scriptRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.handFeatures.attribute.medium =
  
  ## describes the tint or type of ink, e.g. brown, or other writing medium, e.g. pencil
  attribute medium {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.handFeatures.attribute.scope =
  
  ## specifies how widely this hand is used in the manuscript.
  attribute scope {
    
    ## only this hand is used throughout the manuscript
    "sole"
    | 
      ## this hand is used through most of the manuscript
      "major"
    | 
      ## this hand is used occasionally in the manuscript
      "minor"
  }?
tei_att.internetMedia.attributes =
  tei_att.internetMedia.attribute.mimeType
tei_att.internetMedia.attribute.mimeType =
  
  ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
  attribute mimeType {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.media.attributes =
  tei_att.internetMedia.attributes,
  tei_att.media.attribute.width,
  tei_att.media.attribute.height,
  tei_att.media.attribute.scale
tei_att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width
  attribute width {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|ch|rem|vw|vh|vmin|vmax)"
    }
  }?
tei_att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height {
    xsd:token {
      pattern =
        "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|ch|rem|vw|vh|vmin|vmax)"
    }
  }?
tei_att.media.attribute.scale =
  
  ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
  attribute scale {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.resourced.attributes = tei_att.resourced.attribute.url
tei_att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url {
    xsd:anyURI { pattern = "\S+" }
  }
tei_att.measurement.attributes =
  tei_att.measurement.attribute.unit,
  tei_att.measurement.attribute.unitRef,
  tei_att.measurement.attribute.quantity,
  tei_att.measurement.attribute.commodity
tei_att.measurement.attribute.unit =
  
  ## (unit) indicates the units used for the measurement, usually using the standard symbol for the desired units.
  ## Suggested values include: 1] m (metre); 2] kg (kilogram); 3] s (second); 4] Hz (hertz); 5] Pa (pascal); 6] Œ© (ohm); 7] L (litre); 8] t (tonne); 9] ha (hectare); 10] √Ö (√•ngstr√∂m); 11] mL (millilitre); 12] cm (centimetre); 13] dB (decibel); 14] kbit (kilobit); 15] Kibit (kibibit); 16] kB (kilobyte); 17] KiB (kibibyte); 18] MB (megabyte); 19] MiB (mebibyte)
  attribute unit {
    
    ## (metre) SI base unit of length
    "m"
    | 
      ## (kilogram) SI base unit of mass
      "kg"
    | 
      ## (second) SI base unit of time
      "s"
    | 
      ## (hertz) SI unit of frequency
      "Hz"
    | 
      ## (pascal) SI unit of pressure or stress
      "Pa"
    | 
      ## (ohm) SI unit of electric resistance
      "Œ©"
    | 
      ## (litre) 1 dm¬≥
      "L"
    | 
      ## (tonne) 10¬≥ kg
      "t"
    | 
      ## (hectare) 1 hm¬≤
      "ha"
    | 
      ## (√•ngstr√∂m) 10‚Åª¬π‚Å∞ m
      "√Ö"
    | 
      ## (millilitre) 
      "mL"
    | 
      ## (centimetre) 
      "cm"
    | 
      ## (decibel) see remarks, below
      "dB"
    | 
      ## (kilobit) 10¬≥ or 1000 bits
      "kbit"
    | 
      ## (kibibit) 2¬π‚Å∞ or 1024 bits
      "Kibit"
    | 
      ## (kilobyte) 10¬≥ or 1000 bytes
      "kB"
    | 
      ## (kibibyte) 2¬π‚Å∞ or 1024 bytes
      "KiB"
    | 
      ## (megabyte) 10‚Å∂ or 1‚ÄØ000‚ÄØ000 bytes
      "MB"
    | 
      ## (mebibyte) 2¬≤‚Å∞ or 1‚ÄØ048‚ÄØ576 bytes
      "MiB"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.measurement.attribute.unitRef =
  [
    a:documentation [
      "points to a unique identifier stored in the "
      ns1:code [ "@xml:id" ]
      " of a "
      ns1:code [ "<unitDef>" ]
      " element that defines a unit of measure."
    ]
  ]
  attribute unitRef {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.measurement.attribute.quantity =
  
  ## (quantity) specifies the number of the specified units that comprise the measurement
  attribute quantity {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.measurement.attribute.commodity =
  
  ## (commodity) indicates the substance that is being measured
  attribute commodity {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
sch:pattern [
  id = "propy-att.measurement-att-measurement-unitRef-constraint-rule-6"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@unitRef]"
    "\x{a}" ~
    "         "
    sch:report [
      test = "@unit"
      role = "info"
      "The @unit attribute may be unnecessary when @unitRef is present."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.naming.attributes =
  tei_att.canonical.attributes,
  tei_att.naming.attribute.role,
  tei_att.naming.attribute.nymRef
tei_att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.naming.attribute.nymRef =
  
  ## (reference to the canonical name) provides a means of locating the canonical form (nym) of the names associated with the object named by the element bearing it.
  attribute nymRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.notated.attributes = tei_att.notated.attribute.notation
tei_att.notated.attribute.notation =
  
  ## names the notation used for the content of the element.
  attribute notation {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.placement.attributes = tei_att.placement.attribute.place
tei_att.placement.attribute.place =
  
  ## specifies where this item is placed.
  ## Suggested values include: 1] top; 2] bottom; 3] margin; 4] opposite; 5] overleaf; 6] above; 7] right; 8] below; 9] left; 10] end; 11] inline; 12] inspace
  attribute place {
    list {
      (
       ## at the top of the page
       "top"
       | 
         ## at the foot of the page
         "bottom"
       | 
         ## in the margin (left, right, or both)
         "margin"
       | 
         ## on the opposite, i.e. facing, page
         "opposite"
       | 
         ## on the other side of the leaf
         "overleaf"
       | 
         ## above the line
         "above"
       | 
         ## to the right, e.g. to the right of a vertical line of text, or to the right of a figure
         "right"
       | 
         ## below the line
         "below"
       | 
         ## to the left, e.g. to the left of a vertical line of text, or to the left of a figure
         "left"
       | 
         ## at the end of e.g. chapter or volume.
         "end"
       | 
         ## within the body of the text.
         "inline"
       | 
         ## in a predefined space, for example left by an earlier scribe.
         "inspace"
       | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
    }
  }?
tei_att.typed.attributes =
  tei_att.typed.attribute.type, tei_att.typed.attribute.subtype
tei_att.typed.attribute.type =
  
  ## characterizes the element in some sense, using any convenient classification scheme or typology.
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.typed.attribute.subtype =
  
  ## (subtype) provides a sub-categorization of the element, if needed
  attribute subtype {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
sch:pattern [
  id = "propy-att.typed-subtypeTyped-constraint-rule-7"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@subtype]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.pointing.attributes =
  tei_att.pointing.attribute.targetLang,
  tei_att.pointing.attribute.target,
  tei_att.pointing.attribute.evaluate
tei_att.pointing.attribute.targetLang =
  [
    a:documentation [
      "specifies the language of the content to be found at the destination referenced by "
      ns1:code [ "@target" ]
      ", using a language tag generated according to "
      ns1:a [
        href = "http://www.rfc-editor.org/rfc/bcp/bcp47.txt"
        "BCP 47"
      ]
      "."
    ]
  ]
  attribute targetLang {
    xsd:language
    | (
       ##
       "")
  }?
sch:pattern [
  id = "propy-att.pointing-targetLang-targetLang-constraint-rule-8"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@target"
      "@targetLang should only be used on "
      sch:name [ ]
      " if @target is specified."
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.pointing.attribute.target =
  
  ## specifies the destination of the reference by supplying one or more URI References
  attribute target {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.pointing.attribute.evaluate =
  
  ## (evaluate) specifies the intended meaning when the target of a pointer is itself a pointer.
  attribute evaluate {
    
    ## if the element pointed to is itself a pointer, then the target of that pointer will be taken, and so on, until an element is found which is not a pointer.
    "all"
    | 
      ## if the element pointed to is itself a pointer, then its target (whether a pointer or not) is taken as the target of this pointer.
      "one"
    | 
      ## no further evaluation of targets is carried out beyond that needed to find the element specified in the pointer's target.
      "none"
  }?
tei_att.pointing.group.attributes =
  tei_att.pointing.attributes,
  tei_att.typed.attributes,
  tei_att.pointing.group.attribute.domains,
  tei_att.pointing.group.attribute.targFunc
tei_att.pointing.group.attribute.domains =
  
  ## optionally specifies the identifiers of the elements within which all elements indicated by the contents of this element lie.
  attribute domains {
    list {
      xsd:anyURI { pattern = "\S+" },
      xsd:anyURI { pattern = "\S+" },
      xsd:anyURI { pattern = "\S+" }*
    }
  }?
tei_att.pointing.group.attribute.targFunc =
  [
    a:documentation [
      "(target function) describes the function of each of the values of the "
      ns1:code [ "@target" ]
      " attribute of the enclosed "
      ns1:code [ "<link>" ]
      ", "
      ns1:code [ "<join>" ]
      ", or "
      ns1:code [ "<alt>" ]
      " tags."
    ]
  ]
  attribute targFunc {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" },
      xsd:token { pattern = "[^\p{C}\p{Z}]+" },
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }*
    }
  }?
tei_att.segLike.attributes =
  tei_att.datcat.attributes,
  tei_att.fragmentable.attributes,
  tei_att.segLike.attribute.function
tei_att.segLike.attribute.function =
  
  ## (function) characterizes the function of the segment.
  attribute function {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.sortable.attributes = tei_att.sortable.attribute.sortKey
tei_att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.edition.attributes =
  tei_att.edition.attribute.ed, tei_att.edition.attribute.edRef
tei_att.edition.attribute.ed =
  
  ## (edition) supplies a sigil or other arbitrary identifier for the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute ed {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.spanning.attributes = tei_att.spanning.attribute.spanTo
tei_att.spanning.attribute.spanTo =
  
  ## indicates the end of a span initiated by the element bearing this attribute.
  attribute spanTo {
    xsd:anyURI { pattern = "\S+" }
  }?
sch:pattern [
  id =
    "propy-att.spanning-spanTo-spanTo-points-to-following-constraint-rule-9"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "         "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "         "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.styleDef.attributes =
  tei_att.styleDef.attribute.scheme,
  tei_att.styleDef.attribute.schemeVersion
tei_att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
tei_att.styleDef.attribute.schemeVersion =
  [
    a:documentation [
      "supplies a version number for the style language provided in "
      ns1:code [ "@scheme" ]
      "."
    ]
  ]
  attribute schemeVersion {
    xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
  }?
sch:pattern [
  id =
    "propy-att.styleDef-schemeVersion-schemeVersionRequiresScheme-constraint-rule-10"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "         "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
tei_att.timed.attributes =
  tei_att.timed.attribute.start, tei_att.timed.attribute.end
tei_att.timed.attribute.start =
  
  ## indicates the location within a temporal alignment at which this element begins.
  attribute start {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.timed.attribute.end =
  
  ## indicates the location within a temporal alignment at which this element ends.
  attribute end {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.transcriptional.attributes =
  tei_att.editLike.attributes,
  tei_att.written.attributes,
  tei_att.transcriptional.attribute.status,
  tei_att.transcriptional.attribute.cause,
  tei_att.transcriptional.attribute.seq
tei_att.transcriptional.attribute.status =
  
  ## indicates the effect of the intervention, for example in the case of a deletion, strikeouts which include too much or too little text, or in the case of an addition, an insertion which duplicates some of the text already present.
  ## Sample values include: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  attribute cause {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.transcriptional.attribute.seq =
  
  ## (sequence) assigns a sequence number related to the order in which the encoded features carrying this attribute are believed to have occurred.
  attribute seq { xsd:nonNegativeInteger }?
tei_att.citing.attributes =
  tei_att.citing.attribute.unit,
  tei_att.citing.attribute.from,
  tei_att.citing.attribute.to
tei_att.citing.attribute.unit =
  
  ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume, entry.
  ## Suggested values include: 1] volume (volume); 2] issue; 3] page (page); 4] line; 5] chapter (chapter); 6] part; 7] column; 8] entry
  attribute unit {
    
    ## (volume) the element contains a volume number.
    "volume"
    | 
      ## the element contains an issue number, or volume and issue numbers.
      "issue"
    | 
      ## (page) the element contains a page number or page range.
      "page"
    | 
      ## the element contains a line number or line range.
      "line"
    | 
      ## (chapter) the element contains a chapter indication (number and/or title)
      "chapter"
    | 
      ## the element identifies a part of a book or collection.
      "part"
    | 
      ## the element identifies a column.
      "column"
    | 
      ## the element identifies an entry number or label in a list of entries.
      "entry"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.citing.attribute.from =
  [
    a:documentation [
      "specifies the starting point of the range of units indicated by the "
      ns1:code [ "@unit" ]
      " attribute."
    ]
  ]
  attribute from {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.citing.attribute.to =
  [
    a:documentation [
      "specifies the end-point of the range of units indicated by the "
      ns1:code [ "@unit" ]
      " attribute."
    ]
  ]
  attribute to {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_model.nameLike.agent = tei_name | tei_orgName | tei_persName
tei_model.nameLike.agent_alternation =
  tei_name | tei_orgName | tei_persName
tei_model.nameLike.agent_sequence = tei_name, tei_orgName, tei_persName
tei_model.nameLike.agent_sequenceOptional =
  tei_name?, tei_orgName?, tei_persName?
tei_model.nameLike.agent_sequenceOptionalRepeatable =
  tei_name*, tei_orgName*, tei_persName*
tei_model.nameLike.agent_sequenceRepeatable =
  tei_name+, tei_orgName+, tei_persName+
tei_model.segLike = tei_seg
tei_model.segLike_alternation = tei_seg
tei_model.segLike_sequence = tei_seg
tei_model.segLike_sequenceOptional = tei_seg?
tei_model.segLike_sequenceOptionalRepeatable = tei_seg*
tei_model.segLike_sequenceRepeatable = tei_seg+
tei_model.hiLike = tei_hi | tei_q
tei_model.hiLike_alternation = tei_hi | tei_q
tei_model.hiLike_sequence = tei_hi, tei_q
tei_model.hiLike_sequenceOptional = tei_hi?, tei_q?
tei_model.hiLike_sequenceOptionalRepeatable = tei_hi*, tei_q*
tei_model.hiLike_sequenceRepeatable = tei_hi+, tei_q+
tei_model.emphLike =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
tei_model.emphLike_alternation =
  tei_foreign
  | tei_emph
  | tei_distinct
  | tei_mentioned
  | tei_soCalled
  | tei_gloss
  | tei_term
  | tei_title
tei_model.emphLike_sequence =
  tei_foreign,
  tei_emph,
  tei_distinct,
  tei_mentioned,
  tei_soCalled,
  tei_gloss,
  tei_term,
  tei_title
tei_model.emphLike_sequenceOptional =
  tei_foreign?,
  tei_emph?,
  tei_distinct?,
  tei_mentioned?,
  tei_soCalled?,
  tei_gloss?,
  tei_term?,
  tei_title?
tei_model.emphLike_sequenceOptionalRepeatable =
  tei_foreign*,
  tei_emph*,
  tei_distinct*,
  tei_mentioned*,
  tei_soCalled*,
  tei_gloss*,
  tei_term*,
  tei_title*
tei_model.emphLike_sequenceRepeatable =
  tei_foreign+,
  tei_emph+,
  tei_distinct+,
  tei_mentioned+,
  tei_soCalled+,
  tei_gloss+,
  tei_term+,
  tei_title+
tei_model.highlighted = tei_model.hiLike | tei_model.emphLike
tei_model.highlighted_alternation =
  tei_model.hiLike_alternation | tei_model.emphLike_alternation
tei_model.highlighted_sequence =
  tei_model.hiLike_sequence, tei_model.emphLike_sequence
tei_model.highlighted_sequenceOptional =
  tei_model.hiLike_sequenceOptional?,
  tei_model.emphLike_sequenceOptional?
tei_model.highlighted_sequenceOptionalRepeatable =
  tei_model.hiLike_sequenceOptionalRepeatable*,
  tei_model.emphLike_sequenceOptionalRepeatable*
tei_model.highlighted_sequenceRepeatable =
  tei_model.hiLike_sequenceRepeatable+,
  tei_model.emphLike_sequenceRepeatable+
tei_model.dateLike = tei_date | tei_time
tei_model.dateLike_alternation = tei_date | tei_time
tei_model.dateLike_sequence = tei_date, tei_time
tei_model.dateLike_sequenceOptional = tei_date?, tei_time?
tei_model.dateLike_sequenceOptionalRepeatable = tei_date*, tei_time*
tei_model.dateLike_sequenceRepeatable = tei_date+, tei_time+
tei_model.dimLike = tei_height | tei_depth | tei_width
tei_model.measureLike =
  tei_num
  | tei_measure
  | tei_measureGrp
  | tei_unit
  | tei_geo
  | tei_dim
  | tei_height
  | tei_depth
  | tei_width
tei_model.measureLike_alternation =
  tei_num
  | tei_measure
  | tei_measureGrp
  | tei_unit
  | tei_geo
  | tei_dim
  | tei_height
  | tei_depth
  | tei_width
tei_model.measureLike_sequence =
  tei_num,
  tei_measure,
  tei_measureGrp,
  tei_unit,
  tei_geo,
  tei_dim,
  tei_height,
  tei_depth,
  tei_width
tei_model.measureLike_sequenceOptional =
  tei_num?,
  tei_measure?,
  tei_measureGrp?,
  tei_unit?,
  tei_geo?,
  tei_dim?,
  tei_height?,
  tei_depth?,
  tei_width?
tei_model.measureLike_sequenceOptionalRepeatable =
  tei_num*,
  tei_measure*,
  tei_measureGrp*,
  tei_unit*,
  tei_geo*,
  tei_dim*,
  tei_height*,
  tei_depth*,
  tei_width*
tei_model.measureLike_sequenceRepeatable =
  tei_num+,
  tei_measure+,
  tei_measureGrp+,
  tei_unit+,
  tei_geo+,
  tei_dim+,
  tei_height+,
  tei_depth+,
  tei_width+
tei_model.egLike = notAllowed
tei_model.egLike_alternation = notAllowed
tei_model.egLike_sequence = empty
tei_model.egLike_sequenceOptional = empty
tei_model.egLike_sequenceOptionalRepeatable = empty
tei_model.egLike_sequenceRepeatable = notAllowed
tei_model.graphicLike =
  tei_media | tei_graphic | tei_binaryObject | tei_formula
tei_model.graphicLike_alternation =
  tei_media | tei_graphic | tei_binaryObject | tei_formula
tei_model.graphicLike_sequence =
  tei_media, tei_graphic, tei_binaryObject, tei_formula
tei_model.graphicLike_sequenceOptional =
  tei_media?, tei_graphic?, tei_binaryObject?, tei_formula?
tei_model.graphicLike_sequenceOptionalRepeatable =
  tei_media*, tei_graphic*, tei_binaryObject*, tei_formula*
tei_model.graphicLike_sequenceRepeatable =
  tei_media+, tei_graphic+, tei_binaryObject+, tei_formula+
tei_model.offsetLike = tei_offset | tei_geogFeat
tei_model.offsetLike_alternation = tei_offset | tei_geogFeat
tei_model.offsetLike_sequence = tei_offset, tei_geogFeat
tei_model.offsetLike_sequenceOptional = tei_offset?, tei_geogFeat?
tei_model.offsetLike_sequenceOptionalRepeatable =
  tei_offset*, tei_geogFeat*
tei_model.offsetLike_sequenceRepeatable = tei_offset+, tei_geogFeat+
tei_model.pPart.msdesc =
  tei_catchwords
  | tei_dimensions
  | tei_heraldry
  | tei_locus
  | tei_locusGrp
  | tei_material
  | tei_objectType
  | tei_origDate
  | tei_origPlace
  | tei_secFol
  | tei_signatures
  | tei_stamp
  | tei_watermark
tei_model.pPart.msdesc_alternation =
  tei_catchwords
  | tei_dimensions
  | tei_heraldry
  | tei_locus
  | tei_locusGrp
  | tei_material
  | tei_objectType
  | tei_origDate
  | tei_origPlace
  | tei_secFol
  | tei_signatures
  | tei_stamp
  | tei_watermark
tei_model.pPart.msdesc_sequence =
  tei_catchwords,
  tei_dimensions,
  tei_heraldry,
  tei_locus,
  tei_locusGrp,
  tei_material,
  tei_objectType,
  tei_origDate,
  tei_origPlace,
  tei_secFol,
  tei_signatures,
  tei_stamp,
  tei_watermark
tei_model.pPart.msdesc_sequenceOptional =
  tei_catchwords?,
  tei_dimensions?,
  tei_heraldry?,
  tei_locus?,
  tei_locusGrp?,
  tei_material?,
  tei_objectType?,
  tei_origDate?,
  tei_origPlace?,
  tei_secFol?,
  tei_signatures?,
  tei_stamp?,
  tei_watermark?
tei_model.pPart.msdesc_sequenceOptionalRepeatable =
  tei_catchwords*,
  tei_dimensions*,
  tei_heraldry*,
  tei_locus*,
  tei_locusGrp*,
  tei_material*,
  tei_objectType*,
  tei_origDate*,
  tei_origPlace*,
  tei_secFol*,
  tei_signatures*,
  tei_stamp*,
  tei_watermark*
tei_model.pPart.msdesc_sequenceRepeatable =
  tei_catchwords+,
  tei_dimensions+,
  tei_heraldry+,
  tei_locus+,
  tei_locusGrp+,
  tei_material+,
  tei_objectType+,
  tei_origDate+,
  tei_origPlace+,
  tei_secFol+,
  tei_signatures+,
  tei_stamp+,
  tei_watermark+
tei_model.pPart.editorial =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.editorial_alternation =
  tei_choice | tei_abbr | tei_expan | tei_ex | tei_am | tei_subst
tei_model.pPart.editorial_sequence =
  tei_choice, tei_abbr, tei_expan, tei_ex, tei_am, tei_subst
tei_model.pPart.editorial_sequenceOptional =
  tei_choice?, tei_abbr?, tei_expan?, tei_ex?, tei_am?, tei_subst?
tei_model.pPart.editorial_sequenceOptionalRepeatable =
  tei_choice*, tei_abbr*, tei_expan*, tei_ex*, tei_am*, tei_subst*
tei_model.pPart.editorial_sequenceRepeatable =
  tei_choice+, tei_abbr+, tei_expan+, tei_ex+, tei_am+, tei_subst+
tei_model.pPart.transcriptional =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_damage
  | tei_handShift
  | tei_restore
  | tei_supplied
  | tei_surplus
  | tei_secl
  | tei_mod
  | tei_redo
  | tei_retrace
  | tei_undo
tei_model.pPart.transcriptional_alternation =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_add
  | tei_del
  | tei_unclear
  | tei_damage
  | tei_handShift
  | tei_restore
  | tei_supplied
  | tei_surplus
  | tei_secl
  | tei_mod
  | tei_redo
  | tei_retrace
  | tei_undo
tei_model.pPart.transcriptional_sequence =
  tei_sic,
  tei_corr,
  tei_reg,
  tei_orig,
  tei_add,
  tei_del,
  tei_unclear,
  tei_damage,
  tei_handShift,
  tei_restore,
  tei_supplied,
  tei_surplus,
  tei_secl,
  tei_mod,
  tei_redo,
  tei_retrace,
  tei_undo
tei_model.pPart.transcriptional_sequenceOptional =
  tei_sic?,
  tei_corr?,
  tei_reg?,
  tei_orig?,
  tei_add?,
  tei_del?,
  tei_unclear?,
  tei_damage?,
  tei_handShift?,
  tei_restore?,
  tei_supplied?,
  tei_surplus?,
  tei_secl?,
  tei_mod?,
  tei_redo?,
  tei_retrace?,
  tei_undo?
tei_model.pPart.transcriptional_sequenceOptionalRepeatable =
  tei_sic*,
  tei_corr*,
  tei_reg*,
  tei_orig*,
  tei_add*,
  tei_del*,
  tei_unclear*,
  tei_damage*,
  tei_handShift*,
  tei_restore*,
  tei_supplied*,
  tei_surplus*,
  tei_secl*,
  tei_mod*,
  tei_redo*,
  tei_retrace*,
  tei_undo*
tei_model.pPart.transcriptional_sequenceRepeatable =
  tei_sic+,
  tei_corr+,
  tei_reg+,
  tei_orig+,
  tei_add+,
  tei_del+,
  tei_unclear+,
  tei_damage+,
  tei_handShift+,
  tei_restore+,
  tei_supplied+,
  tei_surplus+,
  tei_secl+,
  tei_mod+,
  tei_redo+,
  tei_retrace+,
  tei_undo+
tei_model.pPart.edit =
  tei_model.pPart.editorial | tei_model.pPart.transcriptional
tei_model.pPart.edit_alternation =
  tei_model.pPart.editorial_alternation
  | tei_model.pPart.transcriptional_alternation
tei_model.pPart.edit_sequence =
  tei_model.pPart.editorial_sequence,
  tei_model.pPart.transcriptional_sequence
tei_model.pPart.edit_sequenceOptional =
  tei_model.pPart.editorial_sequenceOptional?,
  tei_model.pPart.transcriptional_sequenceOptional?
tei_model.pPart.edit_sequenceOptionalRepeatable =
  tei_model.pPart.editorial_sequenceOptionalRepeatable*,
  tei_model.pPart.transcriptional_sequenceOptionalRepeatable*
tei_model.pPart.edit_sequenceRepeatable =
  tei_model.pPart.editorial_sequenceRepeatable+,
  tei_model.pPart.transcriptional_sequenceRepeatable+
tei_model.linePart =
  tei_model.hiLike
  | tei_choice
  | tei_add
  | tei_del
  | tei_unclear
  | tei_zone
  | tei_path
  | tei_damage
  | tei_handShift
  | tei_restore
  | tei_line
  | tei_mod
  | tei_redo
  | tei_retrace
  | tei_undo
  | tei_seg
tei_model.ptrLike = tei_ptr | tei_ref
tei_model.ptrLike_alternation = tei_ptr | tei_ref
tei_model.ptrLike_sequence = tei_ptr, tei_ref
tei_model.ptrLike_sequenceOptional = tei_ptr?, tei_ref?
tei_model.ptrLike_sequenceOptionalRepeatable = tei_ptr*, tei_ref*
tei_model.ptrLike_sequenceRepeatable = tei_ptr+, tei_ref+
tei_model.lPart = notAllowed
tei_model.lPart_alternation = notAllowed
tei_model.lPart_sequence = empty
tei_model.lPart_sequenceOptional = empty
tei_model.lPart_sequenceOptionalRepeatable = empty
tei_model.lPart_sequenceRepeatable = notAllowed
tei_model.global.meta =
  tei_index
  | tei_substJoin
  | tei_listTranspose
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
tei_model.global.meta_alternation =
  tei_index
  | tei_substJoin
  | tei_listTranspose
  | tei_link
  | tei_linkGrp
  | tei_timeline
  | tei_join
  | tei_joinGrp
  | tei_alt
  | tei_altGrp
tei_model.global.meta_sequence =
  tei_index,
  tei_substJoin,
  tei_listTranspose,
  tei_link,
  tei_linkGrp,
  tei_timeline,
  tei_join,
  tei_joinGrp,
  tei_alt,
  tei_altGrp
tei_model.global.meta_sequenceOptional =
  tei_index?,
  tei_substJoin?,
  tei_listTranspose?,
  tei_link?,
  tei_linkGrp?,
  tei_timeline?,
  tei_join?,
  tei_joinGrp?,
  tei_alt?,
  tei_altGrp?
tei_model.global.meta_sequenceOptionalRepeatable =
  tei_index*,
  tei_substJoin*,
  tei_listTranspose*,
  tei_link*,
  tei_linkGrp*,
  tei_timeline*,
  tei_join*,
  tei_joinGrp*,
  tei_alt*,
  tei_altGrp*
tei_model.global.meta_sequenceRepeatable =
  tei_index+,
  tei_substJoin+,
  tei_listTranspose+,
  tei_link+,
  tei_linkGrp+,
  tei_timeline+,
  tei_join+,
  tei_joinGrp+,
  tei_alt+,
  tei_altGrp+
tei_model.milestoneLike =
  tei_milestone
  | tei_gb
  | tei_pb
  | tei_lb
  | tei_cb
  | tei_fw
  | tei_anchor
tei_model.milestoneLike_alternation =
  tei_milestone
  | tei_gb
  | tei_pb
  | tei_lb
  | tei_cb
  | tei_fw
  | tei_anchor
tei_model.milestoneLike_sequence =
  tei_milestone, tei_gb, tei_pb, tei_lb, tei_cb, tei_fw, tei_anchor
tei_model.milestoneLike_sequenceOptional =
  tei_milestone?,
  tei_gb?,
  tei_pb?,
  tei_lb?,
  tei_cb?,
  tei_fw?,
  tei_anchor?
tei_model.milestoneLike_sequenceOptionalRepeatable =
  tei_milestone*,
  tei_gb*,
  tei_pb*,
  tei_lb*,
  tei_cb*,
  tei_fw*,
  tei_anchor*
tei_model.milestoneLike_sequenceRepeatable =
  tei_milestone+,
  tei_gb+,
  tei_pb+,
  tei_lb+,
  tei_cb+,
  tei_fw+,
  tei_anchor+
tei_model.gLike = tei_g
tei_model.oddDecl = notAllowed
tei_model.oddDecl_alternation = notAllowed
tei_model.oddDecl_sequence = empty
tei_model.oddDecl_sequenceOptional = empty
tei_model.oddDecl_sequenceOptionalRepeatable = empty
tei_model.oddDecl_sequenceRepeatable = notAllowed
tei_model.phrase.xml = notAllowed
tei_model.phrase.xml_alternation = notAllowed
tei_model.phrase.xml_sequence = empty
tei_model.phrase.xml_sequenceOptional = empty
tei_model.phrase.xml_sequenceOptionalRepeatable = empty
tei_model.phrase.xml_sequenceRepeatable = notAllowed
tei_model.specDescLike = notAllowed
tei_model.specDescLike_alternation = notAllowed
tei_model.specDescLike_sequence = empty
tei_model.specDescLike_sequenceOptional = empty
tei_model.specDescLike_sequenceOptionalRepeatable = empty
tei_model.specDescLike_sequenceRepeatable = notAllowed
tei_model.biblLike =
  tei_bibl | tei_biblStruct | tei_listBibl | tei_biblFull | tei_msDesc
tei_model.biblLike_alternation =
  tei_bibl | tei_biblStruct | tei_listBibl | tei_biblFull | tei_msDesc
tei_model.biblLike_sequence =
  tei_bibl, tei_biblStruct, tei_listBibl, tei_biblFull, tei_msDesc
tei_model.biblLike_sequenceOptional =
  tei_bibl?, tei_biblStruct?, tei_listBibl?, tei_biblFull?, tei_msDesc?
tei_model.biblLike_sequenceOptionalRepeatable =
  tei_bibl*, tei_biblStruct*, tei_listBibl*, tei_biblFull*, tei_msDesc*
tei_model.biblLike_sequenceRepeatable =
  tei_bibl+, tei_biblStruct+, tei_listBibl+, tei_biblFull+, tei_msDesc+
tei_model.headLike = tei_head
tei_model.headLike_alternation = tei_head
tei_model.headLike_sequence = tei_head
tei_model.headLike_sequenceOptional = tei_head?
tei_model.headLike_sequenceOptionalRepeatable = tei_head*
tei_model.headLike_sequenceRepeatable = tei_head+
tei_model.labelLike = tei_desc | tei_label
tei_model.labelLike_alternation = tei_desc | tei_label
tei_model.labelLike_sequence = tei_desc, tei_label
tei_model.labelLike_sequenceOptional = tei_desc?, tei_label?
tei_model.labelLike_sequenceOptionalRepeatable = tei_desc*, tei_label*
tei_model.labelLike_sequenceRepeatable = tei_desc+, tei_label+
tei_model.listLike =
  tei_list
  | tei_listOrg
  | tei_listEvent
  | tei_listPerson
  | tei_listPlace
  | tei_listRelation
  | tei_listObject
  | tei_listNym
  | tei_table
  | tei_listApp
  | tei_listWit
tei_model.listLike_alternation =
  tei_list
  | tei_listOrg
  | tei_listEvent
  | tei_listPerson
  | tei_listPlace
  | tei_listRelation
  | tei_listObject
  | tei_listNym
  | tei_table
  | tei_listApp
  | tei_listWit
tei_model.listLike_sequence =
  tei_list,
  tei_listOrg,
  tei_listEvent,
  tei_listPerson,
  tei_listPlace,
  tei_listRelation,
  tei_listObject,
  tei_listNym,
  tei_table,
  tei_listApp,
  tei_listWit
tei_model.listLike_sequenceOptional =
  tei_list?,
  tei_listOrg?,
  tei_listEvent?,
  tei_listPerson?,
  tei_listPlace?,
  tei_listRelation?,
  tei_listObject?,
  tei_listNym?,
  tei_table?,
  tei_listApp?,
  tei_listWit?
tei_model.listLike_sequenceOptionalRepeatable =
  tei_list*,
  tei_listOrg*,
  tei_listEvent*,
  tei_listPerson*,
  tei_listPlace*,
  tei_listRelation*,
  tei_listObject*,
  tei_listNym*,
  tei_table*,
  tei_listApp*,
  tei_listWit*
tei_model.listLike_sequenceRepeatable =
  tei_list+,
  tei_listOrg+,
  tei_listEvent+,
  tei_listPerson+,
  tei_listPlace+,
  tei_listRelation+,
  tei_listObject+,
  tei_listNym+,
  tei_table+,
  tei_listApp+,
  tei_listWit+
tei_model.noteLike = tei_note | tei_noteGrp
tei_model.noteLike_alternation = tei_note | tei_noteGrp
tei_model.noteLike_sequence = tei_note, tei_noteGrp
tei_model.noteLike_sequenceOptional = tei_note?, tei_noteGrp?
tei_model.noteLike_sequenceOptionalRepeatable = tei_note*, tei_noteGrp*
tei_model.noteLike_sequenceRepeatable = tei_note+, tei_noteGrp+
tei_model.lLike = tei_l
tei_model.lLike_alternation = tei_l
tei_model.lLike_sequence = tei_l
tei_model.lLike_sequenceOptional = tei_l?
tei_model.lLike_sequenceOptionalRepeatable = tei_l*
tei_model.lLike_sequenceRepeatable = tei_l+
tei_model.pLike = tei_p | tei_ab
tei_model.pLike_alternation = tei_p | tei_ab
tei_model.pLike_sequence = tei_p, tei_ab
tei_model.pLike_sequenceOptional = tei_p?, tei_ab?
tei_model.pLike_sequenceOptionalRepeatable = tei_p*, tei_ab*
tei_model.pLike_sequenceRepeatable = tei_p+, tei_ab+
tei_model.stageLike = tei_stage
tei_model.stageLike_alternation = tei_stage
tei_model.stageLike_sequence = tei_stage
tei_model.stageLike_sequenceOptional = tei_stage?
tei_model.stageLike_sequenceOptionalRepeatable = tei_stage*
tei_model.stageLike_sequenceRepeatable = tei_stage+
tei_model.entryPart = notAllowed
tei_model.eventLike = tei_event | tei_listEvent
tei_model.global.edit =
  tei_gap
  | tei_ellipsis
  | tei_addSpan
  | tei_damageSpan
  | tei_delSpan
  | tei_space
  | tei_app
  | tei_witDetail
tei_model.global.edit_alternation =
  tei_gap
  | tei_ellipsis
  | tei_addSpan
  | tei_damageSpan
  | tei_delSpan
  | tei_space
  | tei_app
  | tei_witDetail
tei_model.global.edit_sequence =
  tei_gap,
  tei_ellipsis,
  tei_addSpan,
  tei_damageSpan,
  tei_delSpan,
  tei_space,
  tei_app,
  tei_witDetail
tei_model.global.edit_sequenceOptional =
  tei_gap?,
  tei_ellipsis?,
  tei_addSpan?,
  tei_damageSpan?,
  tei_delSpan?,
  tei_space?,
  tei_app?,
  tei_witDetail?
tei_model.global.edit_sequenceOptionalRepeatable =
  tei_gap*,
  tei_ellipsis*,
  tei_addSpan*,
  tei_damageSpan*,
  tei_delSpan*,
  tei_space*,
  tei_app*,
  tei_witDetail*
tei_model.global.edit_sequenceRepeatable =
  tei_gap+,
  tei_ellipsis+,
  tei_addSpan+,
  tei_damageSpan+,
  tei_delSpan+,
  tei_space+,
  tei_app+,
  tei_witDetail+
tei_model.divPart = tei_model.lLike | tei_model.pLike | tei_lg | tei_sp
tei_model.persStateLike =
  tei_persName
  | tei_affiliation
  | tei_age
  | tei_education
  | tei_faith
  | tei_floruit
  | tei_gender
  | tei_langKnowledge
  | tei_nationality
  | tei_occupation
  | tei_persona
  | tei_persPronouns
  | tei_residence
  | tei_sex
  | tei_socecStatus
  | tei_state
  | tei_trait
tei_model.personLike = tei_org | tei_person | tei_personGrp
tei_model.personPart =
  tei_model.biblLike
  | tei_model.eventLike
  | tei_model.persStateLike
  | tei_name
  | tei_idno
  | tei_birth
  | tei_death
tei_model.placeNamePart =
  tei_placeName
  | tei_bloc
  | tei_country
  | tei_region
  | tei_settlement
  | tei_district
  | tei_geogName
tei_model.placeNamePart_alternation =
  tei_placeName
  | tei_bloc
  | tei_country
  | tei_region
  | tei_settlement
  | tei_district
  | tei_geogName
tei_model.placeNamePart_sequence =
  tei_placeName,
  tei_bloc,
  tei_country,
  tei_region,
  tei_settlement,
  tei_district,
  tei_geogName
tei_model.placeNamePart_sequenceOptional =
  tei_placeName?,
  tei_bloc?,
  tei_country?,
  tei_region?,
  tei_settlement?,
  tei_district?,
  tei_geogName?
tei_model.placeNamePart_sequenceOptionalRepeatable =
  tei_placeName*,
  tei_bloc*,
  tei_country*,
  tei_region*,
  tei_settlement*,
  tei_district*,
  tei_geogName*
tei_model.placeNamePart_sequenceRepeatable =
  tei_placeName+,
  tei_bloc+,
  tei_country+,
  tei_region+,
  tei_settlement+,
  tei_district+,
  tei_geogName+
tei_model.placeStateLike =
  tei_model.placeNamePart
  | tei_climate
  | tei_location
  | tei_population
  | tei_state
  | tei_terrain
  | tei_trait
tei_model.placeStateLike_alternation =
  tei_model.placeNamePart_alternation
  | tei_climate
  | tei_location
  | tei_population
  | tei_state
  | tei_terrain
  | tei_trait
tei_model.placeStateLike_sequence =
  tei_model.placeNamePart_sequence,
  tei_climate,
  tei_location,
  tei_population,
  tei_state,
  tei_terrain,
  tei_trait
tei_model.placeStateLike_sequenceOptional =
  tei_model.placeNamePart_sequenceOptional?,
  tei_climate?,
  tei_location?,
  tei_population?,
  tei_state?,
  tei_terrain?,
  tei_trait?
tei_model.placeStateLike_sequenceOptionalRepeatable =
  tei_model.placeNamePart_sequenceOptionalRepeatable*,
  tei_climate*,
  tei_location*,
  tei_population*,
  tei_state*,
  tei_terrain*,
  tei_trait*
tei_model.placeStateLike_sequenceRepeatable =
  tei_model.placeNamePart_sequenceRepeatable+,
  tei_climate+,
  tei_location+,
  tei_population+,
  tei_state+,
  tei_terrain+,
  tei_trait+
tei_model.orgPart =
  tei_model.eventLike | tei_listOrg | tei_listPerson | tei_listPlace
tei_model.publicationStmtPart.agency =
  tei_publisher | tei_distributor | tei_authority
tei_model.publicationStmtPart.detail =
  tei_model.ptrLike
  | tei_address
  | tei_date
  | tei_pubPlace
  | tei_idno
  | tei_availability
tei_model.availabilityPart = tei_licence
tei_model.certLike = notAllowed
tei_model.descLike = tei_desc
tei_model.quoteLike = tei_quote | tei_cit
tei_model.quoteLike_alternation = tei_quote | tei_cit
tei_model.quoteLike_sequence = tei_quote, tei_cit
tei_model.quoteLike_sequenceOptional = tei_quote?, tei_cit?
tei_model.quoteLike_sequenceOptionalRepeatable = tei_quote*, tei_cit*
tei_model.quoteLike_sequenceRepeatable = tei_quote+, tei_cit+
tei_model.attributable =
  tei_model.quoteLike | tei_said | tei_floatingText
tei_model.attributable_alternation =
  tei_model.quoteLike_alternation | tei_said | tei_floatingText
tei_model.attributable_sequence =
  tei_model.quoteLike_sequence, tei_said, tei_floatingText
tei_model.attributable_sequenceOptional =
  tei_model.quoteLike_sequenceOptional?, tei_said?, tei_floatingText?
tei_model.attributable_sequenceOptionalRepeatable =
  tei_model.quoteLike_sequenceOptionalRepeatable*,
  tei_said*,
  tei_floatingText*
tei_model.attributable_sequenceRepeatable =
  tei_model.quoteLike_sequenceRepeatable+, tei_said+, tei_floatingText+
tei_model.respLike =
  tei_author
  | tei_editor
  | tei_respStmt
  | tei_meeting
  | tei_sponsor
  | tei_funder
  | tei_principal
tei_model.divWrapper =
  tei_meeting
  | tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_salute
  | tei_docAuthor
  | tei_docDate
tei_model.divTopPart = tei_model.headLike | tei_opener | tei_signed
tei_model.divTop = tei_model.divWrapper | tei_model.divTopPart
tei_model.frontPart.drama = notAllowed
tei_model.pLike.front =
  tei_head
  | tei_byline
  | tei_dateline
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.divBottomPart =
  tei_trailer | tei_closer | tei_signed | tei_postscript
tei_model.divBottom = tei_model.divWrapper | tei_model.divBottomPart
tei_model.titlepagePart =
  tei_graphic
  | tei_binaryObject
  | tei_byline
  | tei_argument
  | tei_epigraph
  | tei_docTitle
  | tei_titlePart
  | tei_docAuthor
  | tei_imprimatur
  | tei_docEdition
  | tei_docImprint
  | tei_docDate
tei_model.msQuoteLike =
  tei_title
  | tei_colophon
  | tei_explicit
  | tei_finalRubric
  | tei_incipit
  | tei_rubric
tei_model.msItemPart =
  tei_model.biblLike
  | tei_model.quoteLike
  | tei_model.respLike
  | tei_model.msQuoteLike
  | tei_textLang
  | tei_idno
  | tei_filiation
  | tei_msItem
  | tei_msItemStruct
  | tei_decoNote
tei_model.choicePart =
  tei_sic
  | tei_corr
  | tei_reg
  | tei_orig
  | tei_unclear
  | tei_abbr
  | tei_expan
  | tei_ex
  | tei_am
  | tei_supplied
  | tei_seg
tei_model.imprintPart =
  tei_publisher | tei_biblScope | tei_pubPlace | tei_distributor
tei_model.catDescPart = tei_textDesc
tei_model.settingPart = tei_locale | tei_activity | tei_placeName
tei_model.addressLike = tei_email | tei_address | tei_affiliation
tei_model.addressLike_alternation =
  tei_email | tei_address | tei_affiliation
tei_model.addressLike_sequence = tei_email, tei_address, tei_affiliation
tei_model.addressLike_sequenceOptional =
  tei_email?, tei_address?, tei_affiliation?
tei_model.addressLike_sequenceOptionalRepeatable =
  tei_email*, tei_address*, tei_affiliation*
tei_model.addressLike_sequenceRepeatable =
  tei_email+, tei_address+, tei_affiliation+
tei_model.nameLike =
  tei_model.nameLike.agent
  | tei_model.offsetLike
  | tei_model.placeStateLike
  | tei_rs
  | tei_idno
  | tei_model.persNamePart
  | tei_objectName
tei_model.nameLike_alternation =
  tei_model.nameLike.agent_alternation
  | tei_model.offsetLike_alternation
  | tei_model.placeStateLike_alternation
  | tei_rs
  | tei_idno
  | tei_model.persNamePart_alternation
  | tei_objectName
tei_model.nameLike_sequence =
  tei_model.nameLike.agent_sequence,
  tei_model.offsetLike_sequence,
  tei_model.placeStateLike_sequence,
  tei_rs,
  tei_idno,
  tei_model.persNamePart_sequence,
  tei_objectName
tei_model.nameLike_sequenceOptional =
  tei_model.nameLike.agent_sequenceOptional?,
  tei_model.offsetLike_sequenceOptional?,
  tei_model.placeStateLike_sequenceOptional?,
  tei_rs?,
  tei_idno?,
  tei_model.persNamePart_sequenceOptional?,
  tei_objectName?
tei_model.nameLike_sequenceOptionalRepeatable =
  tei_model.nameLike.agent_sequenceOptionalRepeatable*,
  tei_model.offsetLike_sequenceOptionalRepeatable*,
  tei_model.placeStateLike_sequenceOptionalRepeatable*,
  tei_rs*,
  tei_idno*,
  tei_model.persNamePart_sequenceOptionalRepeatable*,
  tei_objectName*
tei_model.nameLike_sequenceRepeatable =
  tei_model.nameLike.agent_sequenceRepeatable+,
  tei_model.offsetLike_sequenceRepeatable+,
  tei_model.placeStateLike_sequenceRepeatable+,
  tei_rs+,
  tei_idno+,
  tei_model.persNamePart_sequenceRepeatable+,
  tei_objectName+
tei_model.global =
  tei_model.global.meta
  | tei_model.milestoneLike
  | tei_model.noteLike
  | tei_model.global.edit
  | tei_metamark
  | tei_notatedMusic
  | tei_figure
tei_model.biblPart =
  tei_model.respLike
  | tei_model.imprintPart
  | tei_series
  | tei_citedRange
  | tei_bibl
  | tei_relatedItem
  | tei_textLang
  | tei_edition
  | tei_extent
  | tei_availability
  | tei_listRelation
  | tei_objectIdentifier
  | tei_msIdentifier
  | tei_explicit
  | tei_incipit
  | tei_decoNote
tei_model.frontPart =
  tei_model.frontPart.drama | tei_listBibl | tei_divGen | tei_titlePage
tei_model.addrPart =
  tei_model.nameLike
  | tei_addrLine
  | tei_street
  | tei_postCode
  | tei_postBox
tei_model.pPart.data =
  tei_model.dateLike
  | tei_model.measureLike
  | tei_model.addressLike
  | tei_model.nameLike
tei_model.pPart.data_alternation =
  tei_model.dateLike_alternation
  | tei_model.measureLike_alternation
  | tei_model.addressLike_alternation
  | tei_model.nameLike_alternation
tei_model.pPart.data_sequence =
  tei_model.dateLike_sequence,
  tei_model.measureLike_sequence,
  tei_model.addressLike_sequence,
  tei_model.nameLike_sequence
tei_model.pPart.data_sequenceOptional =
  tei_model.dateLike_sequenceOptional?,
  tei_model.measureLike_sequenceOptional?,
  tei_model.addressLike_sequenceOptional?,
  tei_model.nameLike_sequenceOptional?
tei_model.pPart.data_sequenceOptionalRepeatable =
  tei_model.dateLike_sequenceOptionalRepeatable*,
  tei_model.measureLike_sequenceOptionalRepeatable*,
  tei_model.addressLike_sequenceOptionalRepeatable*,
  tei_model.nameLike_sequenceOptionalRepeatable*
tei_model.pPart.data_sequenceRepeatable =
  tei_model.dateLike_sequenceRepeatable+,
  tei_model.measureLike_sequenceRepeatable+,
  tei_model.addressLike_sequenceRepeatable+,
  tei_model.nameLike_sequenceRepeatable+
tei_model.inter =
  tei_model.egLike
  | tei_model.oddDecl
  | tei_model.biblLike
  | tei_model.labelLike
  | tei_model.listLike
  | tei_model.stageLike
  | tei_model.attributable
tei_model.common = tei_model.divPart | tei_model.inter | tei_q
tei_model.phrase =
  tei_model.segLike
  | tei_model.highlighted
  | tei_model.graphicLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.edit
  | tei_model.ptrLike
  | tei_model.lPart
  | tei_model.phrase.xml
  | tei_model.specDescLike
  | tei_model.pPart.data
  | tei_ruby
tei_model.paraPart =
  tei_model.gLike
  | tei_model.lLike
  | tei_model.global
  | tei_model.inter
  | tei_model.phrase
  | tei_lg
tei_model.limitedPhrase =
  tei_model.hiLike
  | tei_model.emphLike
  | tei_model.pPart.msdesc
  | tei_model.pPart.editorial
  | tei_model.ptrLike
  | tei_model.phrase.xml
  | tei_model.pPart.data
tei_model.divLike = tei_div
tei_model.divGenLike = tei_divGen
tei_model.div1Like = tei_div1
tei_model.div2Like = tei_div2
tei_model.div3Like = tei_div3
tei_model.div4Like = tei_div4
tei_model.div5Like = tei_div5
tei_model.div6Like = tei_div6
tei_model.div7Like = tei_div7
tei_model.annotationLike = tei_note | tei_annotation
tei_model.annotationPart.body = tei_ptr | tei_ref | tei_note
tei_model.applicationLike = tei_application
tei_model.teiHeaderPart =
  tei_encodingDesc | tei_profileDesc | tei_xenoData
tei_model.sourceDescPart = notAllowed
tei_model.encodingDescPart =
  tei_schemaRef
  | tei_projectDesc
  | tei_samplingDecl
  | tei_editorialDecl
  | tei_tagsDecl
  | tei_styleDefDecl
  | tei_refsDecl
  | tei_listPrefixDef
  | tei_classDecl
  | tei_geoDecl
  | tei_unitDecl
  | tei_appInfo
  | tei_variantEncoding
  | tei_charDecl
tei_model.editorialDeclPart =
  tei_correction
  | tei_normalization
  | tei_quotation
  | tei_hyphenation
  | tei_segmentation
  | tei_stdVals
  | tei_interpretation
  | tei_punctuation
tei_model.profileDescPart =
  tei_abstract
  | tei_creation
  | tei_langUsage
  | tei_textClass
  | tei_calendarDesc
  | tei_correspDesc
  | tei_textDesc
  | tei_particDesc
  | tei_settingDesc
  | tei_handNotes
  | tei_listTranspose
tei_model.standOffPart =
  tei_model.global.meta
  | tei_model.biblLike
  | tei_model.listLike
  | tei_model.annotationLike
  | tei_listChange
  | tei_zone
  | tei_seg
  | tei_listAnnotation
tei_att.formula.attributes = tei_att.formula.attribute.formula
tei_att.formula.attribute.formula =
  [
    a:documentation [
      "A "
      ns1:code [ "@formula" ]
      " is provided to describe a mathematical calculation such as a conversion between measurement systems."
    ]
  ]
  attribute formula { text }?
tei_att.locatable.attributes = tei_att.locatable.attribute.where
tei_att.locatable.attribute.where =
  [
    a:documentation [
      "indicates one or more locations by pointing to a "
      ns1:code [ "<place>" ]
      " element or other canonical description."
    ]
  ]
  attribute where {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_model.correspActionPart =
  tei_model.dateLike
  | tei_model.addressLike
  | tei_model.nameLike
  | tei_note
  | tei_noteGrp
tei_model.correspContextPart =
  tei_model.ptrLike | tei_model.pLike | tei_note | tei_noteGrp
tei_model.correspDescPart =
  tei_note | tei_noteGrp | tei_correspAction | tei_correspContext
tei_model.resource =
  tei_facsimile | tei_sourceDoc | tei_text | tei_standOff
tei_model.describedResource = tei_teiCorpus | tei_TEI
tei_model.objectLike = tei_object | tei_listObject
tei_att.personal.attributes =
  tei_att.naming.attributes,
  tei_att.personal.attribute.full,
  tei_att.personal.attribute.sort
tei_att.personal.attribute.full =
  
  ## indicates whether the name component is given in full, as an abbreviation or simply as an initial.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## (yes) the name component is spelled out in full.
    "yes"
    | 
      ## (abbreviated) the name component is given in an abbreviated form.
      "abb"
    | 
      ## (initial letter) the name component is indicated only by one initial.
      "init"
  }?
tei_att.personal.attribute.sort =
  
  ## (sort) specifies the sort order of the name component in relation to others within the name.
  attribute sort { xsd:nonNegativeInteger }?
tei_model.placeLike = tei_place
tei_att.milestoneUnit.attributes = tei_att.milestoneUnit.attribute.unit
tei_att.milestoneUnit.attribute.unit =
  
  ## provides a conventional name for the kind of section changing at this milestone.
  ## Suggested values include: 1] page; 2] column; 3] line; 4] book; 5] poem; 6] canto; 7] speaker; 8] stanza; 9] act; 10] scene; 11] section; 12] absent; 13] unnumbered
  attribute unit {
    [
      a:documentation [
        "physical page breaks (synonymous with the "
        ns1:code [ "<pb>" ]
        " element)."
      ]
    ]
    "page"
    | 
      ## column breaks.
      "column"
    | [
        a:documentation [
          "line breaks (synonymous with the "
          ns1:code [ "<lb>" ]
          " element)."
        ]
      ]
      "line"
    | 
      ## any units termed book, liber, etc.
      "book"
    | 
      ## individual poems in a collection.
      "poem"
    | 
      ## cantos or other major sections of a poem.
      "canto"
    | 
      ## changes of speaker or narrator.
      "speaker"
    | 
      ## stanzas within a poem, book, or canto.
      "stanza"
    | 
      ## acts within a play.
      "act"
    | 
      ## scenes within a play or act.
      "scene"
    | 
      ## sections of any kind.
      "section"
    | 
      ## passages not present in the reference edition.
      "absent"
    | 
      ## passages present in the text, but not to be included as part of the reference.
      "unnumbered"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }
tei_p =
  
  ## (Absatz) markiert einen Absatz in einem Prosatext. [ ]
  element p {
    tei_macro.paraContent
    >> sch:pattern [
         id =
           "propy-p-abstractModel-structure-p-in-ab-or-p-constraint-report-6"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:ab or ancestor::tei:p) and not( ancestor::tei:floatingText |parent::tei:exemplum |parent::tei:item |parent::tei:note |parent::tei:q |parent::tei:quote |parent::tei:remarks |parent::tei:said |parent::tei:sp |parent::tei:stage |parent::tei:cell |parent::tei:figure )"
             "\x{a}" ~
             "        Abstract model violation: Paragraphs may not occur inside other paragraphs or ab elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-p-abstractModel-structure-p-in-l-or-lg-constraint-report-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:p"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not( ancestor::tei:floatingText |parent::tei:figure |parent::tei:note )"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, p, or ab, unless p is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.fragmentable.attributes,
    tei_att.written.attributes,
    empty
  }
tei_foreign =
  
  ## (fremd) identifiziert ein Wort oder eine Phrase, die zu einer anderen Sprache geh√∂rt, als der umgebende Text. []
  element foreign {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for linguistic or rhetorical effect. [ ]
  element emph {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_hi =
  
  ## (hervorgehoben) markiert ein Wort oder eine Textpassage, das/die sich grafisch vom umgebenden Text abhebt, ohne dass ein inhaltlicher Grund daf√ºr angegeben wird. [ ]
  element hi {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_distinct =
  
  ## identifies any word or phrase which is regarded as linguistically distinct, for example as archaic, technical, dialectal, non-preferred, etc., or as forming part of a sublanguage. []
  element distinct {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies the sublanguage or register to which the word or phrase is being assigned
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies how the phrase is distinct diachronically
    attribute time { xsd:string }?,
    
    ## specifies how the phrase is distinct diatopically
    attribute space { xsd:string }?,
    
    ## specifies how the phrase is distinct diastratically
    attribute social { xsd:string }?,
    empty
  }
tei_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. []
  element said {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    
    ## may be used to indicate whether the quoted matter is regarded as having been vocalized or signed.
    attribute aloud {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    
    ## may be used to indicate whether the quoted matter is regarded as direct or indirect speech.
    [ a:defaultValue = "true" ]
    attribute direct {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
tei_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [ ]
  element quote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_q =
  
  ## (in Anf√ºhrungszeichen) enth√§lt Material, das vom umgebenden Text durch Anf√ºhrungszeichen oder √§hnliche Methoden abgesetzt ist. Die Abhebung kann beliebige Gr√ºnde haben, wie z. B. direkte Rede, wiedergegebene Gedanken, Fachbegriffe, Jargon, Distanzierung des Autors, Zitate aus anderen Texten, erw√§hnte aber nicht benutzte Passagen. []
  element q {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    
    ## (Typ) kann verwendet werden, um anzuzeigen, ob die abgesetzte Textpassage gesprochen oder gedacht wird, oder um sie auf andere Weise detaillierter zu beschreiben.
    ## Suggested values include: 1] spoken (spoken); 2] thought (thought); 3] written (written); 4] soCalled (so called); 5] foreign (foreign); 6] distinct (distinct); 7] term; 8] emph (emph); 9] mentioned (mentioned)
    attribute type {
      
      ## (gesprochen) Wiedergabe gesprochener Sprache
      "spoken"
      | 
        ## (gedacht) Wiedergabe von Gedanken, z. B. eines inneren Monologes
        "thought"
      | 
        ## (geschrieben) Zitat aus einer schriftlichen Quelle
        "written"
      | 
        ## (sogenannt) Distanzierung des Autors
        "soCalled"
      | 
        ## (fremdartig) 
        "foreign"
      | 
        ## (distinkt) linguistisch hervorgehoben
        "distinct"
      | 
        ## Fachbegriff
        "term"
      | 
        ## (betont) rhetorische Emphase
        "emph"
      | 
        ## (erw√§hnt) bezieht sich auf sich selbst, nicht auf den √ºblichen Bezugspunkt
        "mentioned"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_cit =
  
  ## (Zitat mit Referenz) enth√§lt ein Zitat aus einem anderen Dokument, zusammen mit einer bibliografischen Referenz auf die Quelle. In einem W√∂rterbuch kann es ein Beispieltext mit mindestens einem Vorkommen der Wortform enthalten, welches in dem beschriebenen Sinne verwendet wird, oder eine √úbersetzung des Lemmas, oder ein Beispiel. [  ]
  element cit {
    (tei_model.biblLike
     | tei_model.egLike
     | tei_model.entryPart
     | tei_model.global
     | tei_model.graphicLike
     | tei_model.ptrLike
     | tei_model.attributable
     | tei_q)+,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_mentioned =
  
  ## marks words or phrases mentioned, not used. []
  element mentioned {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_soCalled =
  
  ## (so called) contains a word or phrase for which the author or narrator indicates a disclaiming of responsibility, for example by the use of scare quotes or italics. []
  element soCalled {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_desc =
  
  ## (Beschreibung) enth√§lt eine kurze Beschreibung des Objekts, das von seinem √ºbergeordneten Element annotiert wird, √ºblicherweise einem Dokumentationselement oder einer Einheit. []
  element desc {
    tei_macro.limitedContent
    >> sch:pattern [
         id =
           "propy-desc-deprecationInfo-only-in-deprecated-constraint-rule-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:desc[ @type eq 'deprecationInfo']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@validUntil"
             "Information about a\x{a}" ~
             "        deprecation should only be present in a specification element\x{a}" ~
             "        that is being deprecated: that is, only an element that has a\x{a}" ~
             "        @validUntil attribute should have a child <desc\x{a}" ~
             '        type="deprecationInfo">.'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Suggested values include: 1] deprecationInfo (deprecation information)
    attribute type {
      
      ## (deprecation
      ##           information) This element describes why or how its parent element is being deprecated, typically including recommendations for alternate encoding.
      "deprecationInfo"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_gloss =
  
  ## (gloss) identifies a phrase or word used to provide a gloss or definition for some other word or phrase. [ ]
  element gloss {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    tei_att.pointing.attributes,
    tei_att.cReferencing.attributes,
    empty
  }
tei_term =
  
  ## (Fachbegriff) enth√§lt ein einzelnes Wort, Mehrworttermini oder symbolische Bezeichnungen, die als Fachbegriffe verstanden werden []
  element term {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.canonical.attributes,
    tei_att.sortable.attributes,
    tei_att.cReferencing.attributes,
    empty
  }
tei_ruby =
  
  ## (ruby container) contains a passage of base text along with its associated ruby gloss(es). []
  element ruby {
    (tei_rb, tei_rt+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_rb =
  
  ## (ruby base) contains the base text annotated by a ruby gloss. []
  element rb {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_rt =
  
  ## (ruby text) contains a ruby text, an annotation closely associated with a passage of the main text. []
  element rt {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.transcriptional.attributes,
    (
     ## supplies a pointer to the base being glossed by this ruby text.
     attribute target {
       xsd:anyURI { pattern = "\S+" }
     }?)
    >> sch:pattern [
         id = "propy-rt-target-rt-target-not-span-constraint-report-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rt/@target"
           "\x{a}" ~
           "               "
           sch:report [
             test = "../@from | ../@to"
             "When target= is\x{a}" ~
             "            present, neither from= nor to= should be."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    (
     ## points to the starting point of the span of text being glossed by this ruby text.
     attribute from {
       xsd:anyURI { pattern = "\S+" }
     }?)
    >> sch:pattern [
         id = "propy-rt-from-rt-from-constraint-assert-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rt/@from"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@to"
             "When from= is present, the to=\x{a}" ~
             "            attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    (
     ## points to the ending point of the span of text being glossed.
     attribute to {
       xsd:anyURI { pattern = "\S+" }
     }?)
    >> sch:pattern [
         id = "propy-rt-to-rt-to-constraint-assert-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rt/@to"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "../@from"
             "When to= is present, the from=\x{a}" ~
             "            attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_sic =
  
  ## (Lateinisch f√ºr 'auf diese Weise', 'so') enth√§lt Text, wie er in der Vorlage steht, obwohl er offensichtlich fehlerhaft ist. []
  element sic {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_corr =
  
  ## (Korrektur) enth√§lt die korrekte Form einer offenbar fehlerhaften Textstelle in der Vorlage. []
  element corr {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_choice =
  
  ## (Alternative) gruppiert alternative Kodierungen f√ºr eine Stelle im Text. []
  element choice {
    (tei_model.choicePart | tei_choice)+,
    tei_att.global.attributes,
    empty
  }
tei_reg =
  
  ## (Normalisierung) enth√§lt eine normalisierte Schreibweise einer Textstelle.  [ ]
  element reg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_orig =
  
  ## (originale Form) enth√§lt jene Schreibweise, die der Vorlage folgt und nicht normalisiert oder korrigiert ist. [ ]
  element orig {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_gap =
  
  ## (Auslassung) weist in einer Transkription auf eine Stelle hin, in der Text aus der Vorlage ausgelassen worden ist, sei es aus editorischen Gr√ºnden, die im TEI-Header beschrieben werden, sei es auf Grund der Auswahlpraxis, sei es weil das Material nicht lesbar, nicht sichtbar oder nicht h√∂rbar ist. []
  element gap {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.timed.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## (Grund) gibt den Grund f√ºr die Auslassung an
    ## Suggested values include: 1] cancelled (cancelled); 2] deleted (deleted); 3] editorial (editorial); 4] illegible (illegible); 5] inaudible (inaudible); 6] irrelevant (irrelevant); 7] sampling (sampling)
    attribute reason {
      list {
        (
         ## (abgebrochen) 
         "cancelled"
         | 
           ## (getilgt) 
           "deleted"
         | 
           ## (editorial) f√ºr Bestandteile, die aus editorischen Gr√ºnden nicht √ºbertragen wurden
           "editorial"
         | 
           ## (unleserlich) 
           "illegible"
         | 
           ## (nicht h√∂rbar) 
           "inaudible"
         | 
           ## (irrelevant) 
           "irrelevant"
         | 
           ## (Auswahl) 
           "sampling"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
      }
    }?,
    
    ## (Ursache) bestimmt im Falle von Text, der wegen Besch√§digung weggelassen wird, die Ursache f√ºr den Schaden, sofern er ermittelt werden kann.
    ## Sample values include: 1] rubbing (rubbing); 2] mildew (mildew); 3] smoke (smoke)
    attribute agent {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_ellipsis =
  
  ## (deliberately marked omission) indicates a purposeful marking in the source document signalling that content has been omitted, and may also supply or describe the omitted content. []
  element ellipsis {
    (tei_metamark, tei_model.descLike?, tei_supplied?),
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    tei_att.timed.attributes,
    empty
  }
tei_add =
  
  ## (Hinzuf√ºgung) enth√§lt Buchstaben, W√∂rter oder Phrasen, die in den Ausgangstext von einem Autor, einem Schreiber oder im Rahmen einer zuvor erfolgten Annotation oder Korrektur in den Ausgangstext eingef√ºgt wurden  []
  element add {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_del =
  
  ## (Streichung) enth√§lt Buchstaben, W√∂rter oder Textpassagen, die in der Vorlage von einem Autor, einem Schreiber oder im Rahmen einer zuvor erfolgten Annotation oder Korrektur gel√∂scht wurden oder als gel√∂scht bzw. gegenstandslos gekennzeichnet wurden. []
  element del {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_unclear =
  
  ## (unclear) enth√§lt ein Wort, einen Satz oder eine Textpassage, welche in der Quelle nicht oder nur schwer lesbar bzw. h√∂rbar ist.  [ ]
  element unclear {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## gibt den Grund an, warum das Material schwer zu transkribieren ist.
    ## Suggested values include: 1] illegible (illegible); 2] inaudible (inaudible); 3] faded (faded); 4] background_noise (background_noise); 5] eccentric_ductus (eccentric_ductus)
    attribute reason {
      list {
        (
         ## (unleserlich) 
         "illegible"
         | 
           ## (nicht h√∂rbar) 
           "inaudible"
         | 
           ## (ausgebleicht) 
           "faded"
         | 
           ## (Hintergrundl√§rm) 
           "background_noise"
         | 
           ## (exzentrischer Duktus) indicates illegibility due to an unusual, awkward, or incompetent execution of a glyph or glyphs 
           "eccentric_ductus"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })+
      }
    }?,
    
    ## basiert die Schwierigkeit bei der Transkription auf einer schadhaften Stelle am Texttr√§ger, kann der Grund daf√ºr hier genauer kategorisiert werden.
    ## Sample values include: 1] rubbing; 2] mildew; 3] smoke
    attribute agent {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_name =
  
  ## (Name, Eigenname) enth√§lt einen Eigennamen in Form eines Nomens oder einer Nominalphrase. []
  element name {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_rs =
  
  ## (verweisende Zeichenkette) enth√§lt eine allgemeine Benennung oder eine verweisende Zeichenkette. [ ]
  element rs {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_email =
  
  ## (electronic mail address) contains an email address identifying a location to which email messages can be delivered. []
  element email {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_address =
  
  ## (Adresse) enth√§lt eine Postadresse, z. B. eines Verlegers, einer Organisation oder einer Einzelperson. [  ]
  element address {
    (tei_model.global*, (tei_model.addrPart, tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_addrLine =
  
  ## (Adresszeile) enth√§lt eine Zeile einer Postadresse. [  ]
  element addrLine {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_street =
  
  ## contains a full street address including any name or number identifying a building as well as the name of the street or route on which it is located. []
  element street {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_postCode =
  
  ## (postal code) contains a numerical or alphanumeric code used as part of a postal address to simplify sorting or delivery of mail. []
  element postCode { text, tei_att.global.attributes, empty }
tei_postBox =
  
  ## (postal box or post office box) contains a number or other identifier for some postal delivery point other than a street address. []
  element postBox { text, tei_att.global.attributes, empty }
tei_num =
  
  ## (Zahl) beinhaltet eine Zahl, die auf beliebige Art geschrieben sein kann. []
  element num {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.ranging.attributes,
    
    ## bestimmt die Art des numerischen Wertes.
    ## Suggested values include: 1] cardinal; 2] ordinal; 3] fraction; 4] percentage
    attribute type {
      
      ## Kardinalzahl, z. B. 21, 21,5
      "cardinal"
      | 
        ## Ordinalzahl, z. B. 21., f√ºnfter
        "ordinal"
      | 
        ## Bruchzahl, z. B. 1/2 oder drei Viertel
        "fraction"
      | 
        ## Prozentangabe
        "percentage"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## beinhaltet den Zahlenwert in standardisierter Form.
    attribute value {
      xsd:double
      | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
      | xsd:decimal
    }?,
    empty
  }
tei_measure =
  
  ## (measure) contains a word or phrase referring to some quantity of an object or commodity, usually comprising a number, a unit, and a commodity name. []
  element measure {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.measurement.attributes,
    tei_att.ranging.attributes,
    
    ## specifies the type of measurement in any convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_measureGrp =
  
  ## (measure group) contains a group of dimensional specifications which relate to the same object, for example the height and width of a manuscript page. []
  element measureGrp {
    (text | tei_model.gLike | tei_model.measureLike)*,
    tei_att.global.attributes,
    tei_att.measurement.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_unit =
  
  ## enth√§lt ein Symbol, ein Wort oder eine Phrase, die sich auf eine Ma√üeinheit in einem formellen oder informellen System bezieht. []
  element unit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.measurement.attributes,
    empty
  }
tei_date =
  
  ## (Datum) enth√§lt ein Datum in beliebigem Format. [     ]
  element date {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_time =
  
  ## (Zeit) beinhaltet eine Phrase, die eine Uhr- oder Tageszeit in einem beliebigen Format bestimmt. []
  element time {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.canonical.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_abbr =
  
  ## (Abk√ºrzung) enth√§lt eine Abk√ºrzung beliebiger Form. []
  element abbr {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (Typ) erlaubt es, die Abk√ºrzung nach einer geeigneten Typologie zu klassifizieren.
    ## Sample values include: 1] suspension (suspension); 2] contraction (contraction); 3] brevigraph; 4] superscription (superscription); 5] acronym (acronym); 6] title (title); 7] organization (organization); 8] geographic (geographic)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_expan =
  
  ## (Abk√ºrzungsaufl√∂sung) enth√§lt die aufgel√∂ste Form einer Abk√ºrzung. []
  element expan {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_ptr =
  
  ## (pointer) defines a pointer to another location. [ ]
  element ptr {
    empty
    >> sch:pattern [
         id = "propy-ptr-ptrAtts-constraint-report-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.cReferencing.attributes,
    tei_att.declaring.attributes,
    tei_att.global.attributes,
    tei_att.internetMedia.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_ref =
  
  ## (Referenz) definiert einen externen oder internen Verweis, der auch durch einen zus√§tzlichen Text oder Kommentar erg√§nzt werden kann. [ ]
  element ref {
    tei_macro.paraContent
    >> sch:pattern [
         id = "propy-ref-refAtts-constraint-report-10"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.cReferencing.attributes,
    tei_att.declaring.attributes,
    tei_att.global.attributes,
    tei_att.internetMedia.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_list =
  
  ## (Liste) enth√§lt eine Reihe von Listenpunkten, die als Liste organisiert sind. []
  element list {
    ((tei_model.divTop | tei_model.global | tei_desc*)*,
     ((tei_item, tei_model.global*)+
      | (tei_headLabel?,
         tei_headItem?,
         (tei_label, tei_model.global*, tei_item, tei_model.global*)+)),
     (tei_model.divBottom, tei_model.global*)*)
    >> sch:pattern [
         id =
           "propy-list-gloss-list-must-have-labels-constraint-rule-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (Typ) beschreibt die Art der Listenpunkte.
    ## Suggested values include: 1] gloss (gloss); 2] index (index); 3] instructions (instructions); 4] litany (litany); 5] syllogism (syllogism)
    attribute type {
      [
        a:documentation [
          "(Gloss) jeder Listenpunkt erl√§utert einen Begriff oder ein Konzept, das von einem voranstehenden "
          ns1:code [ "<label>" ]
          "-Element genannt wird."
        ]
      ]
      "gloss"
      | 
        ## (Index) jeder Listenpunkt ist ein Registereintrag z. B. in einem alphabetisch geordneten Sachregister am Ende einer Druckausgabe.
        "index"
      | 
        ## (Arbeitsschritt) jeder Listenpunkt ist ein Arbeitsschritt in einer Folge von Anweisungen, wie z. B. in einem Rezept.
        "instructions"
      | 
        ## (Litanei) jeder Listenpunkt ist Teil einer Reihenfolge von Gebeten, Bitten oder Anrufungen die √ºblicherweise in einem religi√∂sen Ritual verwendet werden.
        "litany"
      | 
        ## (logischer Schluss) jeder Listenpunkt ist Teil eines Arguments, das aus zwei oder mehr Pr√§missen und einem daraus gezogenen Schluss besteht.
        "syllogism"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_item =
  
  ## (Listenpunkt) enth√§lt einen Listenpunkt. [ ]
  element item {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_label =
  
  ## (Label) enth√§lt ein Label oder eine √úberschrift zur Identifikation eines Textteils, insbesondere in einer Liste oder einem Glossar. []
  element label {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    empty
  }
tei_head =
  
  ## (√úberschrift) enth√§lt eine beliebige Art von √úberschrift, z. B. eines Kapitels, einer Liste, eines Glossars oder einer Handschriftenbeschreibung. []
  element head {
    (text
     | tei_lg
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.lLike
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    empty
  }
tei_headLabel =
  
  ## (heading for list labels) contains the heading for the label or term column in a glossary list or similar structured list. []
  element headLabel {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_headItem =
  
  ## (heading for list items) contains the heading for the item or gloss column in a glossary list or similar structured list. []
  element headItem {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_note =
  
  ## (Anmerkung) enth√§lt eine Anmerkung oder Annotation. [   ]
  element note {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    tei_att.anchoring.attributes,
    empty
  }
tei_noteGrp =
  
  ## (note group) contains a group of notes []
  element noteGrp {
    (tei_desc*, (tei_note | tei_noteGrp)+),
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    tei_att.anchoring.attributes,
    empty
  }
tei_index =
  
  ## (index entry) marks a location to be indexed for whatever purpose. []
  element index {
    (tei_term, tei_index?)*,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    
    ## a single word which follows the rules defining a legal XML name (see ), supplying a name to specify which index (of several) the index entry belongs to.
    attribute indexName { xsd:Name }?,
    empty
  }
tei_media =
  
  ## indicates the location of any form of external media such as an audio or video clip etc. []
  element media {
    tei_model.descLike*,
    tei_att.typed.attributes,
    tei_att.global.attributes,
    tei_att.media.attribute.width,
    tei_att.media.attribute.height,
    tei_att.media.attribute.scale,
    tei_att.resourced.attributes,
    tei_att.declaring.attributes,
    tei_att.timed.attributes,
    
    ## (MIME media type) specifies the applicable multimedia internet mail extension (MIME) media type
    attribute mimeType {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    },
    empty
  }
tei_graphic =
  
  ## (Abbildung) gibt den Ort einer Bildressource an, die entweder Teil eines Texts oder ein Abbild dessen ist. [ ]
  element graphic {
    tei_model.descLike*,
    tei_att.global.attributes,
    tei_att.media.attributes,
    tei_att.resourced.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_binaryObject =
  
  ## provides encoded binary data representing an inline graphic, audio, video or other object. []
  element binaryObject {
    text,
    tei_att.global.attributes,
    tei_att.media.attributes,
    tei_att.timed.attributes,
    tei_att.typed.attributes,
    [
      a:documentation [
        "The encoding used to encode the binary data. If not specified, this is assumed to be "
        ns1:a [ href = "http://en.wikipedia.org/wiki/Base64" "Base64" ]
        "."
      ]
    ]
    attribute encoding {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_milestone =
  
  ## (Grenzpunkt) markiert einen Grenzpunkt, der Abschnitte eines Textes trennen kann, typischerweise (aber nicht notwendigerweise) den Wechsel eines Bezugssystems, der nicht durch ein strukturelles Markup beschrieben werden kann. []
  element milestone {
    empty,
    tei_att.global.attributes,
    tei_att.milestoneUnit.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_gb =
  
  ## (gathering beginning) marks the beginning of a new gathering or quire in a transcribed codex. []
  element gb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    tei_att.edition.attributes,
    empty
  }
tei_pb =
  
  ## (Seitenanfang) markiert den Anfang einer neuen Seite in einem Dokument mit Seitenzahlen. []
  element pb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_lb =
  
  ## (Zeilenanfang) markiert den Anfang einer neuen typographischen Zeile in einer bestimmten Auflage oder Version eines Textes. [ ]
  element lb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_cb =
  
  ## (column beginning) marks the beginning of a new column of a text on a multi-column page. []
  element cb {
    empty,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.edition.attributes,
    tei_att.spanning.attributes,
    tei_att.breaking.attributes,
    empty
  }
tei_analytic =
  
  ## (analytic level) contains bibliographic elements describing an item (e.g. an article or poem) published within a monograph or journal and not as an independent publication. []
  element analytic {
    (tei_author
     | tei_editor
     | tei_respStmt
     | tei_title
     | tei_model.ptrLike
     | tei_date
     | tei_textLang
     | tei_idno
     | tei_availability)*,
    tei_att.global.attributes,
    empty
  }
tei_monogr =
  
  ## (monographic level) contains bibliographic elements describing an item (e.g. a book or journal) published as an independent item (i.e. as a separate physical object). []
  element monogr {
    ((((tei_author | tei_editor | tei_meeting | tei_respStmt),
       (tei_author | tei_editor | tei_meeting | tei_respStmt)*,
       tei_title+,
       (tei_model.ptrLike
        | tei_idno
        | tei_textLang
        | tei_editor
        | tei_respStmt)*)
      | ((tei_title | tei_model.ptrLike | tei_idno)+,
         (tei_textLang
          | tei_author
          | tei_editor
          | tei_meeting
          | tei_respStmt)*)
      | (tei_authority, tei_idno))?,
     tei_availability*,
     tei_model.noteLike*,
     (tei_edition,
      (tei_idno
       | tei_model.ptrLike
       | tei_editor
       | tei_sponsor
       | tei_funder
       | tei_respStmt)*)*,
     tei_imprint,
     (tei_imprint | tei_extent | tei_biblScope)*),
    tei_att.global.attributes,
    empty
  }
tei_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has appeared. []
  element series {
    (text
     | tei_model.gLike
     | tei_title
     | tei_model.ptrLike
     | tei_editor
     | tei_respStmt
     | tei_biblScope
     | tei_idno
     | tei_textLang
     | tei_model.global
     | tei_availability)*,
    tei_att.global.attributes,
    empty
  }
tei_author =
  
  ## (Autor) enth√§lt in einer bibliografischen Referenz den oder die Namen eines Autors eines Werks (oder einer f√ºr das Werk verantwortlichen K√∂rperschaft); zum Beispiel in der Form, wie sie eine anerkannte bibliografische Instanz anbietet. [ ]
  element author {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_editor =
  
  ## beinhaltet zus√§tzliche Angaben zur Verantwortlichkeit f√ºr ein bibliografisches Objekt, z. B. den Namen einer Person, Institution oder Organisation (oder mehreren davon), welche als Herausgeber, Kompilator, √úbersetzer etc. fungiert. []
  element editor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_respStmt =
  [
    a:documentation [
      "(Angaben zur Verantwortlichkeit) enth√§lt Angaben zur Verantwortlichkeit f√ºr den intellektuellen Inhalt eines Textes, einer Edition, einer Aufnahme oder Reihe, wo die spezialisierten Elemente "
      ns1:code [ "<author>" ]
      ", "
      ns1:code [ "<editor>" ]
      " etc. nicht ausreichen oder unzutreffend sind; auch verwendbar f√ºr Informationen zu Individuen oder Organisationen, die bei der Produktion oder Verbreitung eines bibliografischen Objekts eine Rolle gespielt. [   ]"
    ]
  ]
  element respStmt {
    (((tei_resp+, tei_model.nameLike.agent+)
      | (tei_model.nameLike.agent+, tei_resp+)),
     tei_note*),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_resp =
  
  ## (Verantwortlichkeit) enth√§lt eine Phrase, die die Art der intellektuellen Verantwortung einer Person oder die Rolle einer Organisation bei der Herstellung oder Distribution eines Werkes beschreibt. [   ]
  element resp {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_title =
  
  ## (Titel) beinhaltet einen Titel eines beliebigen Werks. [  ]
  element title {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    
    ## klassifiziert den Titel entsprechend einer geeigneten Typologie.
    ## Sample values include: 1] main; 2] sub (subordinate); 3] alt (alternate); 4] short; 5] desc (descriptive)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## gibt den bibliografischen Typ eines Titels an, d.h. ob er einen Artikel, ein Buch, eine Zeitschrift, eine Reihe oder unpubliziertes Material bezeichnet.
    attribute level {
      
      ## (unselbst√§ndig) der Titel geh√∂rt zu einer unselbst√§ndigen Publikation, wie einem Artikel, Gedicht oder einem anderen Werk, das als Teil einer umfangreicheren Einheit publiziert wurde.
      "a"
      | 
        ## (Monografie) der Titel bezieht sich auf Monografien wie z.B. ein B√ºcher oder andere selbst√§ndige Publikationen, also auch auf einzelne B√§nde in einem mehrb√§ndigen Werk.
        "m"
      | 
        ## (Zeitschrift) der Titel bezieht sich auf jede Art fortlaufender oder periodischer Ver√∂ffentlichungen wie z. B. Zeitschriften, Magazine oder Zeitungen.
        "j"
      | 
        ## (Reihe) der Titel bezeichnet eine Reihe von ansonsten selbst√§ndig publizierten Ver√∂ffentlichungen, wie z. B. eine Buchreihe.
        "s"
      | 
        ## (unver√∂ffentlicht) der Titel bezieht sich auf unver√∂ffentliches Material (incl. universit√§re Qualifikationsarbeiten, soweit sie nicht von einem Verlag ver√∂ffentlicht worden sind).
        "u"
    }?,
    empty
  }
tei_meeting =
  
  ## contains the formalized descriptive title for a meeting or conference, for use in a bibliographic description for an item derived from such a meeting, or as a heading or preamble to publications emanating from it. []
  element meeting {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_imprint =
  
  ## groups information relating to the publication or distribution of a bibliographic item. []
  element imprint {
    ((tei_classCode | tei_catRef)*,
     ((tei_model.imprintPart | tei_model.dateLike),
      tei_respStmt*,
      tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_publisher =
  
  ## (Verlag) gibt den Namen der Organisation an, die f√ºr die Ver√∂ffentlichung und Verbreitung eines bibliografischen Objekts verantwortlich ist. [ ]
  element publisher {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_biblScope =
  
  ## (Geltungsbereich einer bibliografischen Referenz) grenzt den Geltungsbereich einer bibliografischen Referenz ein, zum Beispiel in Form von Seitenangaben oder benannten Unterabschnitten eines umfangreicheren Werks. []
  element biblScope {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.citing.attributes,
    empty
  }
tei_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units []
  element citedRange {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.citing.attributes,
    empty
  }
tei_pubPlace =
  
  ## (Verlagsort) enth√§lt den Namen des Orts, an dem ein bibliografisches Objekt ver√∂ffentlicht wurde. []
  element pubPlace {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_bibl =
  
  ## (bibliografische Angabe) enth√§lt eine lose strukturierte bibliografische Angabe, in der einzelne Komponenten explizit ausgezeichnet sein k√∂nnen. [  ]
  element bibl {
    (text
     | tei_model.gLike
     | tei_model.highlighted
     | tei_model.pPart.data
     | tei_model.pPart.edit
     | tei_model.segLike
     | tei_model.ptrLike
     | tei_model.biblPart
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    tei_att.sortable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_biblStruct =
  
  ## (structured bibliographic citation) contains a structured bibliographic citation, in which only bibliographic sub-elements appear and in a specified order. [  ]
  element biblStruct {
    (tei_analytic*,
     (tei_monogr, tei_series*)+,
     (tei_model.noteLike
      | tei_model.ptrLike
      | tei_relatedItem
      | tei_citedRange)*),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    tei_att.sortable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_listBibl =
  
  ## (Liste bibliografischer Angaben) enth√§lt eine Liste von bibliografischen Angaben jeglicher Art. [  ]
  element listBibl {
    (tei_model.headLike*,
     tei_desc*,
     (tei_model.milestoneLike | tei_relation | tei_listRelation)*,
     (tei_model.biblLike+,
      (tei_model.milestoneLike | tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_relatedItem =
  
  ## enth√§lt oder verweist auf ein anderes bibliografisches Objekt, welches zu dem aktuellen in einer bestimmten Beziehung steht, z. B. als Bestandteil oder Alternativfassung. []
  element relatedItem {
    ((tei_model.biblLike | tei_model.ptrLike)?)
    >> sch:pattern [
         id = "propy-relatedItem-targetorcontent1-constraint-report-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relatedItem"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and count( child::* ) > 0"
             "\x{a}" ~
             "If the @target attribute on "
             sch:name [ ]
             " is used, the\x{a}" ~
             "relatedItem element must be empty"
           ]
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@target or child::*"
             "A relatedItem element should have either a 'target' attribute\x{a}" ~
             "        or a child element to indicate the related bibliographic item"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## zeigt auf das in Beziehung stehende bibliografische Objekt durch eine absolute oder relative URI
    attribute target {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_l =
  
  ## (Vers(zeile)) enth√§lt eine einzelne, m√∂glicherweise unvollst√§ndige, Verszeile. [  ]
  element l {
    ((text
      | tei_model.gLike
      | tei_model.phrase
      | tei_model.inter
      | tei_model.global)*)
    >> sch:pattern [
         id =
           "propy-l-abstractModel-structure-l-in-l-constraint-report-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:l"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:l[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain lines or lg elements.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.fragmentable.attributes,
    empty
  }
tei_lg =
  
  ## (Gruppe von Vers(zeil)en) enth√§lt eine oder mehrere Verse bzw. Verszeilen, die zusammen eine formale Einheit (z. B. Strophe, Refrain) bilden. [  ]
  element lg {
    ((tei_model.divTop | tei_model.global)*,
     (tei_model.lLike
      | tei_model.stageLike
      | tei_model.labelLike
      | tei_lg),
     (tei_model.lLike
      | tei_model.stageLike
      | tei_model.labelLike
      | tei_model.global
      | tei_lg)*,
     (tei_model.divBottom, tei_model.global*)*)
    >> sch:pattern [
         id = "propy-lg-atleast1oflggapl-constraint-assert-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg, or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-lg-abstractModel-structure-lg-in-l-constraint-report-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "ancestor::tei:l[not(.//tei:note//tei:lg[. = current()])]"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain line groups.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_sp =
  
  ## (Figurenrede) enth√§lt eine einzelne Figurenrede in einem Dramentext oder eine entsprechende Passage in einem Prosatext oder lyrischen Text. [  ]
  element sp {
    (tei_model.global*,
     (tei_speaker, tei_model.global*)?,
     ((tei_lg
       | tei_model.lLike
       | tei_model.pLike
       | tei_model.listLike
       | tei_model.stageLike
       | tei_model.attributable),
      (tei_model.global* | tei_q))+),
    tei_att.global.attributes,
    tei_att.ascribed.directed.attributes,
    empty
  }
tei_speaker =
  
  ## enth√§lt eine spezielle Form von √úberschrift oder Bezeichnung f√ºr einen oder mehrere Namen von Figuren in einem Dramentext oder -fragment. []
  element speaker {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_stage =
  
  ## (Regieanweisung) enth√§lt jegliche Regieanweisung in einem Dramentext oder -fragment. [  ]
  element stage {
    tei_macro.specialPara,
    tei_att.ascribed.directed.attributes,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    
    ## beschreibt die Art der Regieanweisung.
    ## Suggested values include: 1] setting; 2] entrance; 3] exit; 4] business; 5] novelistic; 6] delivery; 7] modifier; 8] location; 9] mixed
    attribute type {
      list {
        (
         ## beschreibt die Szenerie.
         "setting"
         | 
           ## beschreibt einen Auftritt.
           "entrance"
         | 
           ## beschreibt einen Abgang.
           "exit"
         | 
           ## beschreibt eine B√ºhnenhandlung.
           "business"
         | 
           ## beschreibt eine narrative Regieanweisung.
           "novelistic"
         | 
           ## beschreibt die Art und Weise der Darbietung einer Figurenrede.
           "delivery"
         | 
           ## gibt n√§here Details zu einer Figur an.
           "modifier"
         | 
           ## beschreibt einen Handlungsort.
           "location"
         | 
           ## mehrere der oben angef√ºhrten Funktionen.
           "mixed"
         | xsd:token { pattern = "[^\p{C}\p{Z}]+" })*
      }
    }?,
    empty
  }
tei_teiCorpus =
  [
    a:documentation [
      "(TEI-Korpus) enth√§lt ein vollst√§ndiges Korpus, das in TEI kodiert ist, mit einem gemeinsamen TEI-Header und einem oder mehreren "
      ns1:code [ "<TEI>" ]
      "-Elementen, die jeweils einen eigenen TEI-Header und Text enthalten. [ ]"
    ]
  ]
  element teiCorpus {
    (tei_teiHeader, tei_model.resource*, tei_model.describedResource+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## (Version) gibt die Versionsnummer der TEI-Richtlinien an, gegen die dieses Dokument validiert wird.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_divGen =
  
  ## (automatically generated text division) indicates the location at which a textual division generated automatically by a text-processing application is to appear. []
  element divGen {
    tei_model.headLike*,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies what type of generated text division (e.g. index, table of contents, etc.) is to appear.
    ## Sample values include: 1] index; 2] toc; 3] figlist; 4] tablist
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_textLang =
  
  ## (text language) describes the languages and writing systems identified within the bibliographic work being described, rather than its description. [ ]
  element textLang {
    tei_macro.specialPara,
    tei_att.global.attributes,
    
    ## (main language) supplies a code which identifies the chief language used in the bibliographic work.
    attribute mainLang {
      xsd:language
      | (
         ##
         "")
    }?,
    
    ## (other languages) one or more codes identifying any other languages used in the bibliographic work.
    attribute otherLangs {
      list {
        (xsd:language
         | (
            ##
            ""))*
      }
    }?,
    empty
  }
tei_att.citeStructurePart.attributes =
  tei_att.citeStructurePart.attribute.use
tei_att.citeStructurePart.attribute.use =
  [
    a:documentation [
      "(use) supplies an XPath selection pattern using the syntax defined in . The XPath pattern is relative to the context given in "
      ns1:code [ "@match" ]
      ", which will either be a sibling attribute in the case of `<citeStructure>` or on the parent `<citeStructure>` in the case of `<citeData>`."
    ]
  ]
  attribute use { text }
tei_att.patternReplacement.attributes =
  tei_att.patternReplacement.attribute.matchPattern,
  tei_att.patternReplacement.attribute.replacementPattern
tei_att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { xsd:token }
tei_att.patternReplacement.attribute.replacementPattern =
  [
    a:documentation [
      "beschreibt ein replacement pattern (Ersetzungsmuster), das hei√üt das Grundger√ºst einer relativen oder absoluten URI, die Referenzen auf Gruppen im "
      ns1:code [ "@matchPattern" ]
      "-Attribut enthalten und die URI komplettieren, sobald die Ersetzung der untergeordneten Muster durchgef√ºhrt wurde."
    ]
  ]
  attribute replacementPattern { text }
tei_teiHeader =
  
  ## (TEI-Header (elektronische Titelseite)) beinhaltet beschreibende und erkl√§rende Metadaten, die einer digitalen Ressource oder einer Sammlung von Ressourcen vorangestellt sind. [ ]
  element teiHeader {
    (tei_fileDesc, tei_model.teiHeaderPart*, tei_revisionDesc?),
    tei_att.global.attributes,
    empty
  }
tei_fileDesc =
  
  ## (Dateibeschreibung) enth√§lt die vollst√§ndige bibliografische Beschreibung einer elektronischen Datei. [ ]
  element fileDesc {
    ((tei_titleStmt,
      tei_editionStmt?,
      tei_extent?,
      tei_publicationStmt,
      tei_seriesStmt*,
      tei_notesStmt?),
     tei_sourceDesc+),
    tei_att.global.attributes,
    empty
  }
tei_titleStmt =
  
  ## (Angaben zum Titel) umfasst Angaben zum Titel eines Werks und zu den f√ºr seinen Inhalt Verantwortlichen. [ ]
  element titleStmt {
    (tei_title+, tei_model.respLike*), tei_att.global.attributes, empty
  }
tei_sponsor =
  
  ## (F√∂rderer) gibt den Namen einer Organisation oder Institution an, die als F√∂rderer auftritt. []
  element sponsor {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_funder =
  
  ## (Geldgeber) gibt den Namen einer Einzelperson, Institution oder Organisation an, die f√ºr die Finanzierung eines Projekts oder Textes verantwortlich ist. []
  element funder {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_principal =
  
  ## (Projektleiter) gibt den Namen des Projektleiters an, der f√ºr die Erstellung eines elektronischen Textes verantwortlich ist. []
  element principal {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_editionStmt =
  
  ## (Angaben zur Ausgabe) umfasst Angaben, die sich auf eine spezifische Ausgabe eines Textes beziehen. [ ]
  element editionStmt {
    (tei_model.pLike+ | (tei_edition, tei_model.respLike*)),
    tei_att.global.attributes,
    empty
  }
tei_edition =
  
  ## (Ausgabe) beschreibt die Details einer Ausgabe eines Textes. []
  element edition {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_extent =
  
  ## (extent) beschreibt die ungef√§hre Gr√∂√üe des elektronischen Textes, die er auf einem Datentr√§ger einnimmt; kann auch f√ºr andere digitale oder nicht digitale Objekte verwendet werden; die Angabe erfolgt in entsprechenden Ma√üeinheiten. [   ]
  element extent {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_publicationStmt =
  
  ## (Angaben zur Ver√∂ffentlichung) umfasst Angaben zu Ver√∂ffentlichung oder Vertrieb eines elektronischen oder sonstigen Textes. [ ]
  element publicationStmt {
    ((tei_model.publicationStmtPart.agency,
      tei_model.publicationStmtPart.detail*)+
     | tei_model.pLike+),
    tei_att.global.attributes,
    empty
  }
tei_distributor =
  
  ## (Distributor) gibt die Person oder Instanz an, die f√ºr die Distribution des Textes verantwortlich ist. []
  element distributor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_authority =
  
  ## (Freigabeinstanz) gibt die Person oder Instanz (au√üer Verlag oder Distributor) an, die f√ºr den Zugang zu einer Ressource verantwortlich ist. []
  element authority {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_idno =
  
  ## (Identifikator) enth√§lt einen frei w√§hlbaren Identifikator, der ein beliebiges Objekt, z. B. eine bibliografische Einheit, eine Person, einen Titel, eine Organisation, in standardisierter Weise identifiziert. [   ]
  element idno {
    (text | tei_model.gLike | tei_idno)*,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attribute.subtype,
    
    ## bestimmt die Art des Identifikators (z. B. ISBN, Sozialversicherungsnummer, URI)
    ## Suggested values include: 1] ISBN; 2] ISSN; 3] DOI; 4] URI; 5] VIAF; 6] ESTC; 7] OCLC
    attribute type {
      [
        a:documentation [
          "International Standard Book Number: a 13- or (if assigned prior to 2007) 10-digit identifying number assigned by the publishing industry to a published book or similar item, registered with the "
          ns1:a [
            href = "https://www.isbn-international.org"
            " International ISBN Agency."
          ]
          "\x{a}" ~
          "                  "
        ]
      ]
      "ISBN"
      | 
        ## International Standard Serial Number: an eight-digit number to uniquely identify a serial publication.
        "ISSN"
      | 
        ## Digital Object Identifier: a unique string of letters and numbers assigned to an electronic document.
        "DOI"
      | [
          a:documentation [
            "Uniform Resource Identifier: a string of characters to uniquely identify a resource, following the syntax of "
            ns1:a [
              href = "https://datatracker.ietf.org/doc/html/rfc3986"
              "RFC 3986"
            ]
            "."
          ]
        ]
        "URI"
      | 
        ## A data number in the Virtual Internet Authority File assigned to link different names in catalogs around the world for the same entity.
        "VIAF"
      | 
        ## English Short-Title Catalogue number: an identifying number assigned to a document in English printed in the British Isles or North America before 1801.
        "ESTC"
      | 
        ## OCLC control number (record number) for the union catalog record in WorldCat, a union catalog for member libraries in the Online Computer Library Center global cooperative.
        "OCLC"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_availability =
  
  ## (Verf√ºgbarkeit) liefert Informationen zur Verf√ºgbarkeit eines Textes, zum Beispiel Einschr√§nkungen bez√ºglich des Gebrauchs oder der Weitergabe, Lizensierungen usw. []
  element availability {
    (tei_model.availabilityPart | tei_model.pLike)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (Statuscode) gibt einen Code an, der die derzeitige Nutzbarkeit eines Textes festlegt.
    attribute status {
      
      ## (frei) der Text ist frei verf√ºgbar.
      "free"
      | 
        ## (unbekannt) der Status des Textes ist unbekannt.
        "unknown"
      | 
        ## (eingeschr√§nkt) der Text ist nicht frei verf√ºgbar.
        "restricted"
    }?,
    empty
  }
tei_licence =
  
  ## beinhaltet f√ºr den Text g√ºltige Lizenzinformationen oder andere rechtswirksame Vereinbarungen. []
  element licence {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_seriesStmt =
  
  ## (Angaben zu einer Publikationsreihe) umfasst Angaben zu einer Publikationsreihe, zu der eine Ver√∂ffentlichung geh√∂rt. [ ]
  element seriesStmt {
    (tei_model.pLike+
     | (tei_title+,
        (tei_editor | tei_respStmt)*,
        (tei_idno | tei_biblScope)*)),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_notesStmt =
  
  ## (Zus√§tzliche Anmerkungen) fasst Anmerkungen zu einem Text zusammen, zus√§tzlich zu jenen Informationen, die in anderen Teilen der bibliografischen Beschreibung bereits festgehalten sind. [ ]
  element notesStmt {
    (tei_model.noteLike | tei_relatedItem)+,
    tei_att.global.attributes,
    empty
  }
tei_sourceDesc =
  
  ## (Beschreibung der Quellen) beschreibt die Quelle, von der sich der elektronische Text ableitet. √úblicherweise eine bibliografische Beschreibung im Falle eines digitalisierten Textes oder eine Bezeichnung wie "born digital" f√ºr einen nur in elektronischer Form vorliegenden Text.  []
  element sourceDesc {
    (tei_model.pLike+
     | (tei_model.biblLike
        | tei_model.sourceDescPart
        | tei_model.listLike)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_biblFull =
  
  ## (fully-structured bibliographic citation) contains a fully-structured bibliographic citation, in which all components of the TEI file description are present. [   ]
  element biblFull {
    (((tei_titleStmt,
       tei_editionStmt?,
       tei_extent?,
       tei_publicationStmt,
       tei_seriesStmt*,
       tei_notesStmt?),
      tei_sourceDesc*)
     | (tei_fileDesc, tei_profileDesc)),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_encodingDesc =
  
  ## (Beschreibung der Kodierung) dokumentiert das Verh√§ltnis zwischen dem elektronischen Text und seiner Quelle oder den Quellen, von denen er sich ableitet. [ ]
  element encodingDesc {
    (tei_model.encodingDescPart | tei_model.pLike)+,
    tei_att.global.attributes,
    empty
  }
tei_schemaRef =
  
  ## (schema reference) describes or points to a related customization or schema file []
  element schemaRef {
    tei_model.descLike?,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.resourced.attributes,
    
    ## the identifier used for the customization or schema
    attribute key { xsd:NCName }?,
    empty
  }
tei_projectDesc =
  
  ## (Beschreibung des Projekts) beschreibt detailliert Ziel bzw. Zweck, f√ºr den eine Datei kodiert wurde, zusammen mit weiteren relevanten Informationen, die das Verfahren betreffen, nach dem die Daten zusammengestellt oder gesammelt wurden. [  ]
  element projectDesc {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_samplingDecl =
  
  ## (Angabe der Auswahlverfahren) enth√§lt eine Beschreibung der Kriterien und Methoden, nach denen die Texte f√ºr ein Korpus oder eine Sammlung zusammengestellt wurden. [  ]
  element samplingDecl {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_editorialDecl =
  
  ## (Angabe der Editionsprinzipien) beschreibt die Details der Editionsprinzipien und Verfahren, die bei der Kodierung des Textes angewandt wurden. [  ]
  element editorialDecl {
    (tei_model.pLike | tei_model.editorialDeclPart)+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_correction =
  
  ## (Korrekturverfahren) gibt an, wie und unter welchen Bedingungen Korrekturen an dem Text vorgenommen wurden. [ ]
  element correction {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## gibt Auskunft √ºber das Ausma√ü von Korrekturen, die an dem Text vorgenommen wurden.
    attribute status {
      
      ## the text has been thoroughly checked and proofread.
      "high"
      | 
        ## the text has been checked at least once.
        "medium"
      | 
        ## the text has not been checked.
        "low"
      | 
        ## the correction status of the text is unknown.
        "unknown"
    }?,
    
    ## Bezeichnet die Methode, die angewandt wurde um Korrekturen im Text zu kennzeichnen.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## corrections have been made silently
      "silent"
      | 
        ## corrections have been represented using markup
        "markup"
    }?,
    empty
  }
tei_normalization =
  
  ## (normalization) gibt an, in welchem Ausma√ü das Original bei der Umwandlung in elektronische Form normalisiert und vereinheitlicht wurde. [ ]
  element normalization {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## bezeichnet die Methode, die angewandt wurde um Normalisierungen im Text kenntlich zu machen.
    [ a:defaultValue = "silent" ]
    attribute method {
      
      ## normalization made silently
      "silent"
      | 
        ## normalization represented using markup
        "markup"
    }?,
    empty
  }
tei_quotation =
  
  ## (quotation) beschreibt die editorische Praxis bez√ºglich der Anf√ºhrungszeichen im Originaltext. [ ]
  element quotation {
    (tei_model.pLike*)
    >> sch:pattern [
         id = "propy-quotation-quotationContents-constraint-report-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:quotation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "not(@marks) and not (tei:p)"
             "\x{a}" ~
             "On "
             sch:name [ ]
             ", either the @marks attribute should be used, or a paragraph of description provided"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (quotation marks) gibt an, ob Anf√ºhrungszeichen als Bestandteil des Textes beibehalten wurden.
    attribute marks {
      
      ## no quotation marks have been retained
      "none"
      | 
        ## some quotation marks have been retained
        "some"
      | 
        ## all quotation marks have been retained
        "all"
    }?,
    empty
  }
tei_hyphenation =
  
  ## (hyphenation) fasst zusammen, wie die Silbentrennung des Quelltextes in der kodierten Fassung behandelt wurde. [ ]
  element hyphenation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## (end-of-line) gibt an, ob die Silbentrennung am Zeilenende im Text beibehalten wurde.
    [ a:defaultValue = "some" ]
    attribute eol {
      
      ## all end-of-line hyphenation has been retained, even though the lineation of the original may not have been.
      "all"
      | 
        ## end-of-line hyphenation has been retained in some cases.
        "some"
      | 
        ## all soft end-of-line hyphenation has been removed: any remaining end-of-line hyphenation should be retained.
        "hard"
      | 
        ## all end-of-line hyphenation has been removed: any remaining hyphenation occurred within the line.
        "none"
    }?,
    empty
  }
tei_segmentation =
  
  ## (segmentation) gibt an, nach welchen Prinzipien ein Text segmentiert wurde, zum Beispiel in S√§tze, Tonsequenzen, graphemische Einheiten, usw. [ ]
  element segmentation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_stdVals =
  
  ## (Standardwerte) beschreibt das Format, das f√ºr Standard-Datumsangaben oder Zahlenwerte genutzt wird. [ ]
  element stdVals {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_interpretation =
  
  ## (interpretation) beschreibt den Umfang von Analyse oder Interpretation, die zus√§tzlich zur Transkription dem Text hinzugef√ºgt wurde. []
  element interpretation {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_punctuation =
  
  ## specifies editorial practice adopted with respect to punctuation marks in the original. [ ]
  element punctuation {
    tei_model.pLike*,
    tei_att.declarable.attributes,
    tei_att.global.attributes,
    
    ## indicates whether or not punctation marks have been retained as content within the text.
    attribute marks {
      
      ## no punctuation marks have been retained
      "none"
      | 
        ## some punctuation marks have been retained
        "some"
      | 
        ## all punctuation marks have been retained
        "all"
    }?,
    
    ## indicates the positioning of punctuation marks that are associated with marked up text as being encoded within the element surrounding the text or immediately before or after it.
    attribute placement {
      
      ## punctuation marks found at the start or end of a marked up text component are included within its surrounding element;
      "internal"
      | 
        ## punctuation marks found at the start or end of a marked up text component appear immediately before or after the surrounding element
        "external"
    }?,
    empty
  }
tei_tagsDecl =
  
  ## (Beschreibung des Tag-Gebrauchs) liefert detaillierte Angaben zum Gebrauch von Tags, die in einem Dokument verwendet werden. [ ]
  element tagsDecl {
    (tei_rendition*, tei_namespace*),
    tei_att.global.attributes,
    [
      a:documentation [
        "indicates whether the element types listed exhaustively include all those found within "
        ns1:code [ "<text>" ]
        ", or represent only a subset."
      ]
    ]
    attribute partial { xsd:boolean }?,
    empty
  }
tei_tagUsage =
  
  ## (Verwendung eines Elements) dokumentiert den Gebrauch eines spezifischen Elements innerhalb eines bestimmten Dokuments. []
  element tagUsage {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.datcat.attributes,
    [
      a:documentation [
        "(generische Kennung) gibt den Namen (generische Kennung) des durch das Tag angegebenen Elements innerhalb jenes Namensraums an, der im √ºbergeordneten "
        ns1:code [ "<namespace>" ]
        "-Element angegeben wird."
      ]
    ]
    attribute gi { xsd:Name },
    
    ## gibt an, wie oft das Element im Text vorkommt
    attribute occurs { xsd:nonNegativeInteger }?,
    [
      a:documentation [
        "(mit eindeutiger Kennung) gibt an, wie oft dieses Element mit einem bestimmten Wert f√ºr das globale Attribut "
        ns1:code [ "@xml:id" ]
        " im Text vorkommt."
      ]
    ]
    attribute withId { xsd:nonNegativeInteger }?,
    empty
  }
tei_namespace =
  
  ## (namespace) liefert die formale Bezeichnung des Namensraums, zu dem die Elemente als Kind-Elemente geh√∂ren. []
  element namespace {
    tei_tagUsage+,
    tei_att.global.attributes,
    
    ## gibt die vollst√§ndige formale Bezeichnung des betreffenden Namensraums an.
    attribute name {
      xsd:anyURI { pattern = "\S*" }
    },
    empty
  }
tei_rendition =
  
  ## (rendition) liefert Informationen √ºber die Darstellung oder das Aussehen eines oder mehrerer Elemente im Quelltext. []
  element rendition {
    tei_macro.limitedContent,
    tei_att.global.attributes,
    tei_att.styleDef.attributes,
    
    ## where CSS is used, provides a way of defining pseudo-elements, that is, styling rules applicable to specific sub-portions of an element.
    ## Sample values include: 1] first-line; 2] first-letter; 3] before; 4] after
    attribute scope {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    [
      a:documentation [
        "contains a selector or series of selectors specifying the elements to which the contained style description applies, expressed in the language specified in the "
        ns1:code [ "@scheme" ]
        " attribute."
      ]
    ]
    attribute selector { xsd:string }?,
    empty
  }
tei_styleDefDecl =
  
  ## (style definition language declaration) specifies the name of the formal language in which style or renditional information is supplied elsewhere in the document. The specific version of the scheme may also be supplied. []
  element styleDefDecl {
    tei_model.pLike*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.styleDef.attributes,
    empty
  }
tei_refsDecl =
  
  ## (Angabe der Referenzstruktur) beschreibt, wie Standardreferenzen f√ºr diesen Text aufgebaut sind. [  ]
  element refsDecl {
    (tei_model.pLike+
     | tei_citeStructure+
     | tei_cRefPattern+
     | tei_refState+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_citeStructure =
  
  ## (citation structure) declares a structure and method for citing the current document. [ ]
  element citeStructure {
    (tei_citeData*, tei_citeStructure*, tei_model.descLike*),
    tei_att.global.attributes,
    tei_att.citeStructurePart.attributes,
    
    ## (delimiter) supplies a delimiting string preceding the structural component.
    attribute delim {
      xsd:string { pattern = ".+" }
    }?,
    [
      a:documentation [
        "(match) supplies an XPath selection pattern using the syntax defined in  which identifies a set of nodes which are citable structural components. The expression may be absolute (beginning with `/`) or relative. "
        ns1:code [ "@match" ]
        " on a "
        ns1:code [ "<citeStructure>" ]
        " without a "
        ns1:code [ "<citeStructure>" ]
        " parent must be an absolute XPath. If it is relative, its context is set by the "
        ns1:code [ "@match" ]
        " of the parent "
        ns1:code [ "<citeStructure>" ]
        "."
      ]
    ]
    attribute match { text }
    >> sch:pattern [
         id =
           "propy-citeStructure-match-citestructure-outer-match-constraint-rule-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:citeStructure[not(parent::tei:citeStructure)]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "starts-with(@match,'/')"
             "An XPath in @match on the outer "
             sch:name [ ]
             " must start with '/'."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-citeStructure-match-citestructure-inner-match-constraint-rule-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:citeStructure[parent::tei:citeStructure]"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "not(starts-with(@match,'/'))"
             "An XPath in @match must not start with '/' except on the outer "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    [
      a:documentation [
        "(unit) describes the structural unit indicated by the "
        ns1:code [ "<citeStructure>" ]
        ".\x{a}" ~
        "Sample values include: 1] book; 2] chapter; 3] entry; 4] poem; 5] letter; 6] line; 7] section; 8] verse; 9] volume"
      ]
    ]
    attribute unit {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_citeData =
  
  ## (citation data) specifies how information may be extracted from citation structures. [ ]
  element citeData {
    empty,
    tei_att.global.attributes,
    tei_att.citeStructurePart.attributes,
    
    ## (property) A URI indicating a property definition.
    attribute property {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_cRefPattern =
  
  ## (kanonisches Referenzmodell) legt einen Ausdruck und ein Ersetzungsmuster f√ºr die Umwandlung einer kanonischen Referenz in eine URI fest. [  ]
  element cRefPattern {
    tei_model.pLike*,
    tei_att.global.attributes,
    tei_att.patternReplacement.attributes,
    empty
  }
tei_prefixDef =
  
  ## (prefix definition) defines a prefixing scheme used in teidata.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. []
  element prefixDef {
    tei_model.pLike*,
    tei_att.global.attributes,
    tei_att.patternReplacement.attributes,
    
    ## supplies a name which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident {
      xsd:token { pattern = "[a-z][a-z0-9\+\.\-]*" }
    },
    empty
  }
tei_listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in teidata.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. []
  element listPrefixDef {
    (tei_desc*, (tei_prefixDef | tei_listPrefixDef)+),
    tei_att.global.attributes,
    empty
  }
tei_refState =
  
  ## (reference state) specifies one component of a canonical reference defined by the milestone method. [ ]
  element refState {
    empty,
    tei_att.global.attributes,
    tei_att.milestoneUnit.attributes,
    tei_att.edition.attributes,
    
    ## specifies the fixed length of the reference component.
    attribute length { xsd:nonNegativeInteger }?,
    
    ## (delimiter) supplies a delimiting string following the reference component.
    attribute delim { xsd:string }?,
    empty
  }
tei_classDecl =
  
  ## (Angabe zur Klassifikation) enth√§lt eine oder mehrere Taxonomien, die im Text verwendete Klassifikationscodes definieren. [ ]
  element classDecl { tei_taxonomy+, tei_att.global.attributes, empty }
tei_taxonomy =
  
  ## (Taxonomie) definiert eine Typologie entweder implizit durch einen bibliografischen Verweis oder explizit durch eine strukturierte Taxonomie. []
  element taxonomy {
    (((tei_category | tei_taxonomy)+
      | ((tei_model.descLike | tei_gloss)+,
         (tei_category | tei_taxonomy)*))
     | (tei_model.biblLike, (tei_category | tei_taxonomy)*)),
    tei_att.global.attributes,
    empty
  }
tei_category =
  
  ## (Kategorie) enth√§lt eine eigenst√§ndige, gegebenfalls in eine √ºbergeordnete Kategorie eingebettete, deskriptive Kategorie in einer benutzerdefinierten Taxonomie. []
  element category {
    ((tei_catDesc+ | (tei_model.descLike | tei_gloss)*),
     tei_category*),
    tei_att.global.attributes,
    empty
  }
tei_catDesc =
  [
    a:documentation [
      "(Beschreibung der Kategorie) beschreibt eine Kategorie innerhalb einer Taxonomie oder Texttypologie, entweder als einfacher Flie√ütext oder √ºber kontextbezogene Parameter, mittels des strukturierten "
      ns1:code [ "<textDesc>" ]
      "-Elements. []"
    ]
  ]
  element catDesc {
    (text | tei_model.limitedPhrase | tei_model.catDescPart)*,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_geoDecl =
  [
    a:documentation [
      "(geographic coordinates declaration) documents the notation and the datum used for geographic coordinates expressed as content of the "
      ns1:code [ "<geo>" ]
      " element elsewhere within the document. []"
    ]
  ]
  element geoDecl {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    
    ## supplies a commonly used code name for the datum employed.
    ## Suggested values include: 1] WGS84 (World Geodetic System); 2] MGRS (Military Grid Reference System); 3] OSGB36 (ordnance survey great britain); 4] ED50 (European Datum coordinate system)
    [ a:defaultValue = "WGS84" ]
    attribute datum {
      
      ## (World Geodetic System) a pair of numbers to be interpreted as latitude followed by longitude according to the World Geodetic System.
      "WGS84"
      | 
        ## (Military Grid Reference System) the values supplied are geospatial entity object codes, based on
        "MGRS"
      | 
        ## (ordnance survey great britain) the value supplied is to be interpreted as a British National Grid Reference.
        "OSGB36"
      | 
        ## (European Datum coordinate system) the value supplied is to be interpreted as latitude followed by longitude according to the European Datum coordinate system.
        "ED50"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_unitDecl =
  
  ## (unit declarations) provides information about units of measurement that are not members of the International System of Units. []
  element unitDecl {
    tei_unitDef+,
    tei_att.canonical.attributes,
    tei_att.datable.attributes,
    tei_att.global.attributes,
    empty
  }
tei_unitDef =
  
  ## (unit definition) contains descriptive information related to a specific unit of measurement. []
  element unitDef {
    (tei_model.labelLike
     | tei_model.placeNamePart?
     | tei_conversion?
     | tei_unit?)+,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.canonical.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_conversion =
  
  ## defines how to calculate one unit of measure in terms of another. []
  element conversion {
    empty,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.formula.attributes,
    tei_att.locatable.attributes,
    [
      a:documentation [
        "indicates a source unit of measure that is to be converted into another unit indicated in "
        ns1:code [ "@toUnit" ]
        "."
      ]
    ]
    attribute fromUnit {
      xsd:anyURI { pattern = "\S+" }
    },
    [
      a:documentation [
        "the target unit of measurement for a conversion from a source unit referenced in "
        ns1:code [ "@fromUnit" ]
        "."
      ]
    ]
    attribute toUnit {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_appInfo =
  
  ## (application information) records information about an application which has edited the TEI file. []
  element appInfo {
    tei_model.applicationLike+, tei_att.global.attributes, empty
  }
tei_application =
  
  ## provides information about an application which has acted upon the document. []
  element application {
    (tei_model.labelLike+, (tei_model.ptrLike* | tei_model.pLike*)),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    
    ## supplies an identifier for the application, independent of its version number or display name.
    attribute ident { xsd:Name },
    
    ## supplies a version number for the application, independent of its identifier or display name.
    attribute version {
      xsd:token {
        pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}"
      }
    },
    empty
  }
tei_profileDesc =
  
  ## (Beschreibung des Textprofils) enth√§lt eine detaillierte Beschreibung der nicht-bibliografischen Merkmale des Textes, besonders der verwendeten Sprachen und Subsprachen, der Entstehungsbedingungen eines Textes sowie der Beteiligten und deren Umfeld. [ ]
  element profileDesc {
    tei_model.profileDescPart*, tei_att.global.attributes, empty
  }
tei_handNote =
  
  ## (note on hand) describes a particular style or hand distinguished within a manuscript. []
  element handNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    empty
  }
tei_abstract =
  
  ## enth√§lt eine (formale) Zusammenfassung, die einem bestehenden Quelldokument vorangestellt wird. []
  element abstract {
    (tei_model.pLike | tei_model.listLike | tei_listBibl)+,
    tei_att.global.attributes,
    empty
  }
tei_creation =
  
  ## (Entstehung) beinhaltet Informationen zur Entstehung eines Textes. [ ]
  element creation {
    (text | tei_model.limitedPhrase | tei_listChange)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_langUsage =
  
  ## (Sprachgebrauch) beschreibt Sprachen, Subsprachen, Register, Dialekte usw., die innerhalb eines Textes vorkommen. [  ]
  element langUsage {
    (tei_model.pLike+ | tei_language+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_language =
  
  ## (Sprache) beschreibt eine einzelne Sprache oder eine Subsprache, die innerhalb eines Textes verwendet wird. []
  element language {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    [
      a:documentation [
        "(Identifikator) gibt einen Sprachcode, aufgebaut nach "
        ns1:a [ href = "https://tools.ietf.org/html/bcp47" "BCP 47" ]
        " an, der zur Identifikation der im Element dokumentierten Sprache benutzt wird und auf den das globale "
        ns1:code [ "@xml:lang" ]
        "-Attribut verweist."
      ]
    ]
    attribute ident {
      xsd:language
      | (
         ##
         "")
    },
    
    ## gibt den ungef√§hren prozentualen Anteil des Textes an, der in dieser Sprache verfasst wurde.
    attribute usage { xsd:nonNegativeInteger }?,
    empty
  }
tei_textClass =
  
  ## (Textklassifikation) gruppiert Informationen √ºber Art oder Thematik eines Textes unter Bezug auf ein Standard-Klassifikationsschema, einen Thesaurus o. √§.  []
  element textClass {
    (tei_classCode | tei_catRef | tei_keywords)*,
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_keywords =
  
  ## (Schlagw√∂rter) enth√§lt eine Zusammenstellung von Schlagw√∂rtern oder Phrasen zur Art oder Thematik des Textes. []
  element keywords {
    (tei_term+ | tei_list),
    tei_att.global.attributes,
    [
      a:documentation [
        "gibt das kontrollierte Vokabular an, in dem die benutzten Schlagw√∂rter definiert sind. Dabei kann das "
        ns1:code [ "@scheme" ]
        "-Attribut auf ein "
        ns1:code [ "<taxonomy>" ]
        "-Element oder eine andere Ressource verweisen."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_classCode =
  
  ## (Klassifikationscode) enth√§lt den f√ºr den Text verwendeten Klassifikationscode auf Basis eines normierten Klassifikationssystems. []
  element classCode {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    [
      a:documentation [
        "benennt das verwendete Klassifikationssystem, definiert z. B. durch Verweis auf ein "
        ns1:code [ "<taxonomy>" ]
        "-Element oder eine andere Ressource"
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    },
    empty
  }
tei_catRef =
  
  ## (Verweis auf eine Kategorie) gibt eine oder mehrere Kategorien an, die innerhalb einer Taxonomie oder Texttypologie definiert sind. []
  element catRef {
    empty,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    [
      a:documentation [
        "gibt das Klassifikationsschema an, in dem die entsprechenden Kategorien definiert sind, z. B. √ºber ein "
        ns1:code [ "<taxonomy>" ]
        "-Element oder eine andere Ressource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [ ]
  element calendarDesc {
    tei_calendar+, tei_att.global.attributes, empty
  }
tei_calendar =
  
  ## (calendar) describes a calendar or dating system used in a dating formula in the text. []
  element calendar {
    tei_model.pLike+,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    empty
  }
tei_correspDesc =
  
  ## (correspondence description) contains a description of the actions related to one act of correspondence. []
  element correspDesc {
    (tei_model.correspDescPart+ | tei_model.pLike+),
    tei_att.declarable.attributes,
    tei_att.canonical.attributes,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_correspAction =
  
  ## (correspondence action) contains a structured description of the place, the name of a person/organization and the date related to the sending/receiving of a message or any other action related to the correspondence. []
  element correspAction {
    (tei_model.correspActionPart+ | tei_model.pLike+),
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.sortable.attributes,
    
    ## describes the nature of the action.
    ## Suggested values include: 1] sent; 2] received; 3] transmitted; 4] redirected; 5] forwarded
    attribute type {
      
      ## information concerning the sending or dispatch of a message.
      "sent"
      | 
        ## information concerning the receipt of a message.
        "received"
      | 
        ## information concerning the transmission of a message, i.e. between the dispatch and the next receipt, redirect or forwarding.
        "transmitted"
      | 
        ## information concerning the redirection of an unread message.
        "redirected"
      | 
        ## information concerning the forwarding of a message.
        "forwarded"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_correspContext =
  
  ## (Korrespondenzstelle) provides references to preceding or following correspondence related to this piece of correspondence. []
  element correspContext {
    tei_model.correspContextPart+, tei_att.global.attributes, empty
  }
tei_xenoData =
  
  ## (non-TEI metadata) provides a container element into which metadata in non-TEI formats may be placed. []
  element xenoData {
    (text | anyElement-xenoData),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_revisionDesc =
  
  ## (Beschreibung der Dateihistorie) dokumentiert die √Ñnderungen, die an der Datei vorgenommen wurden. [ ]
  element revisionDesc {
    (tei_list | tei_listChange | tei_change+),
    tei_att.global.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_change =
  
  ## (√Ñnderung) verzeichnet √Ñnderungen oder Korrekturen w√§hrend der Erstellung eines Basisdokuments oder w√§hrend der √úberarbeitung einer elektronischen Datei. [  ]
  element change {
    tei_macro.specialPara,
    tei_att.ascribed.attributes,
    tei_att.datable.attributes,
    tei_att.docStatus.attributes,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## (Ziel) verweist auf ein oder mehrere Elemente, die zu dieser √Ñnderung geh√∂ren. 
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_scriptNote =
  
  ## describes a particular script distinguished within the description of a manuscript or similar resource. []
  element scriptNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    empty
  }
tei_listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text. [ ]
  element listChange {
    (tei_desc*, (tei_listChange | tei_change)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    [
      a:defaultValue = "true"
      a:documentation [
        "indicates whether the ordering of its child "
        ns1:code [ "<change>" ]
        " elements is to be considered significant or not"
      ]
    ]
    attribute ordered { xsd:boolean }?,
    empty
  }
tei_textDesc =
  
  ## (text description) provides a description of a text in terms of its situational parameters. []
  element textDesc {
    (tei_channel,
     tei_constitution,
     tei_derivation,
     tei_domain,
     tei_factuality,
     tei_interaction,
     tei_preparedness,
     tei_purpose+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_particDesc =
  
  ## (participation description) describes the identifiable speakers, voices, or other participants in any kind of text or other persons named or otherwise referred to in a text, edition, or metadata. []
  element particDesc {
    (tei_model.pLike+
     | (tei_model.personLike | tei_listPerson | tei_listOrg)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_settingDesc =
  
  ## (setting description) describes the setting or settings within which a language interaction takes place, or other places otherwise referred to in a text, edition, or metadata. [ ]
  element settingDesc {
    (tei_model.pLike+
     | (tei_setting | tei_model.placeLike | tei_listPlace)+),
    tei_att.global.attributes,
    tei_att.declarable.attributes,
    empty
  }
tei_channel =
  
  ## (primary channel) describes the medium or channel by which a text is delivered or experienced. For a written text, this might be print, manuscript, email, etc.; for a spoken one, radio, telephone, face-to-face, etc. []
  element channel {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    
    ## specifies the mode of this channel with respect to speech and writing.
    [ a:defaultValue = "x" ]
    attribute mode {
      
      ## (spoken) 
      "s"
      | 
        ## (written) 
        "w"
      | 
        ## (spoken to be written) e.g. dictation
        "sw"
      | 
        ## (written to be spoken) e.g. a script
        "ws"
      | 
        ## (mixed) 
        "m"
      | 
        ## (unknown or inapplicable) 
        "x"
    }?,
    empty
  }
tei_constitution =
  
  ## (constitution) describes the internal composition of a text or text sample, for example as fragmentary, complete, etc. []
  element constitution {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies how the text was constituted.
    [ a:defaultValue = "single" ]
    attribute type {
      
      ## a single complete text
      "single"
      | 
        ## a text made by combining several smaller items, each individually complete
        "composite"
      | 
        ## (fragments) a text made by combining several smaller, not necessarily complete, items
        "frags"
      | 
        ## composition unknown or unspecified
        "unknown"
    }?,
    empty
  }
tei_derivation =
  
  ## (derivation) describes the nature and extent of originality of this text. []
  element derivation {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the derivation of the text.
    ## Sample values include: 1] original; 2] revision; 3] translation; 4] abridgment; 5] plagiarism; 6] traditional
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_domain =
  
  ## (domain of use) describes the most important social context in which the text was realized or for which it is intended, for example private vs. public, education, religion, etc. []
  element domain {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the domain of use.
    ## Sample values include: 1] art; 2] domestic; 3] religious; 4] business; 5] education; 6] govt (government); 7] public
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_factuality =
  
  ## (factuality) describes the extent to which the text may be regarded as imaginative or non-imaginative, that is, as describing a fictional or a non-fictional world. []
  element factuality {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## categorizes the factuality of the text.
    attribute type {
      
      ## the text is to be regarded as entirely imaginative
      "fiction"
      | 
        ## the text is to be regarded as entirely informative or factual
        "fact"
      | 
        ## the text contains a mixture of fact and fiction
        "mixed"
      | 
        ## the fiction/fact distinction is not regarded as helpful or appropriate to this text
        "inapplicable"
    }?,
    empty
  }
tei_interaction =
  
  ## (interaction) describes the extent, cardinality and nature of any interaction among those producing and experiencing the text, for example in the form of response or interjection, commentary, etc. []
  element interaction {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies the degree of interaction between active and passive participants in the text.
    attribute type {
      
      ## no interaction of any kind, e.g. a monologue
      "none"
      | 
        ## some degree of interaction, e.g. a monologue with set responses
        "partial"
      | 
        ## complete interaction, e.g. a face to face conversation
        "complete"
      | 
        ## this parameter is inappropriate or inapplicable in this case
        "inapplicable"
    }?,
    
    ## specifies the number of active participants (or addressors) producing parts of the text.
    ## Suggested values include: 1] singular; 2] plural; 3] corporate; 4] unknown
    attribute active {
      
      ## a single addressor
      "singular"
      | 
        ## many addressors
        "plural"
      | 
        ## a corporate addressor
        "corporate"
      | 
        ## number of addressors unknown or unspecifiable
        "unknown"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies the number of passive participants (or addressees) to whom a text is directed or in whose presence it is created or performed.
    ## Suggested values include: 1] self; 2] single; 3] many; 4] group; 5] world
    attribute passive {
      
      ## text is addressed to the originator e.g. a diary
      "self"
      | 
        ## text is addressed to one other person e.g. a personal letter
        "single"
      | 
        ## text is addressed to a countable number of others e.g. a conversation in which all participants are identified
        "many"
      | 
        ## text is addressed to an undefined but fixed number of participants e.g. a lecture
        "group"
      | 
        ## text is addressed to an undefined and indeterminately large number e.g. a published book
        "world"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_preparedness =
  
  ## (preparedness) describes the extent to which a text may be regarded as prepared or spontaneous. []
  element preparedness {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## a keyword characterizing the type of preparedness.
    ## Sample values include: 1] none; 2] scripted; 3] formulaic; 4] revised
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_purpose =
  
  ## characterizes a single purpose or communicative function of the text. []
  element purpose {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## specifies a particular kind of purpose.
    ## Suggested values include: 1] persuade; 2] express; 3] inform; 4] entertain
    attribute type {
      
      ## didactic, advertising, propaganda, etc.
      "persuade"
      | 
        ## self expression, confessional, etc.
        "express"
      | 
        ## convey information, educate, etc.
        "inform"
      | 
        ## amuse, entertain, etc.
        "entertain"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies the extent to which this purpose predominates.
    attribute degree {
      
      ##
      "high"
      | 
        ##
        "medium"
      | 
        ##
        "low"
      | 
        ##
        "unknown"
    }?,
    empty
  }
tei_setting =
  
  ## describes one particular setting in which a language interaction takes place. []
  element setting {
    (tei_model.pLike+
     | (tei_model.nameLike.agent
        | tei_model.dateLike
        | tei_model.settingPart)*),
    tei_att.global.attributes,
    tei_att.ascribed.attributes,
    empty
  }
tei_locale =
  
  ## contains a brief informal description of the kind of place concerned, for example: a room, a restaurant, a park bench, etc. []
  element locale {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_activity =
  
  ## (activity) contains a brief informal description of what a participant in a language interaction is doing other than speaking, if anything. []
  element activity {
    tei_macro.phraseSeq.limited, tei_att.global.attributes, empty
  }
tei_att.datable.custom.attributes =
  tei_att.datable.custom.attribute.when-custom,
  tei_att.datable.custom.attribute.notBefore-custom,
  tei_att.datable.custom.attribute.notAfter-custom,
  tei_att.datable.custom.attribute.from-custom,
  tei_att.datable.custom.attribute.to-custom,
  tei_att.datable.custom.attribute.datingPoint,
  tei_att.datable.custom.attribute.datingMethod
tei_att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
    }
  }?
tei_att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.datable.custom.attribute.datingMethod =
  [
    a:documentation [
      "supplies a pointer to a "
      ns1:code [ "<calendar>" ]
      " element or other means of interpreting the values of the custom dating attributes."
    ]
  ]
  attribute datingMethod {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_model.persNamePart =
  tei_surname
  | tei_forename
  | tei_genName
  | tei_nameLink
  | tei_addName
  | tei_roleName
  | tei_persPronouns
tei_model.persNamePart_alternation =
  tei_surname
  | tei_forename
  | tei_genName
  | tei_nameLink
  | tei_addName
  | tei_roleName
  | tei_persPronouns
tei_model.persNamePart_sequence =
  tei_surname,
  tei_forename,
  tei_genName,
  tei_nameLink,
  tei_addName,
  tei_roleName,
  tei_persPronouns
tei_model.persNamePart_sequenceOptional =
  tei_surname?,
  tei_forename?,
  tei_genName?,
  tei_nameLink?,
  tei_addName?,
  tei_roleName?,
  tei_persPronouns?
tei_model.persNamePart_sequenceOptionalRepeatable =
  tei_surname*,
  tei_forename*,
  tei_genName*,
  tei_nameLink*,
  tei_addName*,
  tei_roleName*,
  tei_persPronouns*
tei_model.persNamePart_sequenceRepeatable =
  tei_surname+,
  tei_forename+,
  tei_genName+,
  tei_nameLink+,
  tei_addName+,
  tei_roleName+,
  tei_persPronouns+
tei_att.datable.iso.attributes =
  tei_att.datable.iso.attribute.when-iso,
  tei_att.datable.iso.attribute.notBefore-iso,
  tei_att.datable.iso.attribute.notAfter-iso,
  tei_att.datable.iso.attribute.from-iso,
  tei_att.datable.iso.attribute.to-iso
tei_att.datable.iso.attribute.when-iso =
  
  ## supplies the value of a date or time in a standard form.
  attribute when-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.notBefore-iso =
  
  ## specifies the earliest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notBefore-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.notAfter-iso =
  
  ## specifies the latest possible date for the event in standard form, e.g. yyyy-mm-dd.
  attribute notAfter-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.from-iso =
  
  ## indicates the starting point of the period in standard form.
  attribute from-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_att.datable.iso.attribute.to-iso =
  
  ## indicates the ending point of the period in standard form.
  attribute to-iso {
    xsd:date
    | xsd:gYear
    | xsd:gMonth
    | xsd:gDay
    | xsd:gYearMonth
    | xsd:gMonthDay
    | xsd:time
    | xsd:dateTime
    | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
  }?
tei_orgName =
  
  ## (organization name) contains an organizational name. []
  element orgName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_persName =
  
  ## (personal name) contains a proper noun or proper-noun phrase referring to a person, possibly including one or more of the person's forenames, surnames, honorifics, added names, etc. []
  element persName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_surname =
  
  ## (surname) contains a family (inherited) name, as opposed to a given, baptismal, or nick name. []
  element surname {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_forename =
  
  ## (forename) contains a forename, given or baptismal name. []
  element forename {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_genName =
  
  ## (generational name component) contains a name component used to distinguish otherwise similar names on the basis of the relative ages or generations of the persons named. []
  element genName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_nameLink =
  
  ## (name link) contains a connecting phrase or link used within a name but not regarded as part of it, such as van der or of. []
  element nameLink {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_addName =
  
  ## (additional name) contains an additional name component, such as a nickname, epithet, or alias, or any other descriptive phrase used within a personal name. []
  element addName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_roleName =
  
  ## (role name) contains a name component which indicates that the referent has a particular role or position in society, such as an official title or rank. []
  element roleName {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_placeName =
  
  ## (place name) contains an absolute or relative place name. []
  element placeName {
    tei_macro.phraseSeq,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_bloc =
  
  ## (bloc) contains the name of a geo-political unit consisting of two or more nation states or countries. []
  element bloc {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_country =
  
  ## (country) contains the name of a geo-political unit, such as a nation, country, colony, or commonwealth, larger than or administratively superior to a region and smaller than a bloc. []
  element country {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_region =
  
  ## (region) contains the name of an administrative unit such as a state, province, or county, larger than a settlement, but smaller than a country. []
  element region {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_settlement =
  
  ## (settlement) contains the name of a settlement such as a city, town, or village identified as a single geo-political or administrative unit. []
  element settlement {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_district =
  
  ## (district) contains the name of any kind of subdivision of a settlement, such as a parish, ward, or other administrative or geographic unit. []
  element district {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_offset =
  
  ## (offset) marks that part of a relative temporal or spatial expression which indicates the direction of the offset between the two place names, dates, or times involved in the expression. []
  element offset {
    tei_macro.phraseSeq,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_geogName =
  
  ## (geographical name) identifies a name associated with some geographical feature such as Windrush Valley or Mount Sinai. []
  element geogName {
    tei_macro.phraseSeq,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_geogFeat =
  
  ## (geographical feature name) contains a common noun identifying some geographical feature contained within a geographic name, such as valley, mount, etc. []
  element geogFeat {
    tei_macro.phraseSeq,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_affiliation =
  
  ## (affiliation) contains an informal description of a person's present or past affiliation with some organization, for example an employer or sponsor. []
  element affiliation {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] sponsor; 2] recommend; 3] discredit; 4] pledged
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_age =
  
  ## (age) specifies the age of a person. []
  element age {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.dimensions.attributes,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] western; 2] sui; 3] subjective; 4] objective; 5] inWorld (in world); 6] chronological; 7] biological; 8] psychological; 9] functional
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## supplies a numeric code representing the age or age group
    attribute value { xsd:nonNegativeInteger }?,
    empty
  }
tei_birth =
  
  ## (birth) contains information about a person's birth, such as its date and place. []
  element birth {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.dimensions.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] caesarean (caesarean section); 2] vaginal (vaginal delivery); 3] exNihilo (ex nihilo); 4] incorporated; 5] founded; 6] established
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_climate =
  
  ## (climate) contains information about the physical climate of a place. []
  element climate {
    (tei_model.headLike*,
     (tei_model.pLike+ | tei_model.labelLike+),
     (tei_model.noteLike | tei_model.biblLike)*,
     tei_climate*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_death =
  
  ## (death) contains information about a person's death, such as its date and place. []
  element death {
    tei_macro.phraseSeq,
    tei_att.datable.attributes,
    tei_att.dimensions.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] proclaimed; 2] assumed; 3] verified; 4] clinical; 5] brain; 6] natural; 7] unnatural; 8] fragmentation; 9] dissolution
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_education =
  
  ## (education) contains a description of the educational experience of a person. []
  element education {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] primary; 2] secondary; 3] undergraduate; 4] graduate; 5] residency; 6] apprenticeship
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_event =
  
  ## (event) contains data relating to any kind of significant event associated with a person, place, or organization. []
  element event {
    (tei_idno*,
     tei_model.headLike*,
     (tei_model.pLike+ | tei_model.labelLike+),
     (tei_model.noteLike
      | tei_model.biblLike
      | tei_linkGrp
      | tei_link
      | tei_idno
      | tei_ptr)*,
     tei_event*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    tei_att.naming.attributes,
    tei_att.sortable.attributes,
    tei_att.locatable.attributes,
    empty
  }
tei_faith =
  
  ## (faith) specifies the faith, religion, or belief set of a person. []
  element faith {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.canonical.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] practicing; 2] clandestine; 3] patrilineal; 4] matrilineal; 5] convert
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_floruit =
  
  ## (floruit) contains information about a person's period of activity. []
  element floruit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.dimensions.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_gender =
  
  ## (gender) specifies the gender identity of a person, persona, or character. []
  element gender {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attributes,
    
    ## supplies a coded value for gender identity
    attribute value {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_geo =
  
  ## (geographical coordinates) contains any expression of a set of geographic coordinates, representing a point, line, or area on the surface of the earth in some notation. []
  element geo {
    text, tei_att.global.attributes, tei_att.declaring.attributes, empty
  }
tei_langKnowledge =
  [
    a:documentation [
      "(language knowledge) summarizes the state of a person's linguistic knowledge, either as prose or by a list of "
      ns1:code [ "<langKnown>" ]
      " elements. []"
    ]
  ]
  element langKnowledge {
    (tei_model.pLike | tei_langKnown+),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] listening; 2] speaking; 3] reading; 4] writing
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## supplies one or more valid language tags for the languages specified
    attribute tags {
      list {
        (xsd:language
         | (
            ##
            ""))+
      }
    }?,
    empty
  }
tei_langKnown =
  
  ## (language known) summarizes the state of a person's linguistic competence, i.e., knowledge of a single language. []
  element langKnown {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    
    ## supplies a valid language tag for the language concerned.
    attribute tag {
      xsd:language
      | (
         ##
         "")
    },
    
    ## a code indicating the person's level of knowledge for this language
    attribute level {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_listOrg =
  
  ## (list of organizations) contains a list of elements, each of which provides information about an identifiable organization. []
  element listOrg {
    (tei_model.headLike*,
     tei_desc*,
     (tei_relation | tei_listRelation)*,
     ((tei_org | tei_listOrg)+, (tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_listEvent =
  
  ## (list of events) contains a list of descriptions, each of which provides information about an identifiable event. []
  element listEvent {
    (tei_model.headLike*,
     tei_desc*,
     (tei_relation | tei_listRelation)*,
     (tei_model.eventLike+, (tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_listPerson =
  
  ## (list of persons) contains a list of descriptions, each of which provides information about an identifiable person or a group of people, for example the participants in a language interaction, or the people referred to in a historical source. [   ]
  element listPerson {
    (tei_model.headLike*,
     tei_desc*,
     (tei_relation | tei_listRelation)*,
     ((tei_model.personLike | tei_listPerson)+,
      (tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_listPlace =
  
  ## (list of places) contains a list of places, optionally followed by a list of relationships (other than containment) defined amongst them. [ ]
  element listPlace {
    (tei_model.headLike*,
     tei_desc*,
     (tei_relation | tei_listRelation)*,
     ((tei_model.placeLike | tei_listPlace)+,
      (tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_listRelation =
  
  ## provides information about relationships identified amongst people, places, and organizations, either informally as prose or as formally expressed relation links. []
  element listRelation {
    (tei_model.headLike*,
     tei_desc*,
     (tei_model.pLike | (tei_relation | tei_listRelation)+)),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_location =
  
  ## (location) defines the location of a place as a set of geographical coordinates, in terms of other named geo-political entities, or as an address. []
  element location {
    (tei_model.labelLike
     | tei_model.placeNamePart
     | tei_model.offsetLike
     | tei_model.measureLike
     | tei_model.addressLike
     | tei_model.noteLike
     | tei_model.biblLike)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_nationality =
  
  ## (nationality) contains an informal description of a person's present or past nationality or citizenship. []
  element nationality {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] birth; 2] naturalised; 3] self-assigned
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_occupation =
  
  ## (occupation) contains an informal description of a person's trade, profession or occupation. []
  element occupation {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] primary; 2] other; 3] paid; 4] unpaid
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    [
      a:documentation [
        "indicates the classification system or taxonomy in use, for example by supplying the identifier of a "
        ns1:code [ "<taxonomy>" ]
        " element, or pointing to some other resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    [
      a:documentation [
        "identifies an occupation code defined within the classification system or taxonomy defined by the "
        ns1:code [ "@scheme" ]
        " attribute."
      ]
    ]
    attribute code {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_org =
  
  ## (organization) provides information about an identifiable organization such as a business, a tribe, or any other grouping of people. []
  element org {
    (tei_model.headLike*,
     (tei_model.pLike*
      | (tei_model.labelLike
         | tei_model.nameLike
         | tei_model.placeLike
         | tei_model.orgPart
         | tei_model.milestoneLike)*),
     (tei_model.noteLike
      | tei_model.biblLike
      | tei_linkGrp
      | tei_link
      | tei_ptr)*,
     tei_model.personLike*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.editLike.attributes,
    tei_att.sortable.attributes,
    
    ## specifies a primary role or classification for the organization.
    attribute role {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_person =
  
  ## (person) provides information about an identifiable individual, for example a participant in a language interaction, or a person referred to in a historical source. [ ]
  element person {
    (tei_model.pLike+
     | (tei_model.personPart | tei_model.global | tei_ptr)*),
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.sortable.attributes,
    
    ## specifies a primary role or classification for the person.
    attribute role {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the sex of the person.
    attribute sex {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the gender of the person.
    attribute gender {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies an age group for the person.
    attribute age {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_persona =
  
  ## provides information about one of the personalities identified for a given individual, where an individual has multiple personalities. []
  element persona {
    (tei_model.pLike+ | (tei_model.personPart | tei_model.global)*),
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.sortable.attributes,
    
    ## specifies a primary role or classification for the persona.
    attribute role {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the sex of the persona.
    attribute sex {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the gender of the persona.
    attribute gender {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies an age group for the persona.
    attribute age {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_personGrp =
  
  ## (personal group) describes a group of individuals treated as a single person for analytic purposes. []
  element personGrp {
    (tei_model.pLike+ | (tei_model.personPart | tei_model.global)*),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    
    ## specifies the role of this group of participants in the interaction.
    attribute role {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies the sex of the participant group.
    attribute sex {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the gender of the participant group.
    attribute gender {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    
    ## specifies the age group of the participants.
    attribute age {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## describes informally the size or approximate size of the group for example by means of a number and an indication of accuracy e.g. approx 200.
    attribute size {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_persPronouns =
  
  ## (personal pronouns) indicates the personal pronouns used, or assumed to be used, by the individual being described. []
  element persPronouns {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attributes,
    
    ## (evidence) indicates support for the listed personal pronouns.
    ## Suggested values include: 1] conjecture (conjecture); 2] selfIdentification (self identification); 3] trustedThirdParty (trusted third party)
    attribute evidence {
      
      ## (conjecture) The given value was selected based on assumptions by someone besides the person to whom this pronoun applies. As a result, the value may be erroneous.
      "conjecture"
      | 
        ## (self identification) The given value has been explicitly stated or confirmed by the person to whom this pronoun applies.
        "selfIdentification"
      | 
        ## (trusted third party) The given value has been supplied by another individual trusted by the encoder to know the preferences of the person to whom this pronoun applies.
        "trustedThirdParty"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (value) supplies a regularized value for personal pronouns.
    ## Sample values include: 1] e (e); 2] he (he); 3] she (she); 4] they (they)
    attribute value {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_place =
  
  ## (place) contains data about a geographic location []
  element place {
    (tei_model.headLike*,
     (tei_model.pLike*
      | (tei_model.labelLike
         | tei_model.placeStateLike
         | tei_model.eventLike
         | tei_name)*),
     (tei_model.noteLike
      | tei_model.biblLike
      | tei_idno
      | tei_ptr
      | tei_linkGrp
      | tei_link)*,
     (tei_model.placeLike | tei_listPlace)*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.editLike.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_population =
  
  ## (population) contains information about the population of a place. []
  element population {
    (tei_model.headLike*,
     ((tei_model.pLike+ | tei_model.labelLike+),
      (tei_model.noteLike | tei_model.biblLike)*)?,
     tei_population*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_relation =
  
  ## (relationship) describes any kind of relationship or linkage amongst a specified group of places, events, persons, objects or other items. []
  element relation {
    (tei_desc?)
    >> sch:pattern [
         id = "propy-relation-reforkeyorname-constraint-assert-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@ref or @key or @name"
             "One of the attributes  'name', 'ref' or 'key' must be supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "propy-relation-activemutual-constraint-report-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@active and @mutual"
             "Only one of the attributes @active and @mutual may be supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "propy-relation-activepassive-constraint-report-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:relation"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@passive and not(@active)"
             "the attribute 'passive' may be supplied only if the attribute 'active' is supplied"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.canonical.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    
    ## supplies a name for the kind of relationship of which this is an instance.
    attribute name {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    (
     ## identifies the active participants in a non-mutual relationship, or all the participants in a mutual one.
     attribute active {
       list {
         xsd:anyURI { pattern = "\S+" }+
       }
     }?
     | 
       ## supplies a list of participants amongst all of whom the relationship holds equally.
       attribute mutual {
         list {
           xsd:anyURI { pattern = "\S+" }+
         }
       }?),
    
    ## identifies the passive participants in a non-mutual relationship.
    attribute passive {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_residence =
  
  ## (residence) describes a person's present or past places of residence. []
  element residence {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] primary; 2] secondary; 3] temporary; 4] permanent
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_sex =
  
  ## (sex) specifies the sex of an organism. []
  element sex {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attributes,
    
    ## supplies a coded value for sex
    attribute value {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_socecStatus =
  
  ## (socio-economic status) contains an informal description of a person's perceived social or economic status. []
  element socecStatus {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attribute.subtype,
    
    ## characterizes the element in some sense, using any convenient classification scheme or typology.
    ## Sample values include: 1] atBirth; 2] atDeath; 3] dependent; 4] inherited; 5] independent
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    [
      a:documentation [
        "identifies the classification system or taxonomy in use, for example by pointing to a locally-defined "
        ns1:code [ "<taxonomy>" ]
        " element or by supplying a URI for an externally-defined system."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    [
      a:documentation [
        "identifies a status code defined within the classification system or taxonomy defined by the "
        ns1:code [ "@scheme" ]
        " attribute."
      ]
    ]
    attribute code {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_state =
  
  ## (state) enth√§lt eine Beschreibung eines Status oder einer Qualit√§t, die einer Person, einem Ort oder einer Organisation oft zu einem bestimmten Zeitpunkt oder f√ºr einen bestimmten Zeitraum zugeordnet wird. [ ]
  element state {
    (tei_state+
     | (tei_model.headLike*,
        tei_model.pLike+,
        (tei_model.noteLike | tei_model.biblLike)*)
     | (tei_model.labelLike
        | tei_model.noteLike
        | tei_model.biblLike)*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    tei_att.naming.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_terrain =
  
  ## (terrain) contains information about the physical terrain of a place. []
  element terrain {
    (tei_model.headLike*,
     (tei_model.pLike+ | tei_model.labelLike+),
     (tei_model.noteLike | tei_model.biblLike)*,
     tei_terrain*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_trait =
  
  ## (trait) contains a description of some status or quality attributed to a person, place, or organization typically, but not necessarily, independent of the volition or action of the holder and usually not at some specific time or for a specific date range. [ ]
  element trait {
    (tei_trait+
     | (tei_model.headLike*,
        tei_model.pLike+,
        (tei_model.noteLike | tei_model.biblLike)*)
     | (tei_model.labelLike
        | tei_model.noteLike
        | tei_model.biblLike)*),
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_objectName =
  
  ## (Name eines Objekts) enth√§lt einen Eigennamen in Form eines Nomens oder einer Nominalphrase, der verwendet wird, um auf ein Objekt zu verweisen. []
  element objectName {
    tei_macro.phraseSeq,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.global.attributes,
    tei_att.personal.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_object =
  
  ## enth√§lt die Beschreibung eines einzelnen identifizierbaren physischen Objekts. []
  element object {
    (tei_objectIdentifier+,
     tei_model.headLike*,
     (tei_model.pLike*
      | (tei_msContents?,
         tei_physDesc?,
         tei_history?,
         tei_additional?)),
     (tei_model.noteLike
      | tei_model.biblLike
      | tei_linkGrp
      | tei_link)*,
     tei_object*),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    tei_att.docStatus.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_listObject =
  
  ## (Liste der Objekte) enth√§lt eine Liste von Beschreibungen, die jeweils Informationen zu einem identifizierbaren physischen Objekt liefern. []
  element listObject {
    (tei_model.headLike*,
     tei_desc*,
     (tei_relation | tei_listRelation)*,
     (tei_model.objectLike+, (tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_objectIdentifier =
  
  ## (Objektidentifikator) gruppiert einen oder mehrere Identifikatoren oder Teile von Lokalisierungsinformationen, die ein einzelnes Objekt betreffen. []
  element objectIdentifier {
    (tei_model.placeNamePart
     | tei_institution
     | tei_repository
     | tei_collection
     | tei_idno
     | tei_msName
     | tei_objectName
     | tei_altIdentifier
     | tei_address)+,
    tei_att.global.attributes,
    empty
  }
tei_nym =
  
  ## (canonical name) contains the definition for a canonical name or name component of any kind. []
  element nym {
    (tei_idno*, tei_model.entryPart*, tei_model.pLike*, tei_nym*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.sortable.attributes,
    
    ## points to constituent nyms
    attribute parts {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_listNym =
  
  ## (list of canonical names) contains a list of nyms, that is, standardized names for any thing. []
  element listNym {
    (tei_model.headLike*,
     tei_desc*,
     (tei_relation | tei_listRelation)*,
     ((tei_nym | tei_listNym)+, (tei_relation | tei_listRelation)*)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declarable.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_att.msExcerpt.attributes = tei_att.msExcerpt.attribute.defective
tei_att.msExcerpt.attribute.defective =
  
  ## indicates whether the passage being quoted is defective, i.e. incomplete through loss or damage.
  attribute defective {
    xsd:boolean
    | (
       ##
       "unknown"
       | 
         ##
         "inapplicable")
  }?
tei_att.msClass.attributes = tei_att.msClass.attribute.class
tei_att.msClass.attribute.class =
  
  ## identifies the text types or classifications applicable to this item by pointing to other elements or resources defining the classification concerned. 
  attribute class {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_msDesc =
  
  ## (manuscript description) contains a description of a single identifiable manuscript or other text-bearing object such as an early printed book. []
  element msDesc {
    (tei_msIdentifier,
     tei_model.headLike*,
     (tei_model.pLike+
      | (tei_msContents?,
         tei_physDesc?,
         tei_history?,
         tei_additional?,
         (tei_msPart* | tei_msFrag*)))),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    tei_att.docStatus.attributes,
    empty
  }
tei_catchwords =
  
  ## (catchwords) describes the system used to ensure correct ordering of the quires or similar making up a codex, incunable, or other object typically by means of annotations at the foot of the page. []
  element catchwords {
    tei_macro.phraseSeq
    >> sch:pattern [
         id =
           "propy-catchwords-catchword_in_msDesc-constraint-assert-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:catchwords"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "ancestor::tei:msDesc or ancestor::tei:egXML"
             "The "
             sch:name [ ]
             " element should not be used outside of msDesc."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    empty
  }
tei_dimensions =
  
  ## (dimensions) contains a dimensional specification. []
  element dimensions {
    ((tei_dim | tei_model.dimLike)*)
    >> sch:pattern [
         id = "propy-dimensions-duplicateDim-constraint-report-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    tei_att.typed.attribute.subtype,
    
    ## indicates which aspect of the object is being measured.
    ## Sample values include: 1] leaves; 2] ruled; 3] pricked; 4] written; 5] miniatures; 6] binding; 7] box
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_dim =
  
  ## contains any single measurement forming part of a dimensional specification of some sort. []
  element dim {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_height =
  
  ## (height) contains a measurement measured along the axis at a right angle to the bottom of the object. []
  element height {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_depth =
  [
    a:documentation [
      "(depth) contains a measurement from the front to the back of an object, perpendicular to the measurement given by the "
      ns1:code [ "<width>" ]
      " element. []"
    ]
  ]
  element depth {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_width =
  
  ## (width) contains a measurement of an object along the axis parallel to its bottom, e.g. perpendicular to the spine of a book or codex. []
  element width {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_heraldry =
  
  ## (heraldry) contains a heraldic formula or phrase, typically found as part of a blazon, coat of arms, etc.  []
  element heraldry {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_locus =
  
  ## (locus) defines a location within a manuscript, manuscript part, or other object typically as a (possibly discontinuous) sequence of folio references. []
  element locus {
    (text | tei_model.gLike | tei_hi | tei_locus)*,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    [
      a:documentation [
        "(scheme) identifies the foliation scheme in terms of which the location is being specified by pointing to some "
        ns1:code [ "<foliation>" ]
        " element defining it, or to some other equivalent resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## (from) specifies the starting point of the location in a normalized form, typically a page number.
    attribute from {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (to) specifies the end-point of the location in a normalized form, typically as a page number.
    attribute to {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_locusGrp =
  
  ## (locus group) groups a number of locations which together form a distinct but discontinuous item within a manuscript, manuscript part, or other object. []
  element locusGrp {
    tei_locus+,
    tei_att.global.attributes,
    [
      a:documentation [
        "(scheme) identifies the foliation scheme in terms of which all the locations contained by the group are specified by pointing to some "
        ns1:code [ "<foliation>" ]
        " element defining it, or to some other equivalent resource."
      ]
    ]
    attribute scheme {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_material =
  
  ## (material) contains a word or phrase describing the material of which the object being described is composed. []
  element material {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    tei_att.typed.attributes,
    
    ## describes the function or use of the material in relation to the object as a whole.
    ## Sample values include: 1] binding; 2] endband; 3] slipcase; 4] support; 5] tie
    attribute function {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## identifies one or more elements to which the metamark applies.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_objectType =
  
  ## (object type) contains a word or phrase describing the type of object being referred to. []
  element objectType {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_origDate =
  
  ## (origin date) contains any form of date, used to identify the date of origin for a manuscript, manuscript part, or other object. []
  element origDate {
    (text | tei_model.gLike | tei_model.phrase | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.dimensions.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_origPlace =
  
  ## (origin place) contains any form of place name, used to identify the place of origin for a manuscript, manuscript part, or other object. []
  element origPlace {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.datable.attributes,
    tei_att.editLike.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_secFol =
  
  ## (second folio) marks the word or words taken from a fixed point in a codex (typically the beginning of the second leaf) in order to provide a unique identifier for it.  []
  element secFol {
    tei_macro.phraseSeq
    >> sch:pattern [
         id = "propy-secFol-secFol_in_msDesc-constraint-assert-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:secFol"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "ancestor::tei:msDesc or ancestor::tei:egXML"
             "The "
             sch:name [ ]
             " element should not be used outside of msDesc."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    empty
  }
tei_signatures =
  
  ## (signatures) contains discussion of the leaf or quire signatures found within a codex or similar object. []
  element signatures {
    tei_macro.specialPara
    >> sch:pattern [
         id =
           "propy-signatures-signatures_in_msDesc-constraint-assert-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:signatures"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "ancestor::tei:msDesc or ancestor::tei:egXML"
             "The "
             sch:name [ ]
             " element should not be used outside of msDesc."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    empty
  }
tei_stamp =
  
  ## (stamp) contains a word or phrase describing a stamp or similar device. []
  element stamp {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_watermark =
  
  ## (watermark) contains a word or phrase describing a watermark or similar device. []
  element watermark {
    tei_macro.phraseSeq, tei_att.global.attributes, empty
  }
tei_msIdentifier =
  
  ## (manuscript identifier) contains the information required to identify the manuscript or similar object being described. []
  element msIdentifier {
    ((tei_placeName?,
      tei_bloc?,
      tei_country?,
      tei_region?,
      tei_settlement?,
      tei_district?,
      tei_geogName?,
      tei_institution?,
      tei_repository?,
      tei_collection*,
      tei_idno*),
     (tei_msName | tei_objectName | tei_altIdentifier)*)
    >> sch:pattern [
         id = "propy-msIdentifier-msId_minimal-constraint-report-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and (local-name(*[1])='idno' or local-name(*[1])='altIdentifier' or normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    empty
  }
tei_institution =
  
  ## (Institution) contains the name of an organization such as a university or library, with which a manuscript or other object is identified, generally its holding institution. []
  element institution {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_repository =
  
  ## (repository) contains the name of a repository within which manuscripts or other objects are stored, possibly forming part of an institution. []
  element repository {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    empty
  }
tei_collection =
  
  ## (collection) contains the name of a collection of manuscripts or other objects, not necessarily located within a single repository. []
  element collection {
    tei_macro.phraseSeq.limited,
    tei_att.global.attributes,
    tei_att.naming.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_altIdentifier =
  
  ## (alternative identifier) contains an alternative or former structured identifier used for a manuscript or other object, such as a former catalogue number. []
  element altIdentifier {
    (tei_placeName?,
     tei_bloc?,
     tei_country?,
     tei_region?,
     tei_settlement?,
     tei_district?,
     tei_geogName?,
     tei_institution?,
     tei_repository?,
     tei_collection?,
     tei_idno,
     tei_note?),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_msName =
  
  ## (alternative name) contains any form of unstructured alternative name used for a manuscript or other object, such as an ocellus nominum, or nickname. []
  element msName {
    (text | tei_model.gLike | tei_rs | tei_name)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_colophon =
  
  ## (colophon) contains the colophon of an item: that is, a statement providing information regarding the date, place, agency, or reason for production of the manuscript or other object. []
  element colophon {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_explicit =
  
  ## (explicit) contains the explicit of a item, that is, the closing words of the text proper, exclusive of any rubric or colophon which might follow it. []
  element explicit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_filiation =
  
  ## (filiation) contains information concerning the manuscript or other object's filiation, i.e. its relationship to other surviving manuscripts or other objects of the same text or contents, its protographs, antigraphs and apographs. []
  element filiation {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_finalRubric =
  
  ## (final rubric) contains the string of words that denotes the end of a text division, often with an assertion as to its author and title, usually set off from the text itself by red ink, by a different size or type of script, or by some other such visual device. []
  element finalRubric {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_incipit =
  
  ## contains the incipit of a manuscript or similar object item, that is the opening words of the text proper, exclusive of any rubric which might precede it, of sufficient length to identify the work uniquely; such incipits were, in former times, frequently used a means of reference to a work, in place of a title. []
  element incipit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_msContents =
  
  ## (manuscript contents) describes the intellectual content of a manuscript, manuscript part, or other object either as a series of paragraphs or as a series of structured manuscript items. []
  element msContents {
    (tei_model.pLike+
     | (tei_summary?,
        tei_textLang?,
        tei_titlePage?,
        (tei_msItem | tei_msItemStruct)*)),
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    tei_att.msClass.attributes,
    empty
  }
tei_msItem =
  
  ## (manuscript item) describes an individual work or item within the intellectual content of a manuscript, manuscript part, or other object. []
  element msItem {
    ((tei_locus | tei_locusGrp)*,
     (tei_model.pLike+
      | (tei_model.titlepagePart
         | tei_model.msItemPart
         | tei_model.global)+)),
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    tei_att.msClass.attributes,
    empty
  }
tei_msItemStruct =
  
  ## (structured manuscript item) contains a structured description for an individual work or item within the intellectual content of a manuscript, manuscript part, or other object. []
  element msItemStruct {
    ((tei_locus | tei_locusGrp)?,
     (tei_model.pLike+
      | (tei_author*,
         tei_respStmt*,
         tei_title*,
         tei_rubric?,
         tei_incipit?,
         tei_msItemStruct*,
         tei_explicit?,
         tei_finalRubric?,
         tei_colophon*,
         tei_decoNote*,
         tei_listBibl*,
         (tei_bibl | tei_biblStruct)*,
         tei_filiation?,
         tei_model.noteLike*,
         tei_textLang?))),
    tei_att.global.attributes,
    tei_att.msExcerpt.attributes,
    tei_att.msClass.attributes,
    empty
  }
tei_rubric =
  
  ## (rubric) contains the text of any rubric or heading attached to a particular manuscript item, that is, a string of words through which a manuscript or other object signals the beginning of a text division, often with an assertion as to its author and title, which is in some way set off from the text itself, typically in red ink, or by use of different size or type of script, or some other such visual device. []
  element rubric {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.msExcerpt.attributes,
    empty
  }
tei_summary =
  
  ## contains an overview of the available information concerning some aspect of an item or object (for example, its intellectual content, history, layout, typography etc.) as a complement or alternative to the more detailed information carried by more specific elements. []
  element summary {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_physDesc =
  
  ## (physical description) contains a full physical description of a manuscript, manuscript part, or other object optionally subdivided using more specialized elements from the model.physDescPart class. []
  element physDesc {
    (tei_model.pLike*,
     tei_objectDesc?,
     tei_handDesc?,
     tei_typeDesc?,
     tei_scriptDesc?,
     tei_musicNotation?,
     tei_decoDesc?,
     tei_additions?,
     tei_bindingDesc?,
     tei_sealDesc?,
     tei_accMat?),
    tei_att.global.attributes,
    empty
  }
tei_objectDesc =
  
  ## (object description) contains a description of the physical components making up the object which is being described. []
  element objectDesc {
    (tei_model.pLike+ | (tei_supportDesc?, tei_layoutDesc?)),
    tei_att.global.attributes,
    
    ## (form) a short project-specific name identifying the physical form of the carrier, for example as a codex, roll, fragment, partial leaf, cutting etc.
    attribute form {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_supportDesc =
  
  ## (support description) groups elements describing the physical support for the written part of a manuscript or other object. []
  element supportDesc {
    (tei_model.pLike+
     | (tei_support?,
        tei_extent?,
        tei_foliation*,
        tei_collation?,
        tei_condition?)),
    tei_att.global.attributes,
    
    ## (material) a short project-defined name for the material composing the majority of the support
    ## Suggested values include: 1] paper; 2] parch (parchment); 3] mixed
    attribute material {
      
      ##
      "paper"
      | 
        ## (parchment) 
        "parch"
      | 
        ##
        "mixed"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_support =
  
  ## (support) contains a description of the materials etc. which make up the physical support for the written part of a manuscript or other object. []
  element support {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_collation =
  
  ## (collation) contains a description of how the leaves, bifolia, or similar objects are physically arranged. []
  element collation {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_foliation =
  
  ## (foliation) describes the numbering system or systems used to count the leaves or pages in a codex or similar object. []
  element foliation {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_condition =
  
  ## (condition) contains a description of the physical condition of the manuscript or object. []
  element condition {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_layoutDesc =
  
  ## (layout description) collects the set of layout descriptions applicable to a manuscript or other object. []
  element layoutDesc {
    (tei_model.pLike+ | (tei_summary?, tei_layout+)),
    tei_att.global.attributes,
    empty
  }
tei_layout =
  
  ## (layout) describes how text is laid out on the page or surface of the object, including information about any ruling, pricking, or other evidence of page-preparation techniques. []
  element layout {
    tei_macro.specialPara,
    tei_att.global.attributes,
    
    ## (columns) specifies the number of columns per page
    attribute columns {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## (textual streams) indicates the number of streams per page, each of which contains an independent textual stream
    attribute streams {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## (ruled lines) specifies the number of ruled lines per column
    attribute ruledLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    
    ## (written lines) specifies the number of written lines per column
    attribute writtenLines {
      list { xsd:nonNegativeInteger, xsd:nonNegativeInteger? }
    }?,
    empty
  }
tei_handDesc =
  
  ## (description of hands) contains a description of all the different hands used in a manuscript or other object. []
  element handDesc {
    (tei_model.pLike+ | (tei_summary?, tei_handNote+)),
    tei_att.global.attributes,
    
    ## (hands) specifies the number of distinct hands identified within the manuscript
    attribute hands { xsd:nonNegativeInteger }?,
    empty
  }
tei_typeDesc =
  
  ## (typeface description) contains a description of the typefaces or other aspects of the printing of an incunable or other printed source. []
  element typeDesc {
    (tei_model.pLike+ | (tei_summary?, tei_typeNote+)),
    tei_att.global.attributes,
    empty
  }
tei_typeNote =
  
  ## (typographic note) describes a particular font or other significant typographic feature distinguished within the description of a printed resource. []
  element typeNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    empty
  }
tei_scriptDesc =
  
  ## (script description) contains a description of the scripts used in a manuscript or other object. []
  element scriptDesc {
    (tei_model.pLike+ | (tei_summary?, tei_scriptNote+)),
    tei_att.global.attributes,
    empty
  }
tei_musicNotation =
  
  ## (music notation) contains description of type of musical notation. []
  element musicNotation {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_decoDesc =
  [
    a:documentation [
      "(decoration description) contains a description of the decoration of a manuscript or other object, either as in paragraphs, or as one or more "
      ns1:code [ "<decoNote>" ]
      " elements. []"
    ]
  ]
  element decoDesc {
    (tei_model.pLike+ | (tei_summary?, tei_decoNote+)),
    tei_att.global.attributes,
    empty
  }
tei_decoNote =
  
  ## (note on decoration) contains a note describing either a decorative component of a manuscript or other object, or a fairly homogenous class of such components. []
  element decoNote {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_additions =
  
  ## (additions) contains a description of any significant additions found within a manuscript or other object, such as marginalia or other annotations. []
  element additions {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_bindingDesc =
  [
    a:documentation [
      "(binding description) describes the present and former bindings of a manuscript or other object, either as a series of paragraphs or as a series of distinct "
      ns1:code [ "<binding>" ]
      " elements, one for each binding of the manuscript. []"
    ]
  ]
  element bindingDesc {
    ((tei_model.pLike | tei_decoNote | tei_condition)+ | tei_binding+),
    tei_att.global.attributes,
    empty
  }
tei_binding =
  
  ## (binding) contains a description of one binding, i.e. type of covering, boards, etc. applied to a manuscript or other object. []
  element binding {
    (tei_model.pLike | tei_condition | tei_decoNote)+,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    
    ## (contemporary) specifies whether or not the binding is contemporary with the majority of its contents
    attribute contemporary {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
tei_sealDesc =
  [
    a:documentation [
      "(seal description) describes the seals or similar items related to the object described, either as a series of paragraphs or as a series of "
      ns1:code [ "<seal>" ]
      " elements. []"
    ]
  ]
  element sealDesc {
    (tei_model.pLike+
     | (tei_summary?, (tei_decoNote | tei_seal | tei_condition)+)),
    tei_att.global.attributes,
    empty
  }
tei_seal =
  
  ## (seal) contains a description of one seal or similar applied to the object described []
  element seal {
    (tei_model.pLike | tei_decoNote)+,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.datable.attributes,
    
    ## (contemporary) specifies whether or not the seal is contemporary with the item to which it is affixed
    attribute contemporary {
      xsd:boolean
      | (
         ##
         "unknown"
         | 
           ##
           "inapplicable")
    }?,
    empty
  }
tei_accMat =
  
  ## (accompanying material) contains details of any significant additional material which may be closely associated with the manuscript or object being described, such as non-contemporaneous documents or fragments bound in with it at some earlier historical period. []
  element accMat {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_history =
  
  ## (history) groups elements describing the full history of a manuscript, manuscript part, or other object. []
  element history {
    (tei_model.pLike+
     | (tei_summary?, tei_origin?, tei_provenance*, tei_acquisition?)),
    tei_att.global.attributes,
    empty
  }
tei_origin =
  
  ## (origin) contains any descriptive or other information concerning the origin of a manuscript, manuscript part, or other object. []
  element origin {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_provenance =
  
  ## (provenance) contains any descriptive or other information concerning a single identifiable episode during the history of a manuscript, manuscript part, or other object after its creation but before its acquisition. []
  element provenance {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_acquisition =
  
  ## (acquisition) contains any descriptive or other information concerning the process by which a manuscript or manuscript part or other object entered the holding institution. []
  element acquisition {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    empty
  }
tei_additional =
  
  ## (additional) groups additional information, combining bibliographic information about a manuscript or other object, or surrogate copies of it, with curatorial or administrative information. []
  element additional {
    (tei_adminInfo?, tei_surrogates?, tei_listBibl?),
    tei_att.global.attributes,
    empty
  }
tei_adminInfo =
  
  ## (administrative information) contains information about the present custody and availability of the manuscript or other object, and also about the record description itself. []
  element adminInfo {
    (tei_recordHist?,
     tei_availability?,
     tei_custodialHist?,
     tei_model.noteLike?),
    tei_att.global.attributes,
    empty
  }
tei_recordHist =
  
  ## (recorded history) provides information about the source and revision status of the parent manuscript or object description itself. []
  element recordHist {
    (tei_model.pLike+ | (tei_source, tei_change*)),
    tei_att.global.attributes,
    empty
  }
tei_source =
  
  ## (source) describes the original source for the information contained with a manuscript or object description. []
  element source {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_custodialHist =
  
  ## (custodial history) contains a description of a manuscript or other object's custodial history, either as running prose or as a series of dated custodial events. []
  element custodialHist {
    (tei_model.pLike+ | tei_custEvent+),
    tei_att.global.attributes,
    empty
  }
tei_custEvent =
  
  ## (custodial event) describes a single event during the custodial history of a manuscript or other object. []
  element custEvent {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.datable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_surrogates =
  
  ## (surrogates) contains information about any representations of the manuscript or other object being described which may exist in the holding institution or elsewhere. []
  element surrogates {
    tei_macro.specialPara, tei_att.global.attributes, empty
  }
tei_msPart =
  
  ## (Handschriftenteil (kodikologische Einheit)) enth√§lt Informationen zu einer kodikologischen Einheit innerhalb einer Handschrift []
  element msPart {
    (tei_msIdentifier,
     tei_model.headLike*,
     (tei_model.pLike+
      | (tei_msContents?,
         tei_physDesc?,
         tei_history?,
         tei_additional?,
         tei_msPart*))),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_msFrag =
  
  ## (Fragment einer Handschrift) enth√§lt Informationen zu einem Handschriftenfragment einer fragmentierten Handschrift, das heute als Einzeldokument oder eingebunden in eine Handschrift aufbewahrt wird. []
  element msFrag {
    ((tei_altIdentifier | tei_msIdentifier),
     tei_model.headLike*,
     (tei_model.pLike+
      | (tei_msContents?,
         tei_physDesc?,
         tei_history?,
         tei_additional?))),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_att.global.facs.attributes = tei_att.global.facs.attribute.facs
tei_att.global.facs.attribute.facs =
  
  ## (facsimile) points to one or more images, portions of an image, or surfaces which correspond to the current element.
  attribute facs {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.change.attributes =
  tei_att.global.change.attribute.change
tei_att.global.change.attribute.change =
  [
    a:documentation [
      "points to one or more "
      ns1:code [ "<change>" ]
      " elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder."
    ]
  ]
  attribute change {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.coordinated.attributes =
  tei_att.coordinated.attribute.start,
  tei_att.coordinated.attribute.ulx,
  tei_att.coordinated.attribute.uly,
  tei_att.coordinated.attribute.lrx,
  tei_att.coordinated.attribute.lry,
  tei_att.coordinated.attribute.points
tei_att.coordinated.attribute.start =
  
  ## indicates the element within a transcription of the text containing at least the start of the writing represented by this zone or surface.
  attribute start {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.coordinated.attribute.ulx =
  
  ## gives the x coordinate value for the upper left corner of a rectangular space.
  attribute ulx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.uly =
  
  ## gives the y coordinate value for the upper left corner of a rectangular space.
  attribute uly {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.lrx =
  
  ## gives the x coordinate value for the lower right corner of a rectangular space.
  attribute lrx {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.lry =
  
  ## gives the y coordinate value for the lower right corner of a rectangular space.
  attribute lry {
    xsd:double
    | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
    | xsd:decimal
  }?
tei_att.coordinated.attribute.points =
  
  ## identifies a two dimensional area by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
  attribute points {
    list {
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      },
      xsd:token {
        pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
      }*
    }
  }?
tei_facsimile =
  
  ## contains a representation of some written source in the form of a set of images rather than as transcribed or encoded text. []
  element facsimile {
    (tei_front?,
     (tei_model.graphicLike | tei_surface | tei_surfaceGrp)+,
     tei_back?)
    >> sch:pattern [
         id =
           "propy-facsimile-no_facsimile_text_nodes-constraint-rule-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:facsimile//tei:line | tei:facsimile//tei:zone"
           "\x{a}" ~
           "               "
           sch:report [
             test = "child::text()[ normalize-space(.) ne '']"
             "\x{a}" ~
             "  	  A facsimile element represents a text with images, thus\x{a}" ~
             "	  transcribed text should not be present within it.\x{a}" ~
             "	"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_sourceDoc =
  
  ## contains a transcription or other representation of a single source document potentially forming part of a dossier g√©n√©tique or collection of sources. [ ]
  element sourceDoc {
    (tei_model.global
     | tei_model.graphicLike
     | tei_surface
     | tei_surfaceGrp)+,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_surface =
  
  ## defines a written surface as a two-dimensional coordinate space, optionally grouping one or more graphic representations of that space, zones of interest within that space, and transcriptions of the writing within them. [ ]
  element surface {
    ((tei_model.global | tei_model.labelLike | tei_model.graphicLike)*,
     ((tei_zone | tei_line | tei_path | tei_surface | tei_surfaceGrp),
      tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    
    ## describes the method by which this surface is or was connected to the main surface
    ## Sample values include: 1] glued; 2] pinned; 3] sewn
    attribute attachment {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## indicates whether the surface is attached and folded in such a way as to provide two writing surfaces
    attribute flipping { xsd:boolean }?,
    empty
  }
tei_surfaceGrp =
  
  ## (surface group) defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. []
  element surfaceGrp {
    (tei_model.global | tei_surface | tei_surfaceGrp)+,
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_zone =
  [
    a:documentation [
      "beschreibt eine beliebige zweidimensionale Fl√§che innerhalb eines "
      ns1:code [ "<surface>" ]
      "-Elements [ ]"
    ]
  ]
  element zone {
    (text
     | tei_model.gLike
     | tei_model.graphicLike
     | tei_model.global
     | tei_surface
     | tei_model.linePart)*,
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    [
      a:defaultValue = "0"
      a:documentation [
        "gibt das Ausma√ü der Drehung (im Uhrzeigersinn) dieser "
        ns1:code [ "<zone>" ]
        " an. Als Bezugspunkt gilt dabei die nat√ºrliche Ausrichtung des "
        ns1:code [ "<surface>" ]
        "-Elternelements, die entweder im "
        ns1:code [ "<msDesc>" ]
        "-Element beschrieben ist oder durch die Koordinaten des "
        ns1:code [ "<surface>" ]
        "-Elements selbst. Die Drehung wird in Bogengrad angegeben."
      ]
    ]
    attribute rotate { xsd:nonNegativeInteger }?,
    empty
  }
tei_path =
  [
    a:documentation [
      "(Pfad) definiert eine beliebige Linie, die durch zwei oder mehr Punkte innerhalb eines "
      ns1:code [ "<surface>" ]
      " Elements verl√§uft. [ ]"
    ]
  ]
  element path {
    empty
    >> sch:pattern [
         id = "propy-path-pathmustnotbeclosed-constraint-rule-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:path[@points]"
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstPair"
             value = "tokenize( normalize-space( @points ), ' ')[1]"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastPair"
             value =
               "tokenize( normalize-space( @points ), ' ')[last()]"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstX"
             value = "xs:float( substring-before( $firstPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "firstY"
             value = "xs:float( substring-after( $firstPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastX"
             value = "xs:float( substring-before( $lastPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:let [
             name = "lastY"
             value = "xs:float( substring-after( $lastPair, ',') )"
           ]
           "\x{a}" ~
           "               "
           sch:report [
             test = "$firstX eq $lastX and $firstY eq $lastY"
             "The first and\x{a}" ~
             "          last elements of this path are the same. To specify a closed polygon, use\x{a}" ~
             "          the zone element rather than the path element. "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.coordinated.attribute.start,
    tei_att.coordinated.attribute.ulx,
    tei_att.coordinated.attribute.uly,
    tei_att.coordinated.attribute.lrx,
    tei_att.coordinated.attribute.lry,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    
    ## beschreibt eine Linie innerhalb eines Begrenzungsrahmens, der durch das Elternelement definiert ist, √ºber eine Reihe von zwei oder mehr Zahlenpaaren, die jeweils die X- und Y-Koordinaten eines Punktes dieser Linie angeben.
    attribute points {
      list {
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        },
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        },
        xsd:token {
          pattern = "(-?[0-9]+(\.[0-9]+)?,-?[0-9]+(\.[0-9]+)?)"
        }*
      }
    }?,
    empty
  }
tei_addSpan =
  [
    a:documentation [
      "(added span of text) marks the beginning of a longer sequence of text added by an author, scribe, annotator or corrector (see also "
      ns1:code [ "<add>" ]
      "). []"
    ]
  ]
  element addSpan {
    empty
    >> sch:pattern [
         id =
           "propy-addSpan-addSpan-requires-spanTo-constraint-assert-18"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-addSpan-addSpan-requires-spanTo-fr-constraint-assert-19"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_damage =
  
  ## (damage) contains an area of damage to the text witness. []
  element damage {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.damaged.attributes,
    empty
  }
tei_damageSpan =
  
  ## (damaged span of text) marks the beginning of a longer sequence of text which is damaged in some way but still legible. []
  element damageSpan {
    empty
    >> sch:pattern [
         id =
           "propy-damageSpan-damageSpan-requires-spanTo-constraint-assert-20"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-damageSpan-damageSpan-requires-spanTo-fr-constraint-assert-21"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.damaged.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    empty
  }
tei_delSpan =
  
  ## (deleted span of text) marks the beginning of a longer sequence of text deleted, marked as deleted, or otherwise signaled as superfluous or spurious by an author, scribe, annotator, or corrector. []
  element delSpan {
    empty
    >> sch:pattern [
         id =
           "propy-delSpan-delSpan-requires-spanTo-constraint-assert-22"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-delSpan-delSpan-requires-spanTo-fr-constraint-assert-23"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_ex =
  
  ## (editorial expansion) contains a sequence of letters added by an editor or transcriber when expanding an abbreviation. []
  element ex {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_fw =
  
  ## (forme work) contains a running head (e.g. a header, footer), catchword, or similar material appearing on the current page. []
  element fw {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    
    ## classifies the material encoded according to some useful typology.
    ## Sample values include: 1] header; 2] footer; 3] pageNum (page number); 4] lineNum (line number); 5] sig (signature); 6] catch (catchword)
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_handNotes =
  [
    a:documentation [
      "contains one or more "
      ns1:code [ "<handNote>" ]
      " elements documenting the different hands identified within the source texts. []"
    ]
  ]
  element handNotes { tei_handNote+, tei_att.global.attributes, empty }
tei_handShift =
  
  ## (handwriting shift) marks the beginning of a sequence of text written in a new hand, or the beginning of a scribal stint. []
  element handShift {
    empty,
    tei_att.global.attributes,
    tei_att.handFeatures.attributes,
    [
      a:documentation [
        "indicates a "
        ns1:code [ "<handNote>" ]
        " element describing the hand concerned."
      ]
    ]
    attribute new {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_am =
  
  ## (abbreviation marker) contains a sequence of letters or signs present in an abbreviation which are omitted or replaced in the expanded form of the abbreviation. []
  element am {
    (text | tei_model.gLike | tei_model.pPart.transcriptional)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.editLike.attributes,
    empty
  }
tei_restore =
  
  ## (restore) indicates restoration of text to an earlier state by cancellation of an editorial or authorial marking or instruction. []
  element restore {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_space =
  
  ## (space) indicates the location of a significant space in the text. []
  element space {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attribute.xmlid,
    tei_att.global.attribute.n,
    tei_att.global.attribute.xmllang,
    tei_att.global.attribute.xmlbase,
    tei_att.global.attribute.xmlspace,
    tei_att.global.rendition.attribute.rend,
    tei_att.global.rendition.attribute.style,
    tei_att.global.rendition.attribute.rendition,
    tei_att.global.linking.attribute.corresp,
    tei_att.global.linking.attribute.synch,
    tei_att.global.linking.attribute.sameAs,
    tei_att.global.linking.attribute.copyOf,
    tei_att.global.linking.attribute.next,
    tei_att.global.linking.attribute.prev,
    tei_att.global.linking.attribute.exclude,
    tei_att.global.linking.attribute.select,
    tei_att.global.facs.attribute.facs,
    tei_att.global.change.attribute.change,
    tei_att.global.responsibility.attribute.cert,
    tei_att.global.source.attribute.source,
    tei_att.typed.attributes,
    tei_att.dimensions.attributes,
    
    ## (responsible party) (responsible party) indicates the individual responsible for identifying and measuring the space
    attribute resp {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    
    ## (dimension) indicates whether the space is horizontal or vertical.
    attribute dim {
      
      ## the space is horizontal.
      "horizontal"
      | 
        ## the space is vertical.
        "vertical"
    }?,
    empty
  }
tei_subst =
  
  ## (substitution) groups one or more deletions (or surplus text) with one or more additions when the combination is to be regarded as a single intervention in the text. []
  element subst {
    ((tei_add | tei_surplus | tei_del | tei_model.milestoneLike)+)
    >> sch:pattern [
         id = "propy-subst-substContents1-constraint-assert-24"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "child::tei:add and (child::tei:del or child::tei:surplus)"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del or surplus"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_substJoin =
  
  ## (substitution join) identifies a series of possibly fragmented additions, deletions, or other revisions on a manuscript that combine to make up a single intervention in the text []
  element substJoin {
    (tei_model.descLike | tei_model.certLike)*,
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_supplied =
  
  ## (supplied) signifies text supplied by the transcriber or editor for any reason; for example because the original cannot be read due to physical damage, or because of an obvious omission by the author or scribe. []
  element supplied {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## one or more words indicating why the text has had to be supplied, e.g. overbinding, faded-ink, lost-folio, omitted-in-original.
    attribute reason {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_surplus =
  
  ## (surplus) marks text present in the source which the editor believes to be superfluous or redundant. []
  element surplus {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## one or more words indicating why this text is believed to be superfluous, e.g. repeated, interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_secl =
  
  ## (secluded text) Secluded. Marks text present in the source which the editor believes to be genuine but out of its original place (which is unknown). []
  element secl {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.editLike.attributes,
    tei_att.dimensions.attributes,
    
    ## one or more words indicating why this text has been secluded, e.g. interpolated etc.
    attribute reason {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_line =
  
  ## contains the transcription of a topographic line in the source document []
  element line {
    (text | tei_model.global | tei_model.gLike | tei_model.linePart)*,
    tei_att.typed.attributes,
    tei_att.global.attributes,
    tei_att.coordinated.attributes,
    tei_att.written.attributes,
    empty
  }
tei_listTranspose =
  
  ## supplies a list of transpositions, each of which is indicated at some point in a document typically by means of metamarks. []
  element listTranspose {
    (tei_desc*, tei_transpose+), tei_att.global.attributes, empty
  }
tei_metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. []
  element metamark {
    tei_macro.specialPara,
    tei_att.spanning.attributes,
    tei_att.placement.attributes,
    tei_att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the metamark.
    attribute function {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## identifies one or more elements to which the metamark applies.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_mod =
  
  ## represents any kind of modification identified within a single document. []
  element mod {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.transcriptional.attributes,
    tei_att.typed.attributes,
    tei_att.spanning.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_redo =
  
  ## indicates one or more cancelled interventions in a document which have subsequently been marked as reaffirmed or repeated. []
  element redo {
    empty,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    
    ## points to one or more elements representing the interventions which are being reasserted.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_retrace =
  
  ## contains a sequence of writing which has been retraced, for example by over-inking, to clarify or fix it. []
  element retrace {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    empty
  }
tei_transpose =
  
  ## describes a single textual transposition as an ordered list of at least two pointers specifying the order in which the elements indicated should be re-combined. []
  element transpose {
    (tei_ptr, tei_ptr, tei_ptr*), tei_att.global.attributes, empty
  }
tei_undo =
  
  ## indicates one or more marked-up interventions in a document which have subsequently been marked for cancellation. []
  element undo {
    empty,
    tei_att.global.attributes,
    tei_att.spanning.attributes,
    tei_att.transcriptional.attributes,
    tei_att.dimensions.attributes,
    
    ## points to one or more elements representing the interventions which are to be reverted or undone.
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    }?,
    empty
  }
tei_TEI =
  [
    a:documentation [
      "(TEI-Dokument) enth√§lt ein einzelnes TEI-konformes Dokument, das aus einem einzigen TEI-Header und einem oder mehreren Mitgliedern der model.resource-Klasse besteht. Mehrere "
      ns1:code [ "<TEI>" ]
      "-Elemente k√∂nnen in einem "
      ns1:code [ "<teiCorpus>" ]
      "-Element zusammengefasst werden. [ ]"
    ]
  ]
  element TEI {
    (tei_teiHeader,
     ((tei_model.resource+, tei_TEI*) | tei_TEI+))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## gibt die Versionsnummer der TEI-Richtlinien an, gegen die dieses Dokument validiert wird.
    attribute version {
      xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
    }?,
    empty
  }
tei_text =
  
  ## (text) enth√§lt einen einzelnen, eigenst√§ndigen oder kompilierten Text, zum Beispiel ein Gedicht oder Drama, eine Sammlung von Aufs√§tzen, einen Roman, ein W√∂rterbuch oder ein Korpus-Sample. [ ]
  element text {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_body =
  
  ## (Textk√∂rper) enth√§lt den gesamten Textk√∂rper eines eigenst√§ndigen Textes, au√üer den Vorspann (front) und Nachspann (back). []
  element body {
    (tei_model.global*,
     (tei_model.divTop, (tei_model.global | tei_model.divTop)*)?,
     (tei_model.divGenLike,
      (tei_model.global | tei_model.divGenLike)*)?,
     ((tei_model.divLike, (tei_model.global | tei_model.divGenLike)*)+
      | (tei_model.div1Like,
         (tei_model.global | tei_model.divGenLike)*)+
      | (((tei_model.common), tei_model.global*)+,
         ((tei_model.divLike,
           (tei_model.global | tei_model.divGenLike)*)+
          | (tei_model.div1Like,
             (tei_model.global | tei_model.divGenLike)*)+)?)),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_group =
  
  ## (Gruppierung) enth√§lt den Textk√∂rper eines aus mehreren Einzeltexten bestehenden Textes, (oder eine Reihe solcher Texte), die zusammen als Einheit gesehen werden, zum Beispiel die gesammelten Werke eines Autors, eine Reihe von Prosast√ºcken, etc. [  ]
  element group {
    ((tei_model.divTop | tei_model.global)*,
     ((tei_text | tei_group),
      (tei_text | tei_group | tei_model.global)*),
     tei_model.divBottom*),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_floatingText =
  
  ## (floating text) contains a single text of any kind, whether unitary or composite, which interrupts the text containing it at any point and after which the surrounding text resumes. []
  element floatingText {
    (tei_model.global*,
     (tei_front, tei_model.global*)?,
     (tei_body | tei_group),
     tei_model.global*,
     (tei_back, tei_model.global*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_div =
  
  ## (Textabschnitt) enth√§lt einen Unterabschnitt in Vorspann (front), Textk√∂rper oder Nachspann (back) eines Textes. []
  element div {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.divLike | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.divLike | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?)
    >> sch:pattern [
         id =
           "propy-div-abstractModel-structure-div-in-l-or-lg-constraint-report-23"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id =
           "propy-div-abstractModel-structure-div-in-ab-or-p-constraint-report-24"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:div"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:p or ancestor::tei:ab) and not(ancestor::tei:floatingText)"
             "\x{a}" ~
             "        Abstract model violation: p and ab may not contain higher-level structural elements such as div, unless div is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    tei_att.written.attributes,
    empty
  }
tei_div1 =
  
  ## ( Textgliederungsebene -1 ) enth√§lt die erste Gliederungsebene von Vorspann (front), Kerntext oder Nachspann (back) eines Textes. []
  element div1 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div2Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.div2Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div2 =
  
  ## ( Textgliederungsebene -2 ) enth√§lt die zweite Gliederungsebene von Vorspann (front), Kerntext oder Nachspann (back) eines Textes. []
  element div2 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div3Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.div3Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div3 =
  
  ## ( Textgliederungsebene -3 ) enth√§lt die dritte Gliederungsebene von Vorspann (front), Kerntext oder Nachspann (back) eines Textes. []
  element div3 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div4Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.div4Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div4 =
  
  ## ( Textgliederungsebene -4 ) "> enth√§lt die vierte Gliederungsebene von Vorspann (front), Kerntext oder Nachspann (back) eines Textes. []
  element div4 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div5Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.div5Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div5 =
  
  ## ( Textgliederungsebene -5 ) "> enth√§lt die f√ºnfte Gliederungsebene von Vorspann (front), Kerntext oder Nachspann (back) eines Textes. []
  element div5 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div6Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.div6Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div6 =
  
  ## ( Textgliederungsebene -6 ) enth√§lt die sechste Gliederungsebene von Vorspann (front), Kerntext oder Nachspann (back) eines Textes. []
  element div6 {
    ((tei_model.divTop | tei_model.global)*,
     ((((tei_model.div7Like | tei_model.divGenLike), tei_model.global*)+
       | (((tei_model.common), tei_model.global*)+,
          ((tei_model.div7Like | tei_model.divGenLike),
           tei_model.global*)*)),
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_div7 =
  
  ## ( Textgliederungsebene -7 ) enth√§lt die kleinste m√∂gliche Untergliederung von Vorspann (front), Kerntext oder Nachspann (back) eines Textes, die gr√∂√üer als ein Absatz ist. []
  element div7 {
    ((tei_model.divTop | tei_model.global)*,
     (((tei_model.common), tei_model.global*)+,
      (tei_model.divBottom, tei_model.global*)*)?),
    tei_att.global.attributes,
    tei_att.divLike.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_trailer =
  
  ## enth√§lt einen abschlie√üenden Nachsatz oder eine Fu√üzeile am Ende eines Textabschnitts. [ ]
  element trailer {
    (text
     | tei_lg
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.lLike
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.placement.attributes,
    tei_att.written.attributes,
    empty
  }
tei_byline =
  
  ## (Verfasserzeile) enth√§lt Angaben zur Hauptverantwortlichkeit eines Werks, entweder auf der Titelseite oder am Anfang oder Ende des Werks. [ ]
  element byline {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_docAuthor
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_dateline =
  
  ## (dateline) enth√§lt kurze Angaben zu Entstehungsort, -datum, -zeit, usw. eines Briefs, Zeitungsartikels oder anderen Werks. Diese k√∂nnen als √úberschrift oder Nachsatz dem Text voran- bzw. nachgestellt werden. []
  element dateline {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.global
     | tei_docDate)*,
    tei_att.global.attributes,
    empty
  }
tei_argument =
  
  ## (argument) beinhaltet eine systematische Aufz√§hlung oder eine Prosabeschreibung der Themen, die in einem Unterabschnitt des Textes behandelt werden. [ ]
  element argument {
    ((tei_model.global | tei_model.headLike)*,
     (tei_model.common, tei_model.global*)+),
    tei_att.global.attributes,
    empty
  }
tei_epigraph =
  
  ## (Motto) enth√§lt ein anonymes oder jemandem zugeschriebenes Zitat, das am Beginn eines Abschnitts, Kapitels oder auf einer Titelseite steht. [  ]
  element epigraph {
    (tei_model.common | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_opener =
  
  ## (opener) fasst Datumszeile, Verfasserangabe, Anredeformel und √§hnliche Phrasen zusammen, die einleitend zu Beginn eines Abschnitts stehen, vor allem bei einem Brief. []
  element opener {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_argument
     | tei_byline
     | tei_dateline
     | tei_epigraph
     | tei_salute
     | tei_signed
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_closer =
  
  ## (closer) fasst Gru√üformeln, Datumszeilen und √§hnliche Phrasen zusammen, die am Ende eines Abschnitts stehen, vor allem bei einem Brief. [ ]
  element closer {
    (text
     | tei_model.gLike
     | tei_signed
     | tei_dateline
     | tei_salute
     | tei_model.phrase
     | tei_model.global)*,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_salute =
  
  ## (Gru√üformel) enth√§lt eine Anrede oder Gru√üformel, die einem Vorwort, einer Widmung oder einem anderen Abschnitt eines Textes vorangestellt ist oder die Gru√üformel am Ende eines Briefes, eines Vorworts, usw. []
  element salute {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_signed =
  
  ## (Signatur) enth√§lt die abschlie√üende Gru√üformel o.√Ñ. die ein Vorwort, eine Widmung oder einen anderen Abschnitt des Textes beendet. []
  element signed {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_postscript =
  
  ## enth√§lt einen Nachtrag (Postskriptum), z. B. zu einem Brief. []
  element postscript {
    ((tei_model.global | tei_model.divTopPart)*,
     tei_model.common,
     (tei_model.global | tei_model.common)*,
     (tei_model.divBottomPart, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.written.attributes,
    empty
  }
tei_titlePage =
  
  ## (Titelseite) enth√§lt die Titelseite eines Textes, die entweder im Vorspann (front) oder Nachspann (back) stehen kann. []
  element titlePage {
    (tei_model.global*,
     tei_model.titlepagePart,
     (tei_model.titlepagePart | tei_model.global)*),
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## klassifiziert die Titelseite entsprechend einer geeigneten Typologie.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_docTitle =
  
  ## (Dokumenttitel) enth√§lt den Titel eines Dokuments, einschlie√ülich aller Bestandteile, wie sie auf dem Titelblatt angegeben sind. []
  element docTitle {
    (tei_model.global*, (tei_titlePart, tei_model.global*)+),
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_titlePart =
  
  ## (Titelbestandteil) enth√§lt einen Bestandteil eines Werktitels, wie er auf der Titelseite angegeben ist. []
  element titlePart {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## (Titelart) beschreibt die Funktion dieses Titelbestandteils n√§her.
    ## Suggested values include: 1] main (main); 2] sub (subordinate); 3] alt (alternate); 4] short (short); 5] desc (descriptive)
    [ a:defaultValue = "main" ]
    attribute type {
      
      ## (Haupttitel) Haupttitel des Werks
      "main"
      | 
        ## (Untertitel) Untertitel des Werks
        "sub"
      | 
        ## (Alternativer Titel) Alternativer Titel des Werks
        "alt"
      | 
        ## (Kurztitel) Kurzform des Titels
        "short"
      | 
        ## (Beschreibung) beschreibende Paraphrase eines Werks
        "desc"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    empty
  }
tei_docAuthor =
  
  ## (Verfasser des Dokuments) enth√§lt den Namen des Verfassers des Dokuments, wie auf dem Titelblatt angegeben (h√§ufig, jedoch nicht immer in der Verfasserzeile) []
  element docAuthor {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.canonical.attributes,
    empty
  }
tei_imprimatur =
  
  ## (Imprimatur) enth√§lt eine formelle Erkl√§rung zur Autorisation der Ver√∂ffentlichung, die manchmal auf der Titel- oder R√ºckseite erscheinen muss. []
  element imprimatur {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_docEdition =
  
  ## (Ausgabe des Dokuments) enth√§lt Angaben zur Ausgabe, entsprechend den Informationen auf dem Titelblatt eines Dokuments. []
  element docEdition {
    tei_macro.paraContent, tei_att.global.attributes, empty
  }
tei_docImprint =
  
  ## (Impressum des Dokuments) enth√§lt das Impressum (Erscheinungsort und -datum, Verlag), das (√ºblicherweise) am unteren Rand der Titelseite steht. []
  element docImprint {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_pubPlace
     | tei_docDate
     | tei_publisher
     | tei_model.global)*,
    tei_att.global.attributes,
    empty
  }
tei_docDate =
  
  ## (Datierung des Dokuments) enth√§lt die Datierung des Dokuments, wie auf der Titelseite oder in einer Datumszeile angegeben. []
  element docDate {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    
    ## (wann) gibt den Wert des Datums in einer standardisierten Form an, z. B. YYYY-MM-DD.
    attribute when {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    empty
  }
tei_front =
  
  ## (Vorspann (front)) enth√§lt alle dem Textk√∂rper vorangestellten Texte (√úberschriften, Abstracts, Titelseite, Vorworte, Widmungen, usw.) zu Beginn eines Dokuments. [ ]
  element front {
    ((tei_model.frontPart
      | tei_model.pLike
      | tei_model.pLike.front
      | tei_model.global)*,
     (((tei_model.div1Like,
        (tei_model.div1Like | tei_model.frontPart | tei_model.global)*)
       | (tei_model.divLike,
          (tei_model.divLike
           | tei_model.frontPart
           | tei_model.global)*)),
      (tei_model.divBottom,
       (tei_model.divBottom | tei_model.global)*)?)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_back =
  
  ## (Nachspann (back)) enth√§lt Anh√§nge jeglicher Art, die auf den Hauptteil eines Textes folgen. [ ]
  element back {
    ((tei_model.frontPart
      | tei_model.pLike.front
      | tei_model.pLike
      | tei_model.listLike
      | tei_model.global)*,
     ((tei_model.div1Like,
       (tei_model.frontPart | tei_model.div1Like | tei_model.global)*)
      | (tei_model.divLike,
         (tei_model.frontPart
          | tei_model.divLike
          | tei_model.global)*))?,
     (tei_model.divBottomPart,
      (tei_model.divBottomPart | tei_model.global)*)?),
    tei_att.global.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_att.tableDecoration.attributes =
  tei_att.tableDecoration.attribute.role,
  tei_att.tableDecoration.attribute.rows,
  tei_att.tableDecoration.attribute.cols
tei_att.tableDecoration.attribute.role =
  
  ## (role) indicates the kind of information held in this cell or in each cell of this row.
  ## Suggested values include: 1] label; 2] data
  [ a:defaultValue = "data" ]
  attribute role {
    
    ## labelling or descriptive information only.
    "label"
    | 
      ## data values.
      "data"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.tableDecoration.attribute.rows =
  
  ## (rows) indicates the number of rows occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute rows { xsd:nonNegativeInteger }?
tei_att.tableDecoration.attribute.cols =
  
  ## (columns) indicates the number of columns occupied by this cell or row.
  [ a:defaultValue = "1" ] attribute cols { xsd:nonNegativeInteger }?
tei_table =
  
  ## (Tabelle) enth√§lt Text, der in Tabellenform, also in Zeilen und Spalten, dargestellt ist. []
  element table {
    ((tei_model.headLike | tei_model.global)*,
     ((tei_row, tei_model.global*)+
      | (tei_model.graphicLike, tei_model.global*)+),
     (tei_model.divBottom, tei_model.global*)*),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## (Zeilen) gibt die Anzahl der Tabellenzeilen an.
    attribute rows { xsd:nonNegativeInteger }?,
    
    ## (Spalten) gibt die Anzahl der Tabellenspalten an.
    attribute cols { xsd:nonNegativeInteger }?,
    empty
  }
tei_row =
  
  ## (Tabellenzeile) enth√§lt eine Zeile einer Tabelle. []
  element row {
    tei_cell+,
    tei_att.global.attributes,
    tei_att.tableDecoration.attributes,
    empty
  }
tei_cell =
  
  ## (Tabellenzelle) enth√§lt eine Zelle einer Tabelle. []
  element cell {
    tei_macro.specialPara,
    tei_att.global.attributes,
    tei_att.tableDecoration.attributes,
    empty
  }
tei_formula =
  
  ## (Formel) enth√§lt eine mathematische oder andere Formel. []
  element formula {
    (text | tei_model.graphicLike | tei_model.hiLike)*,
    tei_att.global.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_notatedMusic =
  
  ## encodes the presence of music notation in a text []
  element notatedMusic {
    (tei_model.labelLike
     | tei_model.ptrLike
     | tei_graphic
     | tei_binaryObject
     | tei_seg)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_figure =
  
  ## (Abbildung) umfasst Elemente, die grafische Informationen repr√§sentieren oder beinhalten, wie z. B. eine Abbildung, Formel oder Diagramm. []
  element figure {
    (tei_model.headLike
     | tei_model.common
     | tei_figDesc
     | tei_model.graphicLike
     | tei_model.global
     | tei_model.divBottom)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    empty
  }
tei_figDesc =
  
  ## (Beschreibung einer Abbildung) enth√§lt einen kurzen Beschreibungstext des Inhalts oder des Aussehens einer Abbildung, um etwa ein Bild ohne dessen Anzeige dokumentieren zu k√∂nnen. []
  element figDesc {
    tei_macro.limitedContent, tei_att.global.attributes, empty
  }
tei_att.global.linking.attributes =
  tei_att.global.linking.attribute.corresp,
  tei_att.global.linking.attribute.synch,
  tei_att.global.linking.attribute.sameAs,
  tei_att.global.linking.attribute.copyOf,
  tei_att.global.linking.attribute.next,
  tei_att.global.linking.attribute.prev,
  tei_att.global.linking.attribute.exclude,
  tei_att.global.linking.attribute.select
tei_att.global.linking.attribute.corresp =
  
  ## (corresponds) points to elements that correspond to the current element in some way.
  attribute corresp {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.synch =
  
  ## (synchronous) points to elements that are synchronous with the current element.
  attribute synch {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.sameAs =
  
  ## points to an element that is the same as the current element.
  attribute sameAs {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.copyOf =
  
  ## points to an element of which the current element is a copy.
  attribute copyOf {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.next =
  
  ## points to the next element of a virtual aggregate of which the current element is part.
  attribute next {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.prev =
  
  ## (previous) points to the previous element of a virtual aggregate of which the current element is part.
  attribute prev {
    xsd:anyURI { pattern = "\S+" }
  }?
tei_att.global.linking.attribute.exclude =
  
  ## points to elements that are in exclusive alternation with the current element.
  attribute exclude {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.global.linking.attribute.select =
  
  ## selects one or more alternants; if one alternant is selected, the ambiguity or uncertainty is marked as resolved. If more than one alternant is selected, the degree of ambiguity or uncertainty is marked as reduced by the number of alternants not selected.
  attribute select {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_link =
  
  ## (link) defines an association or hypertextual link among elements or passages, of some type not more precisely specifiable by other elements. []
  element link {
    empty
    >> sch:pattern [
         id = "propy-link-linkTargets3-constraint-assert-25"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(normalize-space(@target),' ')"
             "You must supply at least two values for @target or  on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_linkGrp =
  
  ## (link group) defines a collection of associations or hypertextual links. []
  element linkGrp {
    (tei_model.descLike*, (tei_link | tei_ptr)+),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    empty
  }
tei_ab =
  
  ## (anonymous block) contains any component-level unit of text, acting as a container for phrase or inter level elements analogous to, but without the same constraints as, a paragraph. []
  element ab {
    tei_macro.abContent
    >> sch:pattern [
         id =
           "propy-ab-abstractModel-structure-ab-in-l-or-lg-constraint-report-25"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ab"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "(ancestor::tei:l or ancestor::tei:lg) and not( ancestor::tei:floatingText |parent::tei:figure |parent::tei:note )"
             "\x{a}" ~
             "        Abstract model violation: Lines may not contain higher-level divisions such as p or ab, unless ab is a child of figure or note, or is a descendant of floatingText.\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    tei_att.fragmentable.attributes,
    tei_att.written.attributes,
    empty
  }
tei_anchor =
  
  ## (Ankerpunkt) f√ºgt an einer Stelle im Text eine Kennung ein, unabh√§ngig von der Textstruktur. [ ]
  element anchor {
    empty, tei_att.global.attributes, tei_att.typed.attributes, empty
  }
tei_seg =
  
  ## (arbitr√§res Segment) beschreibt Segmente eines Texts unterhalb des Chunk-Level. [  ]
  element seg {
    tei_macro.paraContent,
    tei_att.global.attributes,
    tei_att.segLike.attributes,
    tei_att.typed.attributes,
    tei_att.written.attributes,
    tei_att.notated.attributes,
    empty
  }
tei_when =
  
  ## indicates a point in time either relative to other elements in the same timeline tag, or absolutely. []
  element when {
    empty,
    tei_att.global.attributes,
    
    ## supplies an absolute value for the time.
    attribute absolute {
      xsd:date
      | xsd:gYear
      | xsd:gMonth
      | xsd:gDay
      | xsd:gYearMonth
      | xsd:gMonthDay
      | xsd:time
      | xsd:dateTime
    }?,
    [
      a:documentation [
        "specifies the unit of time in which the "
        ns1:code [ "@interval" ]
        " value is expressed, if this is not inherited from the parent "
        ns1:code [ "<timeline>" ]
        ".\x{a}" ~
        "Suggested values include: 1] d (days); 2] h (hours); 3] min (minutes); 4] s (seconds); 5] ms (milliseconds)"
      ]
    ]
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies a time interval either as a number or as one of the keywords defined by the datatype teidata.interval
    attribute interval {
      xsd:float
      | (
         ##
         "regular"
         | 
           ##
           "irregular"
         | 
           ##
           "unknown")
    }?,
    [
      a:documentation [
        "identifies the reference point for determining the time of the current "
        ns1:code [ "<when>" ]
        " element, which is obtained by adding the interval to the time of the reference point."
      ]
    ]
    attribute since {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_timeline =
  
  ## (timeline) provides a set of ordered points in time which can be linked to elements of a spoken text to create a temporal alignment of that text. []
  element timeline {
    tei_when+,
    tei_att.global.attributes,
    
    ## designates the origin of the timeline, i.e. the time at which it begins.
    attribute origin {
      xsd:anyURI { pattern = "\S+" }
    }?,
    [
      a:documentation [
        "specifies the unit of time corresponding to the "
        ns1:code [ "@interval" ]
        " value of the timeline or of its constituent points in time.\x{a}" ~
        "Suggested values include: 1] d (days); 2] h (hours); 3] min (minutes); 4] s (seconds); 5] ms (milliseconds)"
      ]
    ]
    attribute unit {
      
      ## (days) 
      "d"
      | 
        ## (hours) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (seconds) 
        "s"
      | 
        ## (milliseconds) 
        "ms"
      | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## specifies a time interval either as a positive integral value or using one of a set of predefined codes.
    attribute interval {
      xsd:float
      | (
         ##
         "regular"
         | 
           ##
           "irregular"
         | 
           ##
           "unknown")
    }?,
    empty
  }
tei_join =
  
  ## (join) identifies a possibly fragmented segment of text, by pointing at the possibly discontiguous elements which compose it. []
  element join {
    ((tei_model.descLike | tei_model.certLike)*)
    >> sch:pattern [
         id = "propy-join-joinTargets3-constraint-assert-26"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "\x{a}" ~
             "You must supply at least two values for @target on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attributes,
    
    ## specifies the name of an element which this aggregation may be understood to represent.
    attribute result { xsd:Name }?,
    
    ## indicates whether the targets to be joined include the entire element indicated (the entire subtree including its root), or just the children of the target (the branches of the subtree).
    [ a:defaultValue = "root" ]
    attribute scope {
      [
        a:documentation [
          "the rooted subtrees indicated by the "
          ns1:code [ "@target" ]
          " attribute are joined, each subtree become a child of the virtual element created by the join"
        ]
      ]
      "root"
      | [
          a:documentation [
            "the children of the subtrees indicated by the "
            ns1:code [ "@target" ]
            " attribute become the children of the virtual element (i.e. the roots of the subtrees are discarded)"
          ]
        ]
        "branches"
    }?,
    empty
  }
tei_joinGrp =
  [
    a:documentation [
      "(join group) groups a collection of "
      ns1:code [ "<join>" ]
      " elements and possibly pointers. []"
    ]
  ]
  element joinGrp {
    ((tei_gloss | tei_model.descLike)*, (tei_join | tei_ptr)+),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    [
      a:documentation [
        "supplies the default value for the "
        ns1:code [ "@result" ]
        " on each "
        ns1:code [ "<join>" ]
        " included within the group."
      ]
    ]
    attribute result { xsd:Name }?,
    empty
  }
tei_alt =
  
  ## (alternation) identifies an alternation or a set of choices among elements or passages. []
  element alt {
    empty,
    tei_att.global.attributes,
    tei_att.pointing.attribute.targetLang,
    tei_att.pointing.attribute.evaluate,
    tei_att.typed.attributes,
    
    ## specifies the destination of the reference by supplying one or more URI References
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" },
        xsd:anyURI { pattern = "\S+" },
        xsd:anyURI { pattern = "\S+" }*
      }
    }?,
    
    ## states whether the alternations gathered in this collection are exclusive or inclusive.
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at most one of the alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that one or more of the alternatives occur.
        "incl"
    }?,
    [
      a:documentation [
        "If "
        ns1:code [ "@mode" ]
        " is excl, each weight states the probability that the corresponding alternative occurs. If "
        ns1:code [ "@mode" ]
        " is incl each weight states the probability that the corresponding alternative occurs given that at least one of the other alternatives occurs."
      ]
    ]
    attribute weights {
      list { xsd:double, xsd:double, xsd:double* }
    }?,
    empty
  }
tei_altGrp =
  [
    a:documentation [
      "(alternation group) groups a collection of "
      ns1:code [ "<alt>" ]
      " elements and possibly pointers. []"
    ]
  ]
  element altGrp {
    (tei_model.descLike*, (tei_alt | tei_ptr)*),
    tei_att.global.attributes,
    tei_att.pointing.group.attributes,
    
    ## states whether the alternations gathered in this collection are exclusive or inclusive.
    [ a:defaultValue = "excl" ]
    attribute mode {
      
      ## (exclusive) indicates that the alternation is exclusive, i.e. that at most one of the alternatives occurs.
      "excl"
      | 
        ## (inclusive) indicates that the alternation is not exclusive, i.e. that one or more of the alternatives occur.
        "incl"
    }?,
    empty
  }
tei_standOff =
  
  ## Functions as a container element for linked data, contextual information, and stand-off annotations embedded in a TEI document. []
  element standOff {
    (tei_model.standOffPart+)
    >> sch:pattern [
         id =
           "propy-standOff-nested_standOff_should_be_typed-constraint-assert-27"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:standOff"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@type or not(ancestor::tei:standOff)"
             "This\x{a}" ~
             "      "
             sch:name [ ]
             " element must have a @type attribute, since it is\x{a}" ~
             "      nested inside a "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_listAnnotation =
  [
    a:documentation [
      "contains a list of annotations, typically encoded as "
      ns1:code [ "<annotation>" ]
      ", "
      ns1:code [ "<annotationBlock>" ]
      ", or "
      ns1:code [ "<note>" ]
      ", possibly organized with nested "
      ns1:code [ "<listAnnotation>" ]
      " elements. []"
    ]
  ]
  element listAnnotation {
    (tei_model.headLike*,
     tei_model.labelLike*,
     (tei_model.annotationLike | tei_listAnnotation)+),
    tei_att.global.attributes,
    tei_att.typed.attributes,
    tei_att.notated.attributes,
    tei_att.declaring.attributes,
    empty
  }
tei_annotation =
  [
    a:documentation [
      "represents an annotation following the "
      ns1:a [
        href = "#WADM"
        "Web\x{a}" ~
        "      Annotation Data Model"
      ]
      ". []"
    ]
  ]
  element annotation {
    (tei_respStmt*,
     tei_revisionDesc*,
     tei_licence*,
     tei_model.annotationPart.body*),
    tei_att.global.attribute.n,
    tei_att.global.attribute.xmllang,
    tei_att.global.attribute.xmlbase,
    tei_att.global.attribute.xmlspace,
    tei_att.global.rendition.attribute.rend,
    tei_att.global.rendition.attribute.style,
    tei_att.global.rendition.attribute.rendition,
    tei_att.global.linking.attribute.corresp,
    tei_att.global.linking.attribute.synch,
    tei_att.global.linking.attribute.sameAs,
    tei_att.global.linking.attribute.copyOf,
    tei_att.global.linking.attribute.next,
    tei_att.global.linking.attribute.prev,
    tei_att.global.linking.attribute.exclude,
    tei_att.global.linking.attribute.select,
    tei_att.global.facs.attribute.facs,
    tei_att.global.change.attribute.change,
    tei_att.global.responsibility.attribute.cert,
    tei_att.global.responsibility.attribute.resp,
    tei_att.global.source.attribute.source,
    tei_att.pointing.attribute.targetLang,
    tei_att.pointing.attribute.evaluate,
    
    ## (identifier) provides a unique identifier for the element bearing the attribute.
    attribute xml:id { xsd:ID },
    
    ## specifies the destination of the reference by supplying one or more URI References
    attribute target {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    },
    
    ##
    attribute motivation {
      list {
        (
         ## intent is to assess the target resource in some way, rather than simply make a comment about it
         "assessing"
         | 
           ## intent is to create a bookmark to the target or part thereof
           "bookmarking"
         | 
           ## intent is to classify the target in some way
           "classifying"
         | 
           ## intent is to comment about the target
           "commenting"
         | 
           ## intent is to describe the target, rather than (for example) comment on it
           "describing"
         | 
           ## intent is to request an edit or a change to the target resource
           "editing"
         | 
           ## intent is to highlight the target resource or a segment thereof
           "highlighting"
         | 
           ## intent is to assign an identity to the target
           "identifying"
         | 
           ## intent is to link to a resource related to the target
           "linking"
         | 
           ## intent is to assign some value or quality to the target
           "moderating"
         | 
           ## intent is to ask a question about the target
           "questioning"
         | 
           ## intent is to reply to a previous statement, either an annotation or another resource
           "replying"
         | 
           ## intent is to associate a tag with the target
           "tagging")+
      }
    }?,
    empty
  }
tei_model.rdgLike = tei_rdg
tei_model.rdgPart =
  tei_wit | tei_witStart | tei_witEnd | tei_lacunaStart | tei_lacunaEnd
tei_att.rdgPart.attributes = tei_att.rdgPart.attribute.wit
tei_att.rdgPart.attribute.wit =
  
  ## (witness or witnesses) contains a space-delimited list of one or more sigla indicating the witnesses to this reading beginning or ending at this point.
  attribute wit {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.witnessed.attributes = tei_att.witnessed.attribute.wit
tei_att.witnessed.attribute.wit =
  
  ## (witness or witnesses) contains a space-delimited list of one or more pointers indicating the witnesses which attest to a given reading.
  attribute wit {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_att.textCritical.attributes =
  tei_att.written.attributes,
  tei_att.textCritical.attribute.type,
  tei_att.textCritical.attribute.cause,
  tei_att.textCritical.attribute.varSeq,
  tei_att.textCritical.attribute.require,
  tei_att.typed.attribute.subtype
tei_att.textCritical.attribute.type =
  
  ## classifies the reading according to some useful typology.
  ## Sample values include: 1] substantive (substantive); 2] orthographic (orthographic)
  attribute type {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.textCritical.attribute.cause =
  
  ## classifies the cause for the variant reading, according to any appropriate typology of possible origins.
  ## Sample values include: 1] homeoteleuton; 2] homeoarchy; 3] paleographicConfusion; 4] haplography; 5] dittography; 6] falseEmendation
  attribute cause {
    xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_att.textCritical.attribute.varSeq =
  
  ## (variant sequence) provides a number indicating the position of this reading in a sequence, when there is reason to presume a sequence to the variants. 
  attribute varSeq { xsd:nonNegativeInteger }?
tei_att.textCritical.attribute.require =
  
  ## points to other readings that are required when adopting the current reading or lemma.
  attribute require {
    list {
      xsd:anyURI { pattern = "\S+" }+
    }
  }?
tei_app =
  
  ## (apparatus entry) contains one entry in a critical apparatus, with an optional lemma and usually one or more readings or notes on the relevant passage. []
  element app {
    (tei_lem?,
     (tei_model.rdgLike
      | tei_model.noteLike
      | tei_witDetail
      | tei_wit
      | tei_rdgGrp)*),
    tei_att.global.attributes,
    tei_att.typed.attribute.subtype,
    
    ## classifies the variation contained in this element according to some convenient typology.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## identifies the beginning of the lemma in the base text.
    attribute from {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## identifies the endpoint of the lemma in the base text.
    attribute to {
      xsd:anyURI { pattern = "\S+" }
    }?,
    
    ## (location) indicates the location of the variation, when the location-referenced method of apparatus markup is used.
    attribute loc {
      list {
        xsd:token { pattern = "[^\p{C}\p{Z}]+" }+
      }
    }?,
    empty
  }
tei_listApp =
  
  ## (list of apparatus entries) contains a list of apparatus entries. []
  element listApp {
    (tei_model.headLike*, tei_desc*, (tei_app | tei_listApp)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    tei_att.declarable.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_lem =
  
  ## (lemma) contains the lemma, or base text, of a textual variation. []
  element lem {
    (text
     | tei_model.divLike
     | tei_model.divPart
     | tei_titlePage
     | tei_argument
     | tei_byline
     | tei_docAuthor
     | tei_docDate
     | tei_docEdition
     | tei_docImprint
     | tei_docTitle
     | tei_epigraph
     | tei_imprimatur
     | tei_titlePart
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    tei_att.witnessed.attributes,
    empty
  }
tei_rdg =
  
  ## (reading) contains a single reading within a textual variation. []
  element rdg {
    (text
     | tei_model.divLike
     | tei_model.divPart
     | tei_titlePage
     | tei_argument
     | tei_byline
     | tei_docAuthor
     | tei_docDate
     | tei_docEdition
     | tei_docImprint
     | tei_docTitle
     | tei_epigraph
     | tei_imprimatur
     | tei_titlePart
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.inter
     | tei_model.global
     | tei_model.rdgPart)*,
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    tei_att.witnessed.attributes,
    empty
  }
tei_rdgGrp =
  
  ## (reading group) within a textual variation, groups two or more readings perceived to have a genetic relationship or other affinity. []
  element rdgGrp {
    (tei_lem?,
     (tei_model.rdgLike
      | tei_model.noteLike
      | tei_witDetail
      | tei_wit
      | tei_rdgGrp)*)
    >> sch:pattern [
         id = "propy-rdgGrp-only1lem-constraint-assert-28"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rdgGrp"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "count(tei:lem) < 2"
             "Only one <lem> element may appear within a <rdgGrp>"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    tei_att.global.attributes,
    tei_att.textCritical.attributes,
    empty
  }
tei_witDetail =
  
  ## (witness detail) gives further information about a particular witness, or witnesses, to a particular reading. []
  element witDetail {
    (text
     | tei_model.gLike
     | tei_model.phrase
     | tei_model.global
     | tei_bibl)*,
    tei_att.global.attributes,
    tei_att.placement.attributes,
    tei_att.pointing.attributes,
    tei_att.typed.attribute.subtype,
    
    ## describes the type of information given about the witness.
    attribute type {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    }?,
    
    ## (witnesses) indicates the sigil or sigla identifying the witness or witnesses to which the detail refers.
    attribute wit {
      list {
        xsd:anyURI { pattern = "\S+" }+
      }
    },
    empty
  }
tei_wit =
  
  ## (wit) contains a list of one or more sigla of witnesses attesting a given reading, in a textual variation. []
  element wit {
    tei_macro.phraseSeq,
    tei_att.global.attributes,
    tei_att.rdgPart.attributes,
    empty
  }
tei_listWit =
  
  ## (witness list) lists definitions for all the witnesses referred to by a critical apparatus, optionally grouped hierarchically. []
  element listWit {
    (tei_model.headLike?, tei_desc*, (tei_witness | tei_listWit)+),
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_witness =
  
  ## (witness) contains either a description of a single witness referred to within the critical apparatus, or a list of witnesses which is to be referred to by a single sigil. []
  element witness {
    (text
     | tei_model.limitedPhrase
     | tei_model.inter
     | tei_note
     | tei_object)*,
    tei_att.global.attributes,
    tei_att.sortable.attributes,
    empty
  }
tei_witStart =
  
  ## (fragmented witness start) indicates the beginning, or resumption, of the text of a fragmentary witness. []
  element witStart {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_witEnd =
  
  ## (fragmented witness end) indicates the end, or suspension, of the text of a fragmentary witness. []
  element witEnd {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_lacunaStart =
  
  ## (lacuna start) indicates the beginning of a lacuna in the text of a mostly complete textual witness. []
  element lacunaStart {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_lacunaEnd =
  
  ## (lacuna end) indicates the end of a lacuna in a mostly complete textual witness. []
  element lacunaEnd {
    empty, tei_att.global.attributes, tei_att.rdgPart.attributes, empty
  }
tei_variantEncoding =
  
  ## (variant encoding) gibt die Methode an, nach der die textkritischen Varianten kodiert sind. []
  element variantEncoding {
    empty,
    tei_att.global.attributes,
    
    ## gibt die Methode an, nach der textkritische Apparat kodiert ist.
    attribute method {
      
      ## apparatus uses line numbers or other canonical reference scheme referenced in a base text.
      "location-referenced"
      | 
        ## apparatus indicates the precise locations of the beginning and ending of each lemma relative to a base text.
        "double-end-point"
      | 
        ## alternate readings of a passage are given in parallel in the text; no notion of a base text is necessary.
        "parallel-segmentation"
    },
    
    ## gibt an, ob der Apparat innerhalb oder au√üerhalb des Textes erscheint.
    attribute location {
      
      ## apparatus appears within the running text.
      "internal"
      | 
        ## apparatus appears outside the base text.
        "external"
    }
    >> sch:pattern [
         id =
           "propy-variantEncoding-location-variantEncodingLocation-constraint-rule-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:variantEncoding"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "@location eq 'external' and @method eq 'parallel-segmentation'"
             "\x{a}" ~
             '              The @location value "external" is inconsistent with the\x{a}' ~
             "              parallel-segmentation method of apparatus markup."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    empty
  }
tei_att.gaijiProp.attributes =
  tei_att.gaijiProp.attribute.name,
  tei_att.gaijiProp.attribute.value,
  tei_att.gaijiProp.attribute.version
tei_att.gaijiProp.attribute.name =
  
  ## provides the name of the character or glyph property being defined.
  attribute name { xsd:NCName }
tei_att.gaijiProp.attribute.value =
  
  ## provides the value of the character or glyph property being defined.
  attribute value { xsd:string }
tei_att.gaijiProp.attribute.version =
  
  ## gibt die Versionsnummer eines externen Standards an, in dem dieser Eigenschaftsname definiert ist.
  ## Suggested values include: 1] 1.0.1; 2] 1.1; 3] 2.0; 4] 2.1; 5] 3.0; 6] 3.1; 7] 3.2; 8] 4.0; 9] 4.1; 10] 5.0; 11] 5.1; 12] 5.2; 13] 6.0; 14] 6.1; 15] 6.2; 16] 6.3; 17] 7.0; 18] 8.0; 19] 9.0; 20] 10.0; 21] 11.0; 22] 12.0; 23] 12.1; 24] unassigned
  attribute version {
    
    ##
    "1.0.1"
    | 
      ##
      "1.1"
    | 
      ##
      "2.0"
    | 
      ##
      "2.1"
    | 
      ##
      "3.0"
    | 
      ##
      "3.1"
    | 
      ##
      "3.2"
    | 
      ##
      "4.0"
    | 
      ##
      "4.1"
    | 
      ##
      "5.0"
    | 
      ##
      "5.1"
    | 
      ##
      "5.2"
    | 
      ##
      "6.0"
    | 
      ##
      "6.1"
    | 
      ##
      "6.2"
    | 
      ##
      "6.3"
    | 
      ##
      "7.0"
    | 
      ##
      "8.0"
    | 
      ##
      "9.0"
    | 
      ##
      "10.0"
    | 
      ##
      "11.0"
    | 
      ##
      "12.0"
    | 
      ##
      "12.1"
    | 
      ##
      "unassigned"
    | xsd:token { pattern = "[^\p{C}\p{Z}]+" }
  }?
tei_g =
  
  ## (character or glyph) represents a glyph, or a non-standard character. []
  element g {
    text,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    
    ## points to a description of the character or glyph intended.
    attribute ref {
      xsd:anyURI { pattern = "\S+" }
    }?,
    empty
  }
tei_charDecl =
  
  ## (character declarations) provides information about nonstandard characters and glyphs. []
  element charDecl {
    (tei_desc?, (tei_char | tei_glyph)+),
    tei_att.global.attributes,
    empty
  }
tei_char =
  
  ## (character) provides descriptive information about a character. []
  element char {
    (tei_unicodeProp
     | tei_unihanProp
     | tei_localProp
     | tei_mapping
     | tei_figure
     | tei_model.graphicLike
     | tei_model.noteLike
     | tei_model.descLike)*,
    tei_att.global.attributes,
    empty
  }
tei_glyph =
  
  ## (character glyph) provides descriptive information about a character glyph. []
  element glyph {
    (tei_unicodeProp
     | tei_unihanProp
     | tei_localProp
     | tei_mapping
     | tei_figure
     | tei_model.graphicLike
     | tei_model.noteLike
     | tei_model.descLike)*,
    tei_att.global.attributes,
    empty
  }
tei_localProp =
  
  ## (locally defined property) provides a locally defined character (or glyph) property. []
  element localProp {
    empty,
    tei_att.global.attributes,
    tei_att.gaijiProp.attributes,
    empty
  }
tei_mapping =
  [
    a:documentation [
      "(character mapping) contains one or more characters which are related to the parent character or glyph in some respect, as specified by the "
      ns1:code [ "@type" ]
      " attribute. []"
    ]
  ]
  element mapping {
    tei_macro.xtext,
    tei_att.global.attributes,
    tei_att.typed.attributes,
    empty
  }
tei_unihanProp =
  
  ## (unihan property) holds the name and value of a normative or informative Unihan character (or glyph) property as part of its attributes. []
  element unihanProp {
    empty,
    tei_att.global.attributes,
    tei_att.gaijiProp.attribute.version,
    
    ## specifies the normalized name of a unicode han database (Unihan) property
    attribute name {
      
      ##
      "kZVariant"
      | 
        ##
        "kAccountingNumeric"
      | 
        ##
        "kBigFive"
      | 
        ##
        "kCCCII"
      | 
        ##
        "kCNS1986"
      | 
        ##
        "kCNS1992"
      | 
        ##
        "kCangjie"
      | 
        ##
        "kCantonese"
      | 
        ##
        "kCheungBauer"
      | 
        ##
        "kCheungBauerIndex"
      | 
        ##
        "kCihaiT"
      | 
        ##
        "kCompatibilityVariant"
      | 
        ##
        "kCowles"
      | 
        ##
        "kDaeJaweon"
      | 
        ##
        "kDefinition"
      | 
        ##
        "kEACC"
      | 
        ##
        "kFenn"
      | 
        ##
        "kFennIndex"
      | 
        ##
        "kFourCornerCode"
      | 
        ##
        "kFrequency"
      | 
        ##
        "kGB0"
      | 
        ##
        "kGB1"
      | 
        ##
        "kGB3"
      | 
        ##
        "kGB5"
      | 
        ##
        "kGB7"
      | 
        ##
        "kGB8"
      | 
        ##
        "kGSR"
      | 
        ##
        "kGradeLevel"
      | 
        ##
        "kHDZRadBreak"
      | 
        ##
        "kHKGlyph"
      | 
        ##
        "kHKSCS"
      | 
        ##
        "kHanYu"
      | 
        ##
        "kHangul"
      | 
        ##
        "kHanyuPinlu"
      | 
        ##
        "kHanyuPinyin"
      | 
        ##
        "kIBMJapan"
      | 
        ##
        "kIICore"
      | 
        ##
        "kIRGDaeJaweon"
      | 
        ##
        "kIRGDaiKanwaZiten"
      | 
        ##
        "kIRGHanyuDaZidian"
      | 
        ##
        "kIRGKangXi"
      | 
        ##
        "kIRG_GSource"
      | 
        ##
        "kIRG_HSource"
      | 
        ##
        "kIRG_JSource"
      | 
        ##
        "kIRG_KPSource"
      | 
        ##
        "kIRG_KSource"
      | 
        ##
        "kIRG_MSource"
      | 
        ##
        "kIRG_TSource"
      | 
        ##
        "kIRG_USource"
      | 
        ##
        "kIRG_VSource"
      | 
        ##
        "kJIS0213"
      | 
        ##
        "kJa"
      | 
        ##
        "kJapaneseKun"
      | 
        ##
        "kJapaneseOn"
      | 
        ##
        "kJinmeiyoKanji"
      | 
        ##
        "kJis0"
      | 
        ##
        "kJis1"
      | 
        ##
        "kJoyoKanji"
      | 
        ##
        "kKPS0"
      | 
        ##
        "kKPS1"
      | 
        ##
        "kKSC0"
      | 
        ##
        "kKSC1"
      | 
        ##
        "kKangXi"
      | 
        ##
        "kKarlgren"
      | 
        ##
        "kKorean"
      | 
        ##
        "kKoreanEducationHanja"
      | 
        ##
        "kKoreanName"
      | 
        ##
        "kLau"
      | 
        ##
        "kMainlandTelegraph"
      | 
        ##
        "kMandarin"
      | 
        ##
        "kMatthews"
      | 
        ##
        "kMeyerWempe"
      | 
        ##
        "kMorohashi"
      | 
        ##
        "kNelson"
      | 
        ##
        "kOtherNumeric"
      | 
        ##
        "kPhonetic"
      | 
        ##
        "kPrimaryNumeric"
      | 
        ##
        "kPseudoGB1"
      | 
        ##
        "kRSAdobe_Japan1_6"
      | 
        ##
        "kRSJapanese"
      | 
        ##
        "kRSKanWa"
      | 
        ##
        "kRSKangXi"
      | 
        ##
        "kRSKorean"
      | 
        ##
        "kRSUnicode"
      | 
        ##
        "kSBGY"
      | 
        ##
        "kSemanticVariant"
      | 
        ##
        "kSimplifiedVariant"
      | 
        ##
        "kSpecializedSemanticVariant"
      | 
        ##
        "kTGH"
      | 
        ##
        "kTaiwanTelegraph"
      | 
        ##
        "kTang"
      | 
        ##
        "kTotalStrokes"
      | 
        ##
        "kTraditionalVariant"
      | 
        ##
        "kVietnamese"
      | 
        ##
        "kXHC1983"
      | 
        ##
        "kXerox"
    },
    
    ## specifies the value of a named Unihan property
    attribute value {
      xsd:token { pattern = "[^\p{C}\p{Z}]+" }
    },
    empty
  }
tei_unicodeProp =
  
  ## (unicode property) provides a Unicode property for a character (or glyph). []
  element unicodeProp {
    empty,
    tei_att.global.attributes,
    tei_att.gaijiProp.attribute.version,
    
    ## specifies the normalized name of a Unicode property.
    attribute name {
      
      ##
      "Age"
      | 
        ##
        "AHex"
      | 
        ##
        "Alpha"
      | 
        ##
        "Alphabetic"
      | 
        ##
        "ASCII_Hex_Digit"
      | 
        ##
        "bc"
      | 
        ##
        "Bidi_C"
      | 
        ##
        "Bidi_Class"
      | 
        ##
        "Bidi_Control"
      | 
        ##
        "Bidi_M"
      | 
        ##
        "Bidi_Mirrored"
      | 
        ##
        "Bidi_Mirroring_Glyph"
      | 
        ##
        "Bidi_Paired_Bracket"
      | 
        ##
        "Bidi_Paired_Bracket_Type"
      | 
        ##
        "blk"
      | 
        ##
        "Block"
      | 
        ##
        "bmg"
      | 
        ##
        "bpb"
      | 
        ##
        "bpt"
      | 
        ##
        "Canonical_Combining_Class"
      | 
        ##
        "Case_Folding"
      | 
        ##
        "Case_Ignorable"
      | 
        ##
        "Cased"
      | 
        ##
        "ccc"
      | 
        ##
        "CE"
      | 
        ##
        "cf"
      | 
        ##
        "Changes_When_Casefolded"
      | 
        ##
        "Changes_When_Casemapped"
      | 
        ##
        "Changes_When_Lowercased"
      | 
        ##
        "Changes_When_NFKC_Casefolded"
      | 
        ##
        "Changes_When_Titlecased"
      | 
        ##
        "Changes_When_Uppercased"
      | 
        ##
        "CI"
      | 
        ##
        "Comp_Ex"
      | 
        ##
        "Composition_Exclusion"
      | 
        ##
        "CWCF"
      | 
        ##
        "CWCM"
      | 
        ##
        "CWKCF"
      | 
        ##
        "CWL"
      | 
        ##
        "CWT"
      | 
        ##
        "CWU"
      | 
        ##
        "Dash"
      | 
        ##
        "Decomposition_Mapping"
      | 
        ##
        "Decomposition_Type"
      | 
        ##
        "Default_Ignorable_Code_Point"
      | 
        ##
        "Dep"
      | 
        ##
        "Deprecated"
      | 
        ##
        "DI"
      | 
        ##
        "Dia"
      | 
        ##
        "Diacritic"
      | 
        ##
        "dm"
      | 
        ##
        "dt"
      | 
        ##
        "ea"
      | 
        ##
        "East_Asian_Width"
      | 
        ##
        "EqUIdeo"
      | 
        ##
        "Equivalent_Unified_Ideograph"
      | 
        ##
        "Expands_On_NFC"
      | 
        ##
        "Expands_On_NFD"
      | 
        ##
        "Expands_On_NFKC"
      | 
        ##
        "Expands_On_NFKD"
      | 
        ##
        "Ext"
      | 
        ##
        "Extender"
      | 
        ##
        "FC_NFKC"
      | 
        ##
        "FC_NFKC_Closure"
      | 
        ##
        "Full_Composition_Exclusion"
      | 
        ##
        "gc"
      | 
        ##
        "GCB"
      | 
        ##
        "General_Category"
      | 
        ##
        "Gr_Base"
      | 
        ##
        "Gr_Ext"
      | 
        ##
        "Gr_Link"
      | 
        ##
        "Grapheme_Base"
      | 
        ##
        "Grapheme_Cluster_Break"
      | 
        ##
        "Grapheme_Extend"
      | 
        ##
        "Grapheme_Link"
      | 
        ##
        "Hangul_Syllable_Type"
      | 
        ##
        "Hex"
      | 
        ##
        "Hex_Digit"
      | 
        ##
        "hst"
      | 
        ##
        "Hyphen"
      | 
        ##
        "ID_Continue"
      | 
        ##
        "ID_Start"
      | 
        ##
        "IDC"
      | 
        ##
        "Ideo"
      | 
        ##
        "Ideographic"
      | 
        ##
        "IDS"
      | 
        ##
        "IDS_Binary_Operator"
      | 
        ##
        "IDS_Trinary_Operator"
      | 
        ##
        "IDSB"
      | 
        ##
        "IDST"
      | 
        ##
        "Indic_Positional_Category"
      | 
        ##
        "Indic_Syllabic_Category"
      | 
        ##
        "InPC"
      | 
        ##
        "InSC"
      | 
        ##
        "isc"
      | 
        ##
        "ISO_Comment"
      | 
        ##
        "Jamo_Short_Name"
      | 
        ##
        "jg"
      | 
        ##
        "Join_C"
      | 
        ##
        "Join_Control"
      | 
        ##
        "Joining_Group"
      | 
        ##
        "Joining_Type"
      | 
        ##
        "JSN"
      | 
        ##
        "jt"
      | 
        ##
        "kAccountingNumeric"
      | 
        ##
        "kCompatibilityVariant"
      | 
        ##
        "kIICore"
      | 
        ##
        "kIRG_GSource"
      | 
        ##
        "kIRG_HSource"
      | 
        ##
        "kIRG_JSource"
      | 
        ##
        "kIRG_KPSource"
      | 
        ##
        "kIRG_KSource"
      | 
        ##
        "kIRG_MSource"
      | 
        ##
        "kIRG_TSource"
      | 
        ##
        "kIRG_USource"
      | 
        ##
        "kIRG_VSource"
      | 
        ##
        "kOtherNumeric"
      | 
        ##
        "kPrimaryNumeric"
      | 
        ##
        "kRSUnicode"
      | 
        ##
        "lb"
      | 
        ##
        "lc"
      | 
        ##
        "Line_Break"
      | 
        ##
        "LOE"
      | 
        ##
        "Logical_Order_Exception"
      | 
        ##
        "Lower"
      | 
        ##
        "Lowercase"
      | 
        ##
        "Lowercase_Mapping"
      | 
        ##
        "Math"
      | 
        ##
        "na"
      | 
        ##
        "na1"
      | 
        ##
        "Name"
      | 
        ##
        "Name_Alias"
      | 
        ##
        "NChar"
      | 
        ##
        "NFC_QC"
      | 
        ##
        "NFC_Quick_Check"
      | 
        ##
        "NFD_QC"
      | 
        ##
        "NFD_Quick_Check"
      | 
        ##
        "NFKC_Casefold"
      | 
        ##
        "NFKC_CF"
      | 
        ##
        "NFKC_QC"
      | 
        ##
        "NFKC_Quick_Check"
      | 
        ##
        "NFKD_QC"
      | 
        ##
        "NFKD_Quick_Check"
      | 
        ##
        "Noncharacter_Code_Point"
      | 
        ##
        "nt"
      | 
        ##
        "Numeric_Type"
      | 
        ##
        "Numeric_Value"
      | 
        ##
        "nv"
      | 
        ##
        "OAlpha"
      | 
        ##
        "ODI"
      | 
        ##
        "OGr_Ext"
      | 
        ##
        "OIDC"
      | 
        ##
        "OIDS"
      | 
        ##
        "OLower"
      | 
        ##
        "OMath"
      | 
        ##
        "Other_Alphabetic"
      | 
        ##
        "Other_Default_Ignorable_Code_Point"
      | 
        ##
        "Other_Grapheme_Extend"
      | 
        ##
        "Other_ID_Continue"
      | 
        ##
        "Other_ID_Start"
      | 
        ##
        "Other_Lowercase"
      | 
        ##
        "Other_Math"
      | 
        ##
        "Other_Uppercase"
      | 
        ##
        "OUpper"
      | 
        ##
        "Pat_Syn"
      | 
        ##
        "Pat_WS"
      | 
        ##
        "Pattern_Syntax"
      | 
        ##
        "Pattern_White_Space"
      | 
        ##
        "PCM"
      | 
        ##
        "Prepended_Concatenation_Mark"
      | 
        ##
        "QMark"
      | 
        ##
        "Quotation_Mark"
      | 
        ##
        "Radical"
      | 
        ##
        "Regional_Indicator"
      | 
        ##
        "RI"
      | 
        ##
        "SB"
      | 
        ##
        "sc"
      | 
        ##
        "scf"
      | 
        ##
        "Script"
      | 
        ##
        "Script_Extensions"
      | 
        ##
        "scx"
      | 
        ##
        "SD"
      | 
        ##
        "Sentence_Break"
      | 
        ##
        "Sentence_Terminal"
      | 
        ##
        "Simple_Case_Folding"
      | 
        ##
        "Simple_Lowercase_Mapping"
      | 
        ##
        "Simple_Titlecase_Mapping"
      | 
        ##
        "Simple_Uppercase_Mapping"
      | 
        ##
        "slc"
      | 
        ##
        "Soft_Dotted"
      | 
        ##
        "stc"
      | 
        ##
        "STerm"
      | 
        ##
        "suc"
      | 
        ##
        "tc"
      | 
        ##
        "Term"
      | 
        ##
        "Terminal_Punctuation"
      | 
        ##
        "Titlecase_Mapping"
      | 
        ##
        "uc"
      | 
        ##
        "UIdeo"
      | 
        ##
        "Unicode_1_Name"
      | 
        ##
        "Unified_Ideograph"
      | 
        ##
        "Upper"
      | 
        ##
        "Uppercase"
      | 
        ##
        "Uppercase_Mapping"
      | 
        ##
        "Variation_Selector"
      | 
        ##
        "Vertical_Orientation"
      | 
        ##
        "vo"
      | 
        ##
        "VS"
      | 
        ##
        "WB"
      | 
        ##
        "White_Space"
      | 
        ##
        "Word_Break"
      | 
        ##
        "WSpace"
      | 
        ##
        "XID_Continue"
      | 
        ##
        "XID_Start"
      | 
        ##
        "XIDC"
      | 
        ##
        "XIDS"
      | 
        ##
        "XO_NFC"
      | 
        ##
        "XO_NFD"
      | 
        ##
        "XO_NFKC"
      | 
        ##
        "XO_NFKD"
    },
    
    ## specifies the value of a named Unicode property.
    attribute value { xsd:string },
    empty
  }
start = tei_TEI
